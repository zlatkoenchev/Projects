

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 10 22:07:02 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F1847
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	stringtext12,global,class=STRCODE,delta=2
    16                           	psect	stringtext13,global,class=STRCODE,delta=2
    17                           	psect	stringtext14,global,class=STRCODE,delta=2
    18                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	cinit,global,class=CODE,merge=1,delta=2
    35                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    36                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    37                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    38                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    39                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    40                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	swtext1,local,class=CONST,delta=2
    45                           	psect	text1,local,class=CODE,merge=1,delta=2
    46                           	psect	text2,local,class=CODE,merge=1,delta=2
    47                           	psect	text3,local,class=CODE,merge=1,delta=2
    48                           	psect	text4,local,class=CODE,merge=1,delta=2
    49                           	psect	text5,local,class=CODE,merge=1,delta=2
    50                           	psect	text6,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	swtext2,local,class=CONST,delta=2
    56                           	psect	text15,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text52,local,class=CODE,merge=1,delta=2
    61                           	psect	text56,local,class=CODE,merge=1,delta=2
    62                           	psect	text60,local,class=CODE,merge=1,delta=2
    63                           	psect	text61,local,class=CODE,merge=1,delta=2
    64                           	psect	text64,local,class=CODE,merge=1,delta=2
    65                           	psect	text85,local,class=CODE,merge=1,delta=2
    66                           	psect	text86,local,class=CODE,merge=1,delta=2
    67                           	psect	text92,local,class=CODE,merge=1,delta=2
    68                           	psect	text93,local,class=CODE,merge=1,delta=2
    69                           	psect	text95,local,class=CODE,merge=1,delta=2
    70                           	psect	text97,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	pa_nodes0,global,class=CODE,delta=2
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 1.45
    76                           ; Generated 16/11/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1847 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011B                     	;# 
   168  011D                     	;# 
   169  011E                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0191                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0193                     	;# 
   178  0194                     	;# 
   179  0195                     	;# 
   180  0196                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019D                     	;# 
   190  019E                     	;# 
   191  019F                     	;# 
   192  020C                     	;# 
   193  020D                     	;# 
   194  0211                     	;# 
   195  0211                     	;# 
   196  0212                     	;# 
   197  0212                     	;# 
   198  0213                     	;# 
   199  0213                     	;# 
   200  0214                     	;# 
   201  0214                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0217                     	;# 
   209  0219                     	;# 
   210  021A                     	;# 
   211  021B                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0298                     	;# 
   225  0298                     	;# 
   226  0299                     	;# 
   227  029A                     	;# 
   228  029B                     	;# 
   229  029C                     	;# 
   230  029C                     	;# 
   231  029D                     	;# 
   232  029E                     	;# 
   233  029E                     	;# 
   234  0311                     	;# 
   235  0311                     	;# 
   236  0312                     	;# 
   237  0313                     	;# 
   238  0318                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031A                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0415                     	;# 
   251  0416                     	;# 
   252  0417                     	;# 
   253  041C                     	;# 
   254  041D                     	;# 
   255  041E                     	;# 
   256  0FE4                     	;# 
   257  0FE5                     	;# 
   258  0FE6                     	;# 
   259  0FE7                     	;# 
   260  0FE8                     	;# 
   261  0FE9                     	;# 
   262  0FEA                     	;# 
   263  0FEB                     	;# 
   264  0FED                     	;# 
   265  0FEE                     	;# 
   266  0FEF                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  0111                     	;# 
   316  0112                     	;# 
   317  0113                     	;# 
   318  0114                     	;# 
   319  0115                     	;# 
   320  0116                     	;# 
   321  0117                     	;# 
   322  0118                     	;# 
   323  0119                     	;# 
   324  011A                     	;# 
   325  011B                     	;# 
   326  011D                     	;# 
   327  011E                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0194                     	;# 
   337  0195                     	;# 
   338  0196                     	;# 
   339  0199                     	;# 
   340  019A                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019C                     	;# 
   347  019D                     	;# 
   348  019E                     	;# 
   349  019F                     	;# 
   350  020C                     	;# 
   351  020D                     	;# 
   352  0211                     	;# 
   353  0211                     	;# 
   354  0212                     	;# 
   355  0212                     	;# 
   356  0213                     	;# 
   357  0213                     	;# 
   358  0214                     	;# 
   359  0214                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0216                     	;# 
   365  0217                     	;# 
   366  0217                     	;# 
   367  0219                     	;# 
   368  021A                     	;# 
   369  021B                     	;# 
   370  021C                     	;# 
   371  021D                     	;# 
   372  021E                     	;# 
   373  021F                     	;# 
   374  0291                     	;# 
   375  0291                     	;# 
   376  0292                     	;# 
   377  0293                     	;# 
   378  0294                     	;# 
   379  0295                     	;# 
   380  0295                     	;# 
   381  0296                     	;# 
   382  0298                     	;# 
   383  0298                     	;# 
   384  0299                     	;# 
   385  029A                     	;# 
   386  029B                     	;# 
   387  029C                     	;# 
   388  029C                     	;# 
   389  029D                     	;# 
   390  029E                     	;# 
   391  029E                     	;# 
   392  0311                     	;# 
   393  0311                     	;# 
   394  0312                     	;# 
   395  0313                     	;# 
   396  0318                     	;# 
   397  0318                     	;# 
   398  0319                     	;# 
   399  031A                     	;# 
   400  0394                     	;# 
   401  0395                     	;# 
   402  0396                     	;# 
   403  039A                     	;# 
   404  039C                     	;# 
   405  039D                     	;# 
   406  039E                     	;# 
   407  039F                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  0091                     	;# 
   457  0092                     	;# 
   458  0093                     	;# 
   459  0094                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0097                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009A                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  0111                     	;# 
   474  0112                     	;# 
   475  0113                     	;# 
   476  0114                     	;# 
   477  0115                     	;# 
   478  0116                     	;# 
   479  0117                     	;# 
   480  0118                     	;# 
   481  0119                     	;# 
   482  011A                     	;# 
   483  011B                     	;# 
   484  011D                     	;# 
   485  011E                     	;# 
   486  018C                     	;# 
   487  018D                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0193                     	;# 
   494  0194                     	;# 
   495  0195                     	;# 
   496  0196                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019F                     	;# 
   508  020C                     	;# 
   509  020D                     	;# 
   510  0211                     	;# 
   511  0211                     	;# 
   512  0212                     	;# 
   513  0212                     	;# 
   514  0213                     	;# 
   515  0213                     	;# 
   516  0214                     	;# 
   517  0214                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0215                     	;# 
   521  0216                     	;# 
   522  0216                     	;# 
   523  0217                     	;# 
   524  0217                     	;# 
   525  0219                     	;# 
   526  021A                     	;# 
   527  021B                     	;# 
   528  021C                     	;# 
   529  021D                     	;# 
   530  021E                     	;# 
   531  021F                     	;# 
   532  0291                     	;# 
   533  0291                     	;# 
   534  0292                     	;# 
   535  0293                     	;# 
   536  0294                     	;# 
   537  0295                     	;# 
   538  0295                     	;# 
   539  0296                     	;# 
   540  0298                     	;# 
   541  0298                     	;# 
   542  0299                     	;# 
   543  029A                     	;# 
   544  029B                     	;# 
   545  029C                     	;# 
   546  029C                     	;# 
   547  029D                     	;# 
   548  029E                     	;# 
   549  029E                     	;# 
   550  0311                     	;# 
   551  0311                     	;# 
   552  0312                     	;# 
   553  0313                     	;# 
   554  0318                     	;# 
   555  0318                     	;# 
   556  0319                     	;# 
   557  031A                     	;# 
   558  0394                     	;# 
   559  0395                     	;# 
   560  0396                     	;# 
   561  039A                     	;# 
   562  039C                     	;# 
   563  039D                     	;# 
   564  039E                     	;# 
   565  039F                     	;# 
   566  0415                     	;# 
   567  0416                     	;# 
   568  0417                     	;# 
   569  041C                     	;# 
   570  041D                     	;# 
   571  041E                     	;# 
   572  0FE4                     	;# 
   573  0FE5                     	;# 
   574  0FE6                     	;# 
   575  0FE7                     	;# 
   576  0FE8                     	;# 
   577  0FE9                     	;# 
   578  0FEA                     	;# 
   579  0FEB                     	;# 
   580  0FED                     	;# 
   581  0FEE                     	;# 
   582  0FEF                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000D                     	;# 
   597  0011                     	;# 
   598  0012                     	;# 
   599  0013                     	;# 
   600  0014                     	;# 
   601  0015                     	;# 
   602  0016                     	;# 
   603  0016                     	;# 
   604  0017                     	;# 
   605  0018                     	;# 
   606  0019                     	;# 
   607  001A                     	;# 
   608  001B                     	;# 
   609  001C                     	;# 
   610  001E                     	;# 
   611  001F                     	;# 
   612  008C                     	;# 
   613  008D                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0093                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  010C                     	;# 
   630  010D                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0118                     	;# 
   639  0119                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011D                     	;# 
   643  011E                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  0191                     	;# 
   647  0191                     	;# 
   648  0192                     	;# 
   649  0193                     	;# 
   650  0193                     	;# 
   651  0193                     	;# 
   652  0194                     	;# 
   653  0195                     	;# 
   654  0196                     	;# 
   655  0199                     	;# 
   656  019A                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019C                     	;# 
   662  019C                     	;# 
   663  019D                     	;# 
   664  019E                     	;# 
   665  019F                     	;# 
   666  020C                     	;# 
   667  020D                     	;# 
   668  0211                     	;# 
   669  0211                     	;# 
   670  0212                     	;# 
   671  0212                     	;# 
   672  0213                     	;# 
   673  0213                     	;# 
   674  0214                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0219                     	;# 
   684  021A                     	;# 
   685  021B                     	;# 
   686  021C                     	;# 
   687  021D                     	;# 
   688  021E                     	;# 
   689  021F                     	;# 
   690  0291                     	;# 
   691  0291                     	;# 
   692  0292                     	;# 
   693  0293                     	;# 
   694  0294                     	;# 
   695  0295                     	;# 
   696  0295                     	;# 
   697  0296                     	;# 
   698  0298                     	;# 
   699  0298                     	;# 
   700  0299                     	;# 
   701  029A                     	;# 
   702  029B                     	;# 
   703  029C                     	;# 
   704  029C                     	;# 
   705  029D                     	;# 
   706  029E                     	;# 
   707  029E                     	;# 
   708  0311                     	;# 
   709  0311                     	;# 
   710  0312                     	;# 
   711  0313                     	;# 
   712  0318                     	;# 
   713  0318                     	;# 
   714  0319                     	;# 
   715  031A                     	;# 
   716  0394                     	;# 
   717  0395                     	;# 
   718  0396                     	;# 
   719  039A                     	;# 
   720  039C                     	;# 
   721  039D                     	;# 
   722  039E                     	;# 
   723  039F                     	;# 
   724  0415                     	;# 
   725  0416                     	;# 
   726  0417                     	;# 
   727  041C                     	;# 
   728  041D                     	;# 
   729  041E                     	;# 
   730  0FE4                     	;# 
   731  0FE5                     	;# 
   732  0FE6                     	;# 
   733  0FE7                     	;# 
   734  0FE8                     	;# 
   735  0FE9                     	;# 
   736  0FEA                     	;# 
   737  0FEB                     	;# 
   738  0FED                     	;# 
   739  0FEE                     	;# 
   740  0FEF                     	;# 
   741  0000                     	;# 
   742  0001                     	;# 
   743  0002                     	;# 
   744  0003                     	;# 
   745  0004                     	;# 
   746  0005                     	;# 
   747  0006                     	;# 
   748  0007                     	;# 
   749  0008                     	;# 
   750  0009                     	;# 
   751  000A                     	;# 
   752  000B                     	;# 
   753  000C                     	;# 
   754  000D                     	;# 
   755  0011                     	;# 
   756  0012                     	;# 
   757  0013                     	;# 
   758  0014                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  001E                     	;# 
   769  001F                     	;# 
   770  008C                     	;# 
   771  008D                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0093                     	;# 
   775  0094                     	;# 
   776  0095                     	;# 
   777  0096                     	;# 
   778  0097                     	;# 
   779  0098                     	;# 
   780  0099                     	;# 
   781  009A                     	;# 
   782  009B                     	;# 
   783  009B                     	;# 
   784  009C                     	;# 
   785  009D                     	;# 
   786  009E                     	;# 
   787  010C                     	;# 
   788  010D                     	;# 
   789  0111                     	;# 
   790  0112                     	;# 
   791  0113                     	;# 
   792  0114                     	;# 
   793  0115                     	;# 
   794  0116                     	;# 
   795  0117                     	;# 
   796  0118                     	;# 
   797  0119                     	;# 
   798  011A                     	;# 
   799  011B                     	;# 
   800  011D                     	;# 
   801  011E                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  0191                     	;# 
   805  0191                     	;# 
   806  0192                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0193                     	;# 
   810  0194                     	;# 
   811  0195                     	;# 
   812  0196                     	;# 
   813  0199                     	;# 
   814  019A                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019C                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019E                     	;# 
   823  019F                     	;# 
   824  020C                     	;# 
   825  020D                     	;# 
   826  0211                     	;# 
   827  0211                     	;# 
   828  0212                     	;# 
   829  0212                     	;# 
   830  0213                     	;# 
   831  0213                     	;# 
   832  0214                     	;# 
   833  0214                     	;# 
   834  0215                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0216                     	;# 
   838  0216                     	;# 
   839  0217                     	;# 
   840  0217                     	;# 
   841  0219                     	;# 
   842  021A                     	;# 
   843  021B                     	;# 
   844  021C                     	;# 
   845  021D                     	;# 
   846  021E                     	;# 
   847  021F                     	;# 
   848  0291                     	;# 
   849  0291                     	;# 
   850  0292                     	;# 
   851  0293                     	;# 
   852  0294                     	;# 
   853  0295                     	;# 
   854  0295                     	;# 
   855  0296                     	;# 
   856  0298                     	;# 
   857  0298                     	;# 
   858  0299                     	;# 
   859  029A                     	;# 
   860  029B                     	;# 
   861  029C                     	;# 
   862  029C                     	;# 
   863  029D                     	;# 
   864  029E                     	;# 
   865  029E                     	;# 
   866  0311                     	;# 
   867  0311                     	;# 
   868  0312                     	;# 
   869  0313                     	;# 
   870  0318                     	;# 
   871  0318                     	;# 
   872  0319                     	;# 
   873  031A                     	;# 
   874  0394                     	;# 
   875  0395                     	;# 
   876  0396                     	;# 
   877  039A                     	;# 
   878  039C                     	;# 
   879  039D                     	;# 
   880  039E                     	;# 
   881  039F                     	;# 
   882  0415                     	;# 
   883  0416                     	;# 
   884  0417                     	;# 
   885  041C                     	;# 
   886  041D                     	;# 
   887  041E                     	;# 
   888  0FE4                     	;# 
   889  0FE5                     	;# 
   890  0FE6                     	;# 
   891  0FE7                     	;# 
   892  0FE8                     	;# 
   893  0FE9                     	;# 
   894  0FEA                     	;# 
   895  0FEB                     	;# 
   896  0FED                     	;# 
   897  0FEE                     	;# 
   898  0FEF                     	;# 
   899  0000                     	;# 
   900  0001                     	;# 
   901  0002                     	;# 
   902  0003                     	;# 
   903  0004                     	;# 
   904  0005                     	;# 
   905  0006                     	;# 
   906  0007                     	;# 
   907  0008                     	;# 
   908  0009                     	;# 
   909  000A                     	;# 
   910  000B                     	;# 
   911  000C                     	;# 
   912  000D                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0013                     	;# 
   916  0014                     	;# 
   917  0015                     	;# 
   918  0016                     	;# 
   919  0016                     	;# 
   920  0017                     	;# 
   921  0018                     	;# 
   922  0019                     	;# 
   923  001A                     	;# 
   924  001B                     	;# 
   925  001C                     	;# 
   926  001E                     	;# 
   927  001F                     	;# 
   928  008C                     	;# 
   929  008D                     	;# 
   930  0091                     	;# 
   931  0092                     	;# 
   932  0093                     	;# 
   933  0094                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  010C                     	;# 
   946  010D                     	;# 
   947  0111                     	;# 
   948  0112                     	;# 
   949  0113                     	;# 
   950  0114                     	;# 
   951  0115                     	;# 
   952  0116                     	;# 
   953  0117                     	;# 
   954  0118                     	;# 
   955  0119                     	;# 
   956  011A                     	;# 
   957  011B                     	;# 
   958  011D                     	;# 
   959  011E                     	;# 
   960  018C                     	;# 
   961  018D                     	;# 
   962  0191                     	;# 
   963  0191                     	;# 
   964  0192                     	;# 
   965  0193                     	;# 
   966  0193                     	;# 
   967  0193                     	;# 
   968  0194                     	;# 
   969  0195                     	;# 
   970  0196                     	;# 
   971  0199                     	;# 
   972  019A                     	;# 
   973  019B                     	;# 
   974  019B                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019C                     	;# 
   978  019C                     	;# 
   979  019D                     	;# 
   980  019E                     	;# 
   981  019F                     	;# 
   982  020C                     	;# 
   983  020D                     	;# 
   984  0211                     	;# 
   985  0211                     	;# 
   986  0212                     	;# 
   987  0212                     	;# 
   988  0213                     	;# 
   989  0213                     	;# 
   990  0214                     	;# 
   991  0214                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0215                     	;# 
   995  0216                     	;# 
   996  0216                     	;# 
   997  0217                     	;# 
   998  0217                     	;# 
   999  0219                     	;# 
  1000  021A                     	;# 
  1001  021B                     	;# 
  1002  021C                     	;# 
  1003  021D                     	;# 
  1004  021E                     	;# 
  1005  021F                     	;# 
  1006  0291                     	;# 
  1007  0291                     	;# 
  1008  0292                     	;# 
  1009  0293                     	;# 
  1010  0294                     	;# 
  1011  0295                     	;# 
  1012  0295                     	;# 
  1013  0296                     	;# 
  1014  0298                     	;# 
  1015  0298                     	;# 
  1016  0299                     	;# 
  1017  029A                     	;# 
  1018  029B                     	;# 
  1019  029C                     	;# 
  1020  029C                     	;# 
  1021  029D                     	;# 
  1022  029E                     	;# 
  1023  029E                     	;# 
  1024  0311                     	;# 
  1025  0311                     	;# 
  1026  0312                     	;# 
  1027  0313                     	;# 
  1028  0318                     	;# 
  1029  0318                     	;# 
  1030  0319                     	;# 
  1031  031A                     	;# 
  1032  0394                     	;# 
  1033  0395                     	;# 
  1034  0396                     	;# 
  1035  039A                     	;# 
  1036  039C                     	;# 
  1037  039D                     	;# 
  1038  039E                     	;# 
  1039  039F                     	;# 
  1040  0415                     	;# 
  1041  0416                     	;# 
  1042  0417                     	;# 
  1043  041C                     	;# 
  1044  041D                     	;# 
  1045  041E                     	;# 
  1046  0FE4                     	;# 
  1047  0FE5                     	;# 
  1048  0FE6                     	;# 
  1049  0FE7                     	;# 
  1050  0FE8                     	;# 
  1051  0FE9                     	;# 
  1052  0FEA                     	;# 
  1053  0FEB                     	;# 
  1054  0FED                     	;# 
  1055  0FEE                     	;# 
  1056  0FEF                     	;# 
  1057  0000                     	;# 
  1058  0001                     	;# 
  1059  0002                     	;# 
  1060  0003                     	;# 
  1061  0004                     	;# 
  1062  0005                     	;# 
  1063  0006                     	;# 
  1064  0007                     	;# 
  1065  0008                     	;# 
  1066  0009                     	;# 
  1067  000A                     	;# 
  1068  000B                     	;# 
  1069  000C                     	;# 
  1070  000D                     	;# 
  1071  0011                     	;# 
  1072  0012                     	;# 
  1073  0013                     	;# 
  1074  0014                     	;# 
  1075  0015                     	;# 
  1076  0016                     	;# 
  1077  0016                     	;# 
  1078  0017                     	;# 
  1079  0018                     	;# 
  1080  0019                     	;# 
  1081  001A                     	;# 
  1082  001B                     	;# 
  1083  001C                     	;# 
  1084  001E                     	;# 
  1085  001F                     	;# 
  1086  008C                     	;# 
  1087  008D                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0094                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0097                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009A                     	;# 
  1098  009B                     	;# 
  1099  009B                     	;# 
  1100  009C                     	;# 
  1101  009D                     	;# 
  1102  009E                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  0111                     	;# 
  1106  0112                     	;# 
  1107  0113                     	;# 
  1108  0114                     	;# 
  1109  0115                     	;# 
  1110  0116                     	;# 
  1111  0117                     	;# 
  1112  0118                     	;# 
  1113  0119                     	;# 
  1114  011A                     	;# 
  1115  011B                     	;# 
  1116  011D                     	;# 
  1117  011E                     	;# 
  1118  018C                     	;# 
  1119  018D                     	;# 
  1120  0191                     	;# 
  1121  0191                     	;# 
  1122  0192                     	;# 
  1123  0193                     	;# 
  1124  0193                     	;# 
  1125  0193                     	;# 
  1126  0194                     	;# 
  1127  0195                     	;# 
  1128  0196                     	;# 
  1129  0199                     	;# 
  1130  019A                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019C                     	;# 
  1136  019C                     	;# 
  1137  019D                     	;# 
  1138  019E                     	;# 
  1139  019F                     	;# 
  1140  020C                     	;# 
  1141  020D                     	;# 
  1142  0211                     	;# 
  1143  0211                     	;# 
  1144  0212                     	;# 
  1145  0212                     	;# 
  1146  0213                     	;# 
  1147  0213                     	;# 
  1148  0214                     	;# 
  1149  0214                     	;# 
  1150  0215                     	;# 
  1151  0215                     	;# 
  1152  0215                     	;# 
  1153  0216                     	;# 
  1154  0216                     	;# 
  1155  0217                     	;# 
  1156  0217                     	;# 
  1157  0219                     	;# 
  1158  021A                     	;# 
  1159  021B                     	;# 
  1160  021C                     	;# 
  1161  021D                     	;# 
  1162  021E                     	;# 
  1163  021F                     	;# 
  1164  0291                     	;# 
  1165  0291                     	;# 
  1166  0292                     	;# 
  1167  0293                     	;# 
  1168  0294                     	;# 
  1169  0295                     	;# 
  1170  0295                     	;# 
  1171  0296                     	;# 
  1172  0298                     	;# 
  1173  0298                     	;# 
  1174  0299                     	;# 
  1175  029A                     	;# 
  1176  029B                     	;# 
  1177  029C                     	;# 
  1178  029C                     	;# 
  1179  029D                     	;# 
  1180  029E                     	;# 
  1181  029E                     	;# 
  1182  0311                     	;# 
  1183  0311                     	;# 
  1184  0312                     	;# 
  1185  0313                     	;# 
  1186  0318                     	;# 
  1187  0318                     	;# 
  1188  0319                     	;# 
  1189  031A                     	;# 
  1190  0394                     	;# 
  1191  0395                     	;# 
  1192  0396                     	;# 
  1193  039A                     	;# 
  1194  039C                     	;# 
  1195  039D                     	;# 
  1196  039E                     	;# 
  1197  039F                     	;# 
  1198  0415                     	;# 
  1199  0416                     	;# 
  1200  0417                     	;# 
  1201  041C                     	;# 
  1202  041D                     	;# 
  1203  041E                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEF                     	;# 
  1215  0000                     	;# 
  1216  0001                     	;# 
  1217  0002                     	;# 
  1218  0003                     	;# 
  1219  0004                     	;# 
  1220  0005                     	;# 
  1221  0006                     	;# 
  1222  0007                     	;# 
  1223  0008                     	;# 
  1224  0009                     	;# 
  1225  000A                     	;# 
  1226  000B                     	;# 
  1227  000C                     	;# 
  1228  000D                     	;# 
  1229  0011                     	;# 
  1230  0012                     	;# 
  1231  0013                     	;# 
  1232  0014                     	;# 
  1233  0015                     	;# 
  1234  0016                     	;# 
  1235  0016                     	;# 
  1236  0017                     	;# 
  1237  0018                     	;# 
  1238  0019                     	;# 
  1239  001A                     	;# 
  1240  001B                     	;# 
  1241  001C                     	;# 
  1242  001E                     	;# 
  1243  001F                     	;# 
  1244  008C                     	;# 
  1245  008D                     	;# 
  1246  0091                     	;# 
  1247  0092                     	;# 
  1248  0093                     	;# 
  1249  0094                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  010C                     	;# 
  1262  010D                     	;# 
  1263  0111                     	;# 
  1264  0112                     	;# 
  1265  0113                     	;# 
  1266  0114                     	;# 
  1267  0115                     	;# 
  1268  0116                     	;# 
  1269  0117                     	;# 
  1270  0118                     	;# 
  1271  0119                     	;# 
  1272  011A                     	;# 
  1273  011B                     	;# 
  1274  011D                     	;# 
  1275  011E                     	;# 
  1276  018C                     	;# 
  1277  018D                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0193                     	;# 
  1284  0194                     	;# 
  1285  0195                     	;# 
  1286  0196                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019C                     	;# 
  1294  019C                     	;# 
  1295  019D                     	;# 
  1296  019E                     	;# 
  1297  019F                     	;# 
  1298  020C                     	;# 
  1299  020D                     	;# 
  1300  0211                     	;# 
  1301  0211                     	;# 
  1302  0212                     	;# 
  1303  0212                     	;# 
  1304  0213                     	;# 
  1305  0213                     	;# 
  1306  0214                     	;# 
  1307  0214                     	;# 
  1308  0215                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0216                     	;# 
  1313  0217                     	;# 
  1314  0217                     	;# 
  1315  0219                     	;# 
  1316  021A                     	;# 
  1317  021B                     	;# 
  1318  021C                     	;# 
  1319  021D                     	;# 
  1320  021E                     	;# 
  1321  021F                     	;# 
  1322  0291                     	;# 
  1323  0291                     	;# 
  1324  0292                     	;# 
  1325  0293                     	;# 
  1326  0294                     	;# 
  1327  0295                     	;# 
  1328  0295                     	;# 
  1329  0296                     	;# 
  1330  0298                     	;# 
  1331  0298                     	;# 
  1332  0299                     	;# 
  1333  029A                     	;# 
  1334  029B                     	;# 
  1335  029C                     	;# 
  1336  029C                     	;# 
  1337  029D                     	;# 
  1338  029E                     	;# 
  1339  029E                     	;# 
  1340  0311                     	;# 
  1341  0311                     	;# 
  1342  0312                     	;# 
  1343  0313                     	;# 
  1344  0318                     	;# 
  1345  0318                     	;# 
  1346  0319                     	;# 
  1347  031A                     	;# 
  1348  0394                     	;# 
  1349  0395                     	;# 
  1350  0396                     	;# 
  1351  039A                     	;# 
  1352  039C                     	;# 
  1353  039D                     	;# 
  1354  039E                     	;# 
  1355  039F                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  041C                     	;# 
  1360  041D                     	;# 
  1361  041E                     	;# 
  1362  0FE4                     	;# 
  1363  0FE5                     	;# 
  1364  0FE6                     	;# 
  1365  0FE7                     	;# 
  1366  0FE8                     	;# 
  1367  0FE9                     	;# 
  1368  0FEA                     	;# 
  1369  0FEB                     	;# 
  1370  0FED                     	;# 
  1371  0FEE                     	;# 
  1372  0FEF                     	;# 
  1373  0000                     	;# 
  1374  0001                     	;# 
  1375  0002                     	;# 
  1376  0003                     	;# 
  1377  0004                     	;# 
  1378  0005                     	;# 
  1379  0006                     	;# 
  1380  0007                     	;# 
  1381  0008                     	;# 
  1382  0009                     	;# 
  1383  000A                     	;# 
  1384  000B                     	;# 
  1385  000C                     	;# 
  1386  000D                     	;# 
  1387  0011                     	;# 
  1388  0012                     	;# 
  1389  0013                     	;# 
  1390  0014                     	;# 
  1391  0015                     	;# 
  1392  0016                     	;# 
  1393  0016                     	;# 
  1394  0017                     	;# 
  1395  0018                     	;# 
  1396  0019                     	;# 
  1397  001A                     	;# 
  1398  001B                     	;# 
  1399  001C                     	;# 
  1400  001E                     	;# 
  1401  001F                     	;# 
  1402  008C                     	;# 
  1403  008D                     	;# 
  1404  0091                     	;# 
  1405  0092                     	;# 
  1406  0093                     	;# 
  1407  0094                     	;# 
  1408  0095                     	;# 
  1409  0096                     	;# 
  1410  0097                     	;# 
  1411  0098                     	;# 
  1412  0099                     	;# 
  1413  009A                     	;# 
  1414  009B                     	;# 
  1415  009B                     	;# 
  1416  009C                     	;# 
  1417  009D                     	;# 
  1418  009E                     	;# 
  1419  010C                     	;# 
  1420  010D                     	;# 
  1421  0111                     	;# 
  1422  0112                     	;# 
  1423  0113                     	;# 
  1424  0114                     	;# 
  1425  0115                     	;# 
  1426  0116                     	;# 
  1427  0117                     	;# 
  1428  0118                     	;# 
  1429  0119                     	;# 
  1430  011A                     	;# 
  1431  011B                     	;# 
  1432  011D                     	;# 
  1433  011E                     	;# 
  1434  018C                     	;# 
  1435  018D                     	;# 
  1436  0191                     	;# 
  1437  0191                     	;# 
  1438  0192                     	;# 
  1439  0193                     	;# 
  1440  0193                     	;# 
  1441  0193                     	;# 
  1442  0194                     	;# 
  1443  0195                     	;# 
  1444  0196                     	;# 
  1445  0199                     	;# 
  1446  019A                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019C                     	;# 
  1452  019C                     	;# 
  1453  019D                     	;# 
  1454  019E                     	;# 
  1455  019F                     	;# 
  1456  020C                     	;# 
  1457  020D                     	;# 
  1458  0211                     	;# 
  1459  0211                     	;# 
  1460  0212                     	;# 
  1461  0212                     	;# 
  1462  0213                     	;# 
  1463  0213                     	;# 
  1464  0214                     	;# 
  1465  0214                     	;# 
  1466  0215                     	;# 
  1467  0215                     	;# 
  1468  0215                     	;# 
  1469  0216                     	;# 
  1470  0216                     	;# 
  1471  0217                     	;# 
  1472  0217                     	;# 
  1473  0219                     	;# 
  1474  021A                     	;# 
  1475  021B                     	;# 
  1476  021C                     	;# 
  1477  021D                     	;# 
  1478  021E                     	;# 
  1479  021F                     	;# 
  1480  0291                     	;# 
  1481  0291                     	;# 
  1482  0292                     	;# 
  1483  0293                     	;# 
  1484  0294                     	;# 
  1485  0295                     	;# 
  1486  0295                     	;# 
  1487  0296                     	;# 
  1488  0298                     	;# 
  1489  0298                     	;# 
  1490  0299                     	;# 
  1491  029A                     	;# 
  1492  029B                     	;# 
  1493  029C                     	;# 
  1494  029C                     	;# 
  1495  029D                     	;# 
  1496  029E                     	;# 
  1497  029E                     	;# 
  1498  0311                     	;# 
  1499  0311                     	;# 
  1500  0312                     	;# 
  1501  0313                     	;# 
  1502  0318                     	;# 
  1503  0318                     	;# 
  1504  0319                     	;# 
  1505  031A                     	;# 
  1506  0394                     	;# 
  1507  0395                     	;# 
  1508  0396                     	;# 
  1509  039A                     	;# 
  1510  039C                     	;# 
  1511  039D                     	;# 
  1512  039E                     	;# 
  1513  039F                     	;# 
  1514  0415                     	;# 
  1515  0416                     	;# 
  1516  0417                     	;# 
  1517  041C                     	;# 
  1518  041D                     	;# 
  1519  041E                     	;# 
  1520  0FE4                     	;# 
  1521  0FE5                     	;# 
  1522  0FE6                     	;# 
  1523  0FE7                     	;# 
  1524  0FE8                     	;# 
  1525  0FE9                     	;# 
  1526  0FEA                     	;# 
  1527  0FEB                     	;# 
  1528  0FED                     	;# 
  1529  0FEE                     	;# 
  1530  0FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  0011                     	;# 
  1546  0012                     	;# 
  1547  0013                     	;# 
  1548  0014                     	;# 
  1549  0015                     	;# 
  1550  0016                     	;# 
  1551  0016                     	;# 
  1552  0017                     	;# 
  1553  0018                     	;# 
  1554  0019                     	;# 
  1555  001A                     	;# 
  1556  001B                     	;# 
  1557  001C                     	;# 
  1558  001E                     	;# 
  1559  001F                     	;# 
  1560  008C                     	;# 
  1561  008D                     	;# 
  1562  0091                     	;# 
  1563  0092                     	;# 
  1564  0093                     	;# 
  1565  0094                     	;# 
  1566  0095                     	;# 
  1567  0096                     	;# 
  1568  0097                     	;# 
  1569  0098                     	;# 
  1570  0099                     	;# 
  1571  009A                     	;# 
  1572  009B                     	;# 
  1573  009B                     	;# 
  1574  009C                     	;# 
  1575  009D                     	;# 
  1576  009E                     	;# 
  1577  010C                     	;# 
  1578  010D                     	;# 
  1579  0111                     	;# 
  1580  0112                     	;# 
  1581  0113                     	;# 
  1582  0114                     	;# 
  1583  0115                     	;# 
  1584  0116                     	;# 
  1585  0117                     	;# 
  1586  0118                     	;# 
  1587  0119                     	;# 
  1588  011A                     	;# 
  1589  011B                     	;# 
  1590  011D                     	;# 
  1591  011E                     	;# 
  1592  018C                     	;# 
  1593  018D                     	;# 
  1594  0191                     	;# 
  1595  0191                     	;# 
  1596  0192                     	;# 
  1597  0193                     	;# 
  1598  0193                     	;# 
  1599  0193                     	;# 
  1600  0194                     	;# 
  1601  0195                     	;# 
  1602  0196                     	;# 
  1603  0199                     	;# 
  1604  019A                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019B                     	;# 
  1608  019B                     	;# 
  1609  019C                     	;# 
  1610  019C                     	;# 
  1611  019D                     	;# 
  1612  019E                     	;# 
  1613  019F                     	;# 
  1614  020C                     	;# 
  1615  020D                     	;# 
  1616  0211                     	;# 
  1617  0211                     	;# 
  1618  0212                     	;# 
  1619  0212                     	;# 
  1620  0213                     	;# 
  1621  0213                     	;# 
  1622  0214                     	;# 
  1623  0214                     	;# 
  1624  0215                     	;# 
  1625  0215                     	;# 
  1626  0215                     	;# 
  1627  0216                     	;# 
  1628  0216                     	;# 
  1629  0217                     	;# 
  1630  0217                     	;# 
  1631  0219                     	;# 
  1632  021A                     	;# 
  1633  021B                     	;# 
  1634  021C                     	;# 
  1635  021D                     	;# 
  1636  021E                     	;# 
  1637  021F                     	;# 
  1638  0291                     	;# 
  1639  0291                     	;# 
  1640  0292                     	;# 
  1641  0293                     	;# 
  1642  0294                     	;# 
  1643  0295                     	;# 
  1644  0295                     	;# 
  1645  0296                     	;# 
  1646  0298                     	;# 
  1647  0298                     	;# 
  1648  0299                     	;# 
  1649  029A                     	;# 
  1650  029B                     	;# 
  1651  029C                     	;# 
  1652  029C                     	;# 
  1653  029D                     	;# 
  1654  029E                     	;# 
  1655  029E                     	;# 
  1656  0311                     	;# 
  1657  0311                     	;# 
  1658  0312                     	;# 
  1659  0313                     	;# 
  1660  0318                     	;# 
  1661  0318                     	;# 
  1662  0319                     	;# 
  1663  031A                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  039A                     	;# 
  1668  039C                     	;# 
  1669  039D                     	;# 
  1670  039E                     	;# 
  1671  039F                     	;# 
  1672  0415                     	;# 
  1673  0416                     	;# 
  1674  0417                     	;# 
  1675  041C                     	;# 
  1676  041D                     	;# 
  1677  041E                     	;# 
  1678  0FE4                     	;# 
  1679  0FE5                     	;# 
  1680  0FE6                     	;# 
  1681  0FE7                     	;# 
  1682  0FE8                     	;# 
  1683  0FE9                     	;# 
  1684  0FEA                     	;# 
  1685  0FEB                     	;# 
  1686  0FED                     	;# 
  1687  0FEE                     	;# 
  1688  0FEF                     	;# 
  1689  0000                     	;# 
  1690  0001                     	;# 
  1691  0002                     	;# 
  1692  0003                     	;# 
  1693  0004                     	;# 
  1694  0005                     	;# 
  1695  0006                     	;# 
  1696  0007                     	;# 
  1697  0008                     	;# 
  1698  0009                     	;# 
  1699  000A                     	;# 
  1700  000B                     	;# 
  1701  000C                     	;# 
  1702  000D                     	;# 
  1703  0011                     	;# 
  1704  0012                     	;# 
  1705  0013                     	;# 
  1706  0014                     	;# 
  1707  0015                     	;# 
  1708  0016                     	;# 
  1709  0016                     	;# 
  1710  0017                     	;# 
  1711  0018                     	;# 
  1712  0019                     	;# 
  1713  001A                     	;# 
  1714  001B                     	;# 
  1715  001C                     	;# 
  1716  001E                     	;# 
  1717  001F                     	;# 
  1718  008C                     	;# 
  1719  008D                     	;# 
  1720  0091                     	;# 
  1721  0092                     	;# 
  1722  0093                     	;# 
  1723  0094                     	;# 
  1724  0095                     	;# 
  1725  0096                     	;# 
  1726  0097                     	;# 
  1727  0098                     	;# 
  1728  0099                     	;# 
  1729  009A                     	;# 
  1730  009B                     	;# 
  1731  009B                     	;# 
  1732  009C                     	;# 
  1733  009D                     	;# 
  1734  009E                     	;# 
  1735  010C                     	;# 
  1736  010D                     	;# 
  1737  0111                     	;# 
  1738  0112                     	;# 
  1739  0113                     	;# 
  1740  0114                     	;# 
  1741  0115                     	;# 
  1742  0116                     	;# 
  1743  0117                     	;# 
  1744  0118                     	;# 
  1745  0119                     	;# 
  1746  011A                     	;# 
  1747  011B                     	;# 
  1748  011D                     	;# 
  1749  011E                     	;# 
  1750  018C                     	;# 
  1751  018D                     	;# 
  1752  0191                     	;# 
  1753  0191                     	;# 
  1754  0192                     	;# 
  1755  0193                     	;# 
  1756  0193                     	;# 
  1757  0193                     	;# 
  1758  0194                     	;# 
  1759  0195                     	;# 
  1760  0196                     	;# 
  1761  0199                     	;# 
  1762  019A                     	;# 
  1763  019B                     	;# 
  1764  019B                     	;# 
  1765  019B                     	;# 
  1766  019B                     	;# 
  1767  019C                     	;# 
  1768  019C                     	;# 
  1769  019D                     	;# 
  1770  019E                     	;# 
  1771  019F                     	;# 
  1772  020C                     	;# 
  1773  020D                     	;# 
  1774  0211                     	;# 
  1775  0211                     	;# 
  1776  0212                     	;# 
  1777  0212                     	;# 
  1778  0213                     	;# 
  1779  0213                     	;# 
  1780  0214                     	;# 
  1781  0214                     	;# 
  1782  0215                     	;# 
  1783  0215                     	;# 
  1784  0215                     	;# 
  1785  0216                     	;# 
  1786  0216                     	;# 
  1787  0217                     	;# 
  1788  0217                     	;# 
  1789  0219                     	;# 
  1790  021A                     	;# 
  1791  021B                     	;# 
  1792  021C                     	;# 
  1793  021D                     	;# 
  1794  021E                     	;# 
  1795  021F                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0298                     	;# 
  1805  0298                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029C                     	;# 
  1811  029D                     	;# 
  1812  029E                     	;# 
  1813  029E                     	;# 
  1814  0311                     	;# 
  1815  0311                     	;# 
  1816  0312                     	;# 
  1817  0313                     	;# 
  1818  0318                     	;# 
  1819  0318                     	;# 
  1820  0319                     	;# 
  1821  031A                     	;# 
  1822  0394                     	;# 
  1823  0395                     	;# 
  1824  0396                     	;# 
  1825  039A                     	;# 
  1826  039C                     	;# 
  1827  039D                     	;# 
  1828  039E                     	;# 
  1829  039F                     	;# 
  1830  0415                     	;# 
  1831  0416                     	;# 
  1832  0417                     	;# 
  1833  041C                     	;# 
  1834  041D                     	;# 
  1835  041E                     	;# 
  1836  0FE4                     	;# 
  1837  0FE5                     	;# 
  1838  0FE6                     	;# 
  1839  0FE7                     	;# 
  1840  0FE8                     	;# 
  1841  0FE9                     	;# 
  1842  0FEA                     	;# 
  1843  0FEB                     	;# 
  1844  0FED                     	;# 
  1845  0FEE                     	;# 
  1846  0FEF                     	;# 
  1847  0000                     	;# 
  1848  0001                     	;# 
  1849  0002                     	;# 
  1850  0003                     	;# 
  1851  0004                     	;# 
  1852  0005                     	;# 
  1853  0006                     	;# 
  1854  0007                     	;# 
  1855  0008                     	;# 
  1856  0009                     	;# 
  1857  000A                     	;# 
  1858  000B                     	;# 
  1859  000C                     	;# 
  1860  000D                     	;# 
  1861  0011                     	;# 
  1862  0012                     	;# 
  1863  0013                     	;# 
  1864  0014                     	;# 
  1865  0015                     	;# 
  1866  0016                     	;# 
  1867  0016                     	;# 
  1868  0017                     	;# 
  1869  0018                     	;# 
  1870  0019                     	;# 
  1871  001A                     	;# 
  1872  001B                     	;# 
  1873  001C                     	;# 
  1874  001E                     	;# 
  1875  001F                     	;# 
  1876  008C                     	;# 
  1877  008D                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0095                     	;# 
  1883  0096                     	;# 
  1884  0097                     	;# 
  1885  0098                     	;# 
  1886  0099                     	;# 
  1887  009A                     	;# 
  1888  009B                     	;# 
  1889  009B                     	;# 
  1890  009C                     	;# 
  1891  009D                     	;# 
  1892  009E                     	;# 
  1893  010C                     	;# 
  1894  010D                     	;# 
  1895  0111                     	;# 
  1896  0112                     	;# 
  1897  0113                     	;# 
  1898  0114                     	;# 
  1899  0115                     	;# 
  1900  0116                     	;# 
  1901  0117                     	;# 
  1902  0118                     	;# 
  1903  0119                     	;# 
  1904  011A                     	;# 
  1905  011B                     	;# 
  1906  011D                     	;# 
  1907  011E                     	;# 
  1908  018C                     	;# 
  1909  018D                     	;# 
  1910  0191                     	;# 
  1911  0191                     	;# 
  1912  0192                     	;# 
  1913  0193                     	;# 
  1914  0193                     	;# 
  1915  0193                     	;# 
  1916  0194                     	;# 
  1917  0195                     	;# 
  1918  0196                     	;# 
  1919  0199                     	;# 
  1920  019A                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019C                     	;# 
  1926  019C                     	;# 
  1927  019D                     	;# 
  1928  019E                     	;# 
  1929  019F                     	;# 
  1930  020C                     	;# 
  1931  020D                     	;# 
  1932  0211                     	;# 
  1933  0211                     	;# 
  1934  0212                     	;# 
  1935  0212                     	;# 
  1936  0213                     	;# 
  1937  0213                     	;# 
  1938  0214                     	;# 
  1939  0214                     	;# 
  1940  0215                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0216                     	;# 
  1944  0216                     	;# 
  1945  0217                     	;# 
  1946  0217                     	;# 
  1947  0219                     	;# 
  1948  021A                     	;# 
  1949  021B                     	;# 
  1950  021C                     	;# 
  1951  021D                     	;# 
  1952  021E                     	;# 
  1953  021F                     	;# 
  1954  0291                     	;# 
  1955  0291                     	;# 
  1956  0292                     	;# 
  1957  0293                     	;# 
  1958  0294                     	;# 
  1959  0295                     	;# 
  1960  0295                     	;# 
  1961  0296                     	;# 
  1962  0298                     	;# 
  1963  0298                     	;# 
  1964  0299                     	;# 
  1965  029A                     	;# 
  1966  029B                     	;# 
  1967  029C                     	;# 
  1968  029C                     	;# 
  1969  029D                     	;# 
  1970  029E                     	;# 
  1971  029E                     	;# 
  1972  0311                     	;# 
  1973  0311                     	;# 
  1974  0312                     	;# 
  1975  0313                     	;# 
  1976  0318                     	;# 
  1977  0318                     	;# 
  1978  0319                     	;# 
  1979  031A                     	;# 
  1980  0394                     	;# 
  1981  0395                     	;# 
  1982  0396                     	;# 
  1983  039A                     	;# 
  1984  039C                     	;# 
  1985  039D                     	;# 
  1986  039E                     	;# 
  1987  039F                     	;# 
  1988  0415                     	;# 
  1989  0416                     	;# 
  1990  0417                     	;# 
  1991  041C                     	;# 
  1992  041D                     	;# 
  1993  041E                     	;# 
  1994  0FE4                     	;# 
  1995  0FE5                     	;# 
  1996  0FE6                     	;# 
  1997  0FE7                     	;# 
  1998  0FE8                     	;# 
  1999  0FE9                     	;# 
  2000  0FEA                     	;# 
  2001  0FEB                     	;# 
  2002  0FED                     	;# 
  2003  0FEE                     	;# 
  2004  0FEF                     	;# 
  2005  0000                     	;# 
  2006  0001                     	;# 
  2007  0002                     	;# 
  2008  0003                     	;# 
  2009  0004                     	;# 
  2010  0005                     	;# 
  2011  0006                     	;# 
  2012  0007                     	;# 
  2013  0008                     	;# 
  2014  0009                     	;# 
  2015  000A                     	;# 
  2016  000B                     	;# 
  2017  000C                     	;# 
  2018  000D                     	;# 
  2019  0011                     	;# 
  2020  0012                     	;# 
  2021  0013                     	;# 
  2022  0014                     	;# 
  2023  0015                     	;# 
  2024  0016                     	;# 
  2025  0016                     	;# 
  2026  0017                     	;# 
  2027  0018                     	;# 
  2028  0019                     	;# 
  2029  001A                     	;# 
  2030  001B                     	;# 
  2031  001C                     	;# 
  2032  001E                     	;# 
  2033  001F                     	;# 
  2034  008C                     	;# 
  2035  008D                     	;# 
  2036  0091                     	;# 
  2037  0092                     	;# 
  2038  0093                     	;# 
  2039  0094                     	;# 
  2040  0095                     	;# 
  2041  0096                     	;# 
  2042  0097                     	;# 
  2043  0098                     	;# 
  2044  0099                     	;# 
  2045  009A                     	;# 
  2046  009B                     	;# 
  2047  009B                     	;# 
  2048  009C                     	;# 
  2049  009D                     	;# 
  2050  009E                     	;# 
  2051  010C                     	;# 
  2052  010D                     	;# 
  2053  0111                     	;# 
  2054  0112                     	;# 
  2055  0113                     	;# 
  2056  0114                     	;# 
  2057  0115                     	;# 
  2058  0116                     	;# 
  2059  0117                     	;# 
  2060  0118                     	;# 
  2061  0119                     	;# 
  2062  011A                     	;# 
  2063  011B                     	;# 
  2064  011D                     	;# 
  2065  011E                     	;# 
  2066  018C                     	;# 
  2067  018D                     	;# 
  2068  0191                     	;# 
  2069  0191                     	;# 
  2070  0192                     	;# 
  2071  0193                     	;# 
  2072  0193                     	;# 
  2073  0193                     	;# 
  2074  0194                     	;# 
  2075  0195                     	;# 
  2076  0196                     	;# 
  2077  0199                     	;# 
  2078  019A                     	;# 
  2079  019B                     	;# 
  2080  019B                     	;# 
  2081  019B                     	;# 
  2082  019B                     	;# 
  2083  019C                     	;# 
  2084  019C                     	;# 
  2085  019D                     	;# 
  2086  019E                     	;# 
  2087  019F                     	;# 
  2088  020C                     	;# 
  2089  020D                     	;# 
  2090  0211                     	;# 
  2091  0211                     	;# 
  2092  0212                     	;# 
  2093  0212                     	;# 
  2094  0213                     	;# 
  2095  0213                     	;# 
  2096  0214                     	;# 
  2097  0214                     	;# 
  2098  0215                     	;# 
  2099  0215                     	;# 
  2100  0215                     	;# 
  2101  0216                     	;# 
  2102  0216                     	;# 
  2103  0217                     	;# 
  2104  0217                     	;# 
  2105  0219                     	;# 
  2106  021A                     	;# 
  2107  021B                     	;# 
  2108  021C                     	;# 
  2109  021D                     	;# 
  2110  021E                     	;# 
  2111  021F                     	;# 
  2112  0291                     	;# 
  2113  0291                     	;# 
  2114  0292                     	;# 
  2115  0293                     	;# 
  2116  0294                     	;# 
  2117  0295                     	;# 
  2118  0295                     	;# 
  2119  0296                     	;# 
  2120  0298                     	;# 
  2121  0298                     	;# 
  2122  0299                     	;# 
  2123  029A                     	;# 
  2124  029B                     	;# 
  2125  029C                     	;# 
  2126  029C                     	;# 
  2127  029D                     	;# 
  2128  029E                     	;# 
  2129  029E                     	;# 
  2130  0311                     	;# 
  2131  0311                     	;# 
  2132  0312                     	;# 
  2133  0313                     	;# 
  2134  0318                     	;# 
  2135  0318                     	;# 
  2136  0319                     	;# 
  2137  031A                     	;# 
  2138  0394                     	;# 
  2139  0395                     	;# 
  2140  0396                     	;# 
  2141  039A                     	;# 
  2142  039C                     	;# 
  2143  039D                     	;# 
  2144  039E                     	;# 
  2145  039F                     	;# 
  2146  0415                     	;# 
  2147  0416                     	;# 
  2148  0417                     	;# 
  2149  041C                     	;# 
  2150  041D                     	;# 
  2151  041E                     	;# 
  2152  0FE4                     	;# 
  2153  0FE5                     	;# 
  2154  0FE6                     	;# 
  2155  0FE7                     	;# 
  2156  0FE8                     	;# 
  2157  0FE9                     	;# 
  2158  0FEA                     	;# 
  2159  0FEB                     	;# 
  2160  0FED                     	;# 
  2161  0FEE                     	;# 
  2162  0FEF                     	;# 
  2163  0000                     	;# 
  2164  0001                     	;# 
  2165  0002                     	;# 
  2166  0003                     	;# 
  2167  0004                     	;# 
  2168  0005                     	;# 
  2169  0006                     	;# 
  2170  0007                     	;# 
  2171  0008                     	;# 
  2172  0009                     	;# 
  2173  000A                     	;# 
  2174  000B                     	;# 
  2175  000C                     	;# 
  2176  000D                     	;# 
  2177  0011                     	;# 
  2178  0012                     	;# 
  2179  0013                     	;# 
  2180  0014                     	;# 
  2181  0015                     	;# 
  2182  0016                     	;# 
  2183  0016                     	;# 
  2184  0017                     	;# 
  2185  0018                     	;# 
  2186  0019                     	;# 
  2187  001A                     	;# 
  2188  001B                     	;# 
  2189  001C                     	;# 
  2190  001E                     	;# 
  2191  001F                     	;# 
  2192  008C                     	;# 
  2193  008D                     	;# 
  2194  0091                     	;# 
  2195  0092                     	;# 
  2196  0093                     	;# 
  2197  0094                     	;# 
  2198  0095                     	;# 
  2199  0096                     	;# 
  2200  0097                     	;# 
  2201  0098                     	;# 
  2202  0099                     	;# 
  2203  009A                     	;# 
  2204  009B                     	;# 
  2205  009B                     	;# 
  2206  009C                     	;# 
  2207  009D                     	;# 
  2208  009E                     	;# 
  2209  010C                     	;# 
  2210  010D                     	;# 
  2211  0111                     	;# 
  2212  0112                     	;# 
  2213  0113                     	;# 
  2214  0114                     	;# 
  2215  0115                     	;# 
  2216  0116                     	;# 
  2217  0117                     	;# 
  2218  0118                     	;# 
  2219  0119                     	;# 
  2220  011A                     	;# 
  2221  011B                     	;# 
  2222  011D                     	;# 
  2223  011E                     	;# 
  2224  018C                     	;# 
  2225  018D                     	;# 
  2226  0191                     	;# 
  2227  0191                     	;# 
  2228  0192                     	;# 
  2229  0193                     	;# 
  2230  0193                     	;# 
  2231  0193                     	;# 
  2232  0194                     	;# 
  2233  0195                     	;# 
  2234  0196                     	;# 
  2235  0199                     	;# 
  2236  019A                     	;# 
  2237  019B                     	;# 
  2238  019B                     	;# 
  2239  019B                     	;# 
  2240  019B                     	;# 
  2241  019C                     	;# 
  2242  019C                     	;# 
  2243  019D                     	;# 
  2244  019E                     	;# 
  2245  019F                     	;# 
  2246  020C                     	;# 
  2247  020D                     	;# 
  2248  0211                     	;# 
  2249  0211                     	;# 
  2250  0212                     	;# 
  2251  0212                     	;# 
  2252  0213                     	;# 
  2253  0213                     	;# 
  2254  0214                     	;# 
  2255  0214                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0215                     	;# 
  2259  0216                     	;# 
  2260  0216                     	;# 
  2261  0217                     	;# 
  2262  0217                     	;# 
  2263  0219                     	;# 
  2264  021A                     	;# 
  2265  021B                     	;# 
  2266  021C                     	;# 
  2267  021D                     	;# 
  2268  021E                     	;# 
  2269  021F                     	;# 
  2270  0291                     	;# 
  2271  0291                     	;# 
  2272  0292                     	;# 
  2273  0293                     	;# 
  2274  0294                     	;# 
  2275  0295                     	;# 
  2276  0295                     	;# 
  2277  0296                     	;# 
  2278  0298                     	;# 
  2279  0298                     	;# 
  2280  0299                     	;# 
  2281  029A                     	;# 
  2282  029B                     	;# 
  2283  029C                     	;# 
  2284  029C                     	;# 
  2285  029D                     	;# 
  2286  029E                     	;# 
  2287  029E                     	;# 
  2288  0311                     	;# 
  2289  0311                     	;# 
  2290  0312                     	;# 
  2291  0313                     	;# 
  2292  0318                     	;# 
  2293  0318                     	;# 
  2294  0319                     	;# 
  2295  031A                     	;# 
  2296  0394                     	;# 
  2297  0395                     	;# 
  2298  0396                     	;# 
  2299  039A                     	;# 
  2300  039C                     	;# 
  2301  039D                     	;# 
  2302  039E                     	;# 
  2303  039F                     	;# 
  2304  0415                     	;# 
  2305  0416                     	;# 
  2306  0417                     	;# 
  2307  041C                     	;# 
  2308  041D                     	;# 
  2309  041E                     	;# 
  2310  0FE4                     	;# 
  2311  0FE5                     	;# 
  2312  0FE6                     	;# 
  2313  0FE7                     	;# 
  2314  0FE8                     	;# 
  2315  0FE9                     	;# 
  2316  0FEA                     	;# 
  2317  0FEB                     	;# 
  2318  0FED                     	;# 
  2319  0FEE                     	;# 
  2320  0FEF                     	;# 
  2321  0000                     	;# 
  2322  0001                     	;# 
  2323  0002                     	;# 
  2324  0003                     	;# 
  2325  0004                     	;# 
  2326  0005                     	;# 
  2327  0006                     	;# 
  2328  0007                     	;# 
  2329  0008                     	;# 
  2330  0009                     	;# 
  2331  000A                     	;# 
  2332  000B                     	;# 
  2333  000C                     	;# 
  2334  000D                     	;# 
  2335  0011                     	;# 
  2336  0012                     	;# 
  2337  0013                     	;# 
  2338  0014                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001B                     	;# 
  2347  001C                     	;# 
  2348  001E                     	;# 
  2349  001F                     	;# 
  2350  008C                     	;# 
  2351  008D                     	;# 
  2352  0091                     	;# 
  2353  0092                     	;# 
  2354  0093                     	;# 
  2355  0094                     	;# 
  2356  0095                     	;# 
  2357  0096                     	;# 
  2358  0097                     	;# 
  2359  0098                     	;# 
  2360  0099                     	;# 
  2361  009A                     	;# 
  2362  009B                     	;# 
  2363  009B                     	;# 
  2364  009C                     	;# 
  2365  009D                     	;# 
  2366  009E                     	;# 
  2367  010C                     	;# 
  2368  010D                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0113                     	;# 
  2372  0114                     	;# 
  2373  0115                     	;# 
  2374  0116                     	;# 
  2375  0117                     	;# 
  2376  0118                     	;# 
  2377  0119                     	;# 
  2378  011A                     	;# 
  2379  011B                     	;# 
  2380  011D                     	;# 
  2381  011E                     	;# 
  2382  018C                     	;# 
  2383  018D                     	;# 
  2384  0191                     	;# 
  2385  0191                     	;# 
  2386  0192                     	;# 
  2387  0193                     	;# 
  2388  0193                     	;# 
  2389  0193                     	;# 
  2390  0194                     	;# 
  2391  0195                     	;# 
  2392  0196                     	;# 
  2393  0199                     	;# 
  2394  019A                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019D                     	;# 
  2402  019E                     	;# 
  2403  019F                     	;# 
  2404  020C                     	;# 
  2405  020D                     	;# 
  2406  0211                     	;# 
  2407  0211                     	;# 
  2408  0212                     	;# 
  2409  0212                     	;# 
  2410  0213                     	;# 
  2411  0213                     	;# 
  2412  0214                     	;# 
  2413  0214                     	;# 
  2414  0215                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0216                     	;# 
  2418  0216                     	;# 
  2419  0217                     	;# 
  2420  0217                     	;# 
  2421  0219                     	;# 
  2422  021A                     	;# 
  2423  021B                     	;# 
  2424  021C                     	;# 
  2425  021D                     	;# 
  2426  021E                     	;# 
  2427  021F                     	;# 
  2428  0291                     	;# 
  2429  0291                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0294                     	;# 
  2433  0295                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0298                     	;# 
  2437  0298                     	;# 
  2438  0299                     	;# 
  2439  029A                     	;# 
  2440  029B                     	;# 
  2441  029C                     	;# 
  2442  029C                     	;# 
  2443  029D                     	;# 
  2444  029E                     	;# 
  2445  029E                     	;# 
  2446  0311                     	;# 
  2447  0311                     	;# 
  2448  0312                     	;# 
  2449  0313                     	;# 
  2450  0318                     	;# 
  2451  0318                     	;# 
  2452  0319                     	;# 
  2453  031A                     	;# 
  2454  0394                     	;# 
  2455  0395                     	;# 
  2456  0396                     	;# 
  2457  039A                     	;# 
  2458  039C                     	;# 
  2459  039D                     	;# 
  2460  039E                     	;# 
  2461  039F                     	;# 
  2462  0415                     	;# 
  2463  0416                     	;# 
  2464  0417                     	;# 
  2465  041C                     	;# 
  2466  041D                     	;# 
  2467  041E                     	;# 
  2468  0FE4                     	;# 
  2469  0FE5                     	;# 
  2470  0FE6                     	;# 
  2471  0FE7                     	;# 
  2472  0FE8                     	;# 
  2473  0FE9                     	;# 
  2474  0FEA                     	;# 
  2475  0FEB                     	;# 
  2476  0FED                     	;# 
  2477  0FEE                     	;# 
  2478  0FEF                     	;# 
  2479  0000                     	;# 
  2480  0001                     	;# 
  2481  0002                     	;# 
  2482  0003                     	;# 
  2483  0004                     	;# 
  2484  0005                     	;# 
  2485  0006                     	;# 
  2486  0007                     	;# 
  2487  0008                     	;# 
  2488  0009                     	;# 
  2489  000A                     	;# 
  2490  000B                     	;# 
  2491  000C                     	;# 
  2492  000D                     	;# 
  2493  0011                     	;# 
  2494  0012                     	;# 
  2495  0013                     	;# 
  2496  0014                     	;# 
  2497  0015                     	;# 
  2498  0016                     	;# 
  2499  0016                     	;# 
  2500  0017                     	;# 
  2501  0018                     	;# 
  2502  0019                     	;# 
  2503  001A                     	;# 
  2504  001B                     	;# 
  2505  001C                     	;# 
  2506  001E                     	;# 
  2507  001F                     	;# 
  2508  008C                     	;# 
  2509  008D                     	;# 
  2510  0091                     	;# 
  2511  0092                     	;# 
  2512  0093                     	;# 
  2513  0094                     	;# 
  2514  0095                     	;# 
  2515  0096                     	;# 
  2516  0097                     	;# 
  2517  0098                     	;# 
  2518  0099                     	;# 
  2519  009A                     	;# 
  2520  009B                     	;# 
  2521  009B                     	;# 
  2522  009C                     	;# 
  2523  009D                     	;# 
  2524  009E                     	;# 
  2525  010C                     	;# 
  2526  010D                     	;# 
  2527  0111                     	;# 
  2528  0112                     	;# 
  2529  0113                     	;# 
  2530  0114                     	;# 
  2531  0115                     	;# 
  2532  0116                     	;# 
  2533  0117                     	;# 
  2534  0118                     	;# 
  2535  0119                     	;# 
  2536  011A                     	;# 
  2537  011B                     	;# 
  2538  011D                     	;# 
  2539  011E                     	;# 
  2540  018C                     	;# 
  2541  018D                     	;# 
  2542  0191                     	;# 
  2543  0191                     	;# 
  2544  0192                     	;# 
  2545  0193                     	;# 
  2546  0193                     	;# 
  2547  0193                     	;# 
  2548  0194                     	;# 
  2549  0195                     	;# 
  2550  0196                     	;# 
  2551  0199                     	;# 
  2552  019A                     	;# 
  2553  019B                     	;# 
  2554  019B                     	;# 
  2555  019B                     	;# 
  2556  019B                     	;# 
  2557  019C                     	;# 
  2558  019C                     	;# 
  2559  019D                     	;# 
  2560  019E                     	;# 
  2561  019F                     	;# 
  2562  020C                     	;# 
  2563  020D                     	;# 
  2564  0211                     	;# 
  2565  0211                     	;# 
  2566  0212                     	;# 
  2567  0212                     	;# 
  2568  0213                     	;# 
  2569  0213                     	;# 
  2570  0214                     	;# 
  2571  0214                     	;# 
  2572  0215                     	;# 
  2573  0215                     	;# 
  2574  0215                     	;# 
  2575  0216                     	;# 
  2576  0216                     	;# 
  2577  0217                     	;# 
  2578  0217                     	;# 
  2579  0219                     	;# 
  2580  021A                     	;# 
  2581  021B                     	;# 
  2582  021C                     	;# 
  2583  021D                     	;# 
  2584  021E                     	;# 
  2585  021F                     	;# 
  2586  0291                     	;# 
  2587  0291                     	;# 
  2588  0292                     	;# 
  2589  0293                     	;# 
  2590  0294                     	;# 
  2591  0295                     	;# 
  2592  0295                     	;# 
  2593  0296                     	;# 
  2594  0298                     	;# 
  2595  0298                     	;# 
  2596  0299                     	;# 
  2597  029A                     	;# 
  2598  029B                     	;# 
  2599  029C                     	;# 
  2600  029C                     	;# 
  2601  029D                     	;# 
  2602  029E                     	;# 
  2603  029E                     	;# 
  2604  0311                     	;# 
  2605  0311                     	;# 
  2606  0312                     	;# 
  2607  0313                     	;# 
  2608  0318                     	;# 
  2609  0318                     	;# 
  2610  0319                     	;# 
  2611  031A                     	;# 
  2612  0394                     	;# 
  2613  0395                     	;# 
  2614  0396                     	;# 
  2615  039A                     	;# 
  2616  039C                     	;# 
  2617  039D                     	;# 
  2618  039E                     	;# 
  2619  039F                     	;# 
  2620  0415                     	;# 
  2621  0416                     	;# 
  2622  0417                     	;# 
  2623  041C                     	;# 
  2624  041D                     	;# 
  2625  041E                     	;# 
  2626  0FE4                     	;# 
  2627  0FE5                     	;# 
  2628  0FE6                     	;# 
  2629  0FE7                     	;# 
  2630  0FE8                     	;# 
  2631  0FE9                     	;# 
  2632  0FEA                     	;# 
  2633  0FEB                     	;# 
  2634  0FED                     	;# 
  2635  0FEE                     	;# 
  2636  0FEF                     	;# 
  2637  0000                     	;# 
  2638  0001                     	;# 
  2639  0002                     	;# 
  2640  0003                     	;# 
  2641  0004                     	;# 
  2642  0005                     	;# 
  2643  0006                     	;# 
  2644  0007                     	;# 
  2645  0008                     	;# 
  2646  0009                     	;# 
  2647  000A                     	;# 
  2648  000B                     	;# 
  2649  000C                     	;# 
  2650  000D                     	;# 
  2651  0011                     	;# 
  2652  0012                     	;# 
  2653  0013                     	;# 
  2654  0014                     	;# 
  2655  0015                     	;# 
  2656  0016                     	;# 
  2657  0016                     	;# 
  2658  0017                     	;# 
  2659  0018                     	;# 
  2660  0019                     	;# 
  2661  001A                     	;# 
  2662  001B                     	;# 
  2663  001C                     	;# 
  2664  001E                     	;# 
  2665  001F                     	;# 
  2666  008C                     	;# 
  2667  008D                     	;# 
  2668  0091                     	;# 
  2669  0092                     	;# 
  2670  0093                     	;# 
  2671  0094                     	;# 
  2672  0095                     	;# 
  2673  0096                     	;# 
  2674  0097                     	;# 
  2675  0098                     	;# 
  2676  0099                     	;# 
  2677  009A                     	;# 
  2678  009B                     	;# 
  2679  009B                     	;# 
  2680  009C                     	;# 
  2681  009D                     	;# 
  2682  009E                     	;# 
  2683  010C                     	;# 
  2684  010D                     	;# 
  2685  0111                     	;# 
  2686  0112                     	;# 
  2687  0113                     	;# 
  2688  0114                     	;# 
  2689  0115                     	;# 
  2690  0116                     	;# 
  2691  0117                     	;# 
  2692  0118                     	;# 
  2693  0119                     	;# 
  2694  011A                     	;# 
  2695  011B                     	;# 
  2696  011D                     	;# 
  2697  011E                     	;# 
  2698  018C                     	;# 
  2699  018D                     	;# 
  2700  0191                     	;# 
  2701  0191                     	;# 
  2702  0192                     	;# 
  2703  0193                     	;# 
  2704  0193                     	;# 
  2705  0193                     	;# 
  2706  0194                     	;# 
  2707  0195                     	;# 
  2708  0196                     	;# 
  2709  0199                     	;# 
  2710  019A                     	;# 
  2711  019B                     	;# 
  2712  019B                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019C                     	;# 
  2716  019C                     	;# 
  2717  019D                     	;# 
  2718  019E                     	;# 
  2719  019F                     	;# 
  2720  020C                     	;# 
  2721  020D                     	;# 
  2722  0211                     	;# 
  2723  0211                     	;# 
  2724  0212                     	;# 
  2725  0212                     	;# 
  2726  0213                     	;# 
  2727  0213                     	;# 
  2728  0214                     	;# 
  2729  0214                     	;# 
  2730  0215                     	;# 
  2731  0215                     	;# 
  2732  0215                     	;# 
  2733  0216                     	;# 
  2734  0216                     	;# 
  2735  0217                     	;# 
  2736  0217                     	;# 
  2737  0219                     	;# 
  2738  021A                     	;# 
  2739  021B                     	;# 
  2740  021C                     	;# 
  2741  021D                     	;# 
  2742  021E                     	;# 
  2743  021F                     	;# 
  2744  0291                     	;# 
  2745  0291                     	;# 
  2746  0292                     	;# 
  2747  0293                     	;# 
  2748  0294                     	;# 
  2749  0295                     	;# 
  2750  0295                     	;# 
  2751  0296                     	;# 
  2752  0298                     	;# 
  2753  0298                     	;# 
  2754  0299                     	;# 
  2755  029A                     	;# 
  2756  029B                     	;# 
  2757  029C                     	;# 
  2758  029C                     	;# 
  2759  029D                     	;# 
  2760  029E                     	;# 
  2761  029E                     	;# 
  2762  0311                     	;# 
  2763  0311                     	;# 
  2764  0312                     	;# 
  2765  0313                     	;# 
  2766  0318                     	;# 
  2767  0318                     	;# 
  2768  0319                     	;# 
  2769  031A                     	;# 
  2770  0394                     	;# 
  2771  0395                     	;# 
  2772  0396                     	;# 
  2773  039A                     	;# 
  2774  039C                     	;# 
  2775  039D                     	;# 
  2776  039E                     	;# 
  2777  039F                     	;# 
  2778  0415                     	;# 
  2779  0416                     	;# 
  2780  0417                     	;# 
  2781  041C                     	;# 
  2782  041D                     	;# 
  2783  041E                     	;# 
  2784  0FE4                     	;# 
  2785  0FE5                     	;# 
  2786  0FE6                     	;# 
  2787  0FE7                     	;# 
  2788  0FE8                     	;# 
  2789  0FE9                     	;# 
  2790  0FEA                     	;# 
  2791  0FEB                     	;# 
  2792  0FED                     	;# 
  2793  0FEE                     	;# 
  2794  0FEF                     	;# 
  2795  0000                     	;# 
  2796  0001                     	;# 
  2797  0002                     	;# 
  2798  0003                     	;# 
  2799  0004                     	;# 
  2800  0005                     	;# 
  2801  0006                     	;# 
  2802  0007                     	;# 
  2803  0008                     	;# 
  2804  0009                     	;# 
  2805  000A                     	;# 
  2806  000B                     	;# 
  2807  000C                     	;# 
  2808  000D                     	;# 
  2809  0011                     	;# 
  2810  0012                     	;# 
  2811  0013                     	;# 
  2812  0014                     	;# 
  2813  0015                     	;# 
  2814  0016                     	;# 
  2815  0016                     	;# 
  2816  0017                     	;# 
  2817  0018                     	;# 
  2818  0019                     	;# 
  2819  001A                     	;# 
  2820  001B                     	;# 
  2821  001C                     	;# 
  2822  001E                     	;# 
  2823  001F                     	;# 
  2824  008C                     	;# 
  2825  008D                     	;# 
  2826  0091                     	;# 
  2827  0092                     	;# 
  2828  0093                     	;# 
  2829  0094                     	;# 
  2830  0095                     	;# 
  2831  0096                     	;# 
  2832  0097                     	;# 
  2833  0098                     	;# 
  2834  0099                     	;# 
  2835  009A                     	;# 
  2836  009B                     	;# 
  2837  009B                     	;# 
  2838  009C                     	;# 
  2839  009D                     	;# 
  2840  009E                     	;# 
  2841  010C                     	;# 
  2842  010D                     	;# 
  2843  0111                     	;# 
  2844  0112                     	;# 
  2845  0113                     	;# 
  2846  0114                     	;# 
  2847  0115                     	;# 
  2848  0116                     	;# 
  2849  0117                     	;# 
  2850  0118                     	;# 
  2851  0119                     	;# 
  2852  011A                     	;# 
  2853  011B                     	;# 
  2854  011D                     	;# 
  2855  011E                     	;# 
  2856  018C                     	;# 
  2857  018D                     	;# 
  2858  0191                     	;# 
  2859  0191                     	;# 
  2860  0192                     	;# 
  2861  0193                     	;# 
  2862  0193                     	;# 
  2863  0193                     	;# 
  2864  0194                     	;# 
  2865  0195                     	;# 
  2866  0196                     	;# 
  2867  0199                     	;# 
  2868  019A                     	;# 
  2869  019B                     	;# 
  2870  019B                     	;# 
  2871  019B                     	;# 
  2872  019B                     	;# 
  2873  019C                     	;# 
  2874  019C                     	;# 
  2875  019D                     	;# 
  2876  019E                     	;# 
  2877  019F                     	;# 
  2878  020C                     	;# 
  2879  020D                     	;# 
  2880  0211                     	;# 
  2881  0211                     	;# 
  2882  0212                     	;# 
  2883  0212                     	;# 
  2884  0213                     	;# 
  2885  0213                     	;# 
  2886  0214                     	;# 
  2887  0214                     	;# 
  2888  0215                     	;# 
  2889  0215                     	;# 
  2890  0215                     	;# 
  2891  0216                     	;# 
  2892  0216                     	;# 
  2893  0217                     	;# 
  2894  0217                     	;# 
  2895  0219                     	;# 
  2896  021A                     	;# 
  2897  021B                     	;# 
  2898  021C                     	;# 
  2899  021D                     	;# 
  2900  021E                     	;# 
  2901  021F                     	;# 
  2902  0291                     	;# 
  2903  0291                     	;# 
  2904  0292                     	;# 
  2905  0293                     	;# 
  2906  0294                     	;# 
  2907  0295                     	;# 
  2908  0295                     	;# 
  2909  0296                     	;# 
  2910  0298                     	;# 
  2911  0298                     	;# 
  2912  0299                     	;# 
  2913  029A                     	;# 
  2914  029B                     	;# 
  2915  029C                     	;# 
  2916  029C                     	;# 
  2917  029D                     	;# 
  2918  029E                     	;# 
  2919  029E                     	;# 
  2920  0311                     	;# 
  2921  0311                     	;# 
  2922  0312                     	;# 
  2923  0313                     	;# 
  2924  0318                     	;# 
  2925  0318                     	;# 
  2926  0319                     	;# 
  2927  031A                     	;# 
  2928  0394                     	;# 
  2929  0395                     	;# 
  2930  0396                     	;# 
  2931  039A                     	;# 
  2932  039C                     	;# 
  2933  039D                     	;# 
  2934  039E                     	;# 
  2935  039F                     	;# 
  2936  0415                     	;# 
  2937  0416                     	;# 
  2938  0417                     	;# 
  2939  041C                     	;# 
  2940  041D                     	;# 
  2941  041E                     	;# 
  2942  0FE4                     	;# 
  2943  0FE5                     	;# 
  2944  0FE6                     	;# 
  2945  0FE7                     	;# 
  2946  0FE8                     	;# 
  2947  0FE9                     	;# 
  2948  0FEA                     	;# 
  2949  0FEB                     	;# 
  2950  0FED                     	;# 
  2951  0FEE                     	;# 
  2952  0FEF                     	;# 
  2953  0000                     	;# 
  2954  0001                     	;# 
  2955  0002                     	;# 
  2956  0003                     	;# 
  2957  0004                     	;# 
  2958  0005                     	;# 
  2959  0006                     	;# 
  2960  0007                     	;# 
  2961  0008                     	;# 
  2962  0009                     	;# 
  2963  000A                     	;# 
  2964  000B                     	;# 
  2965  000C                     	;# 
  2966  000D                     	;# 
  2967  0011                     	;# 
  2968  0012                     	;# 
  2969  0013                     	;# 
  2970  0014                     	;# 
  2971  0015                     	;# 
  2972  0016                     	;# 
  2973  0016                     	;# 
  2974  0017                     	;# 
  2975  0018                     	;# 
  2976  0019                     	;# 
  2977  001A                     	;# 
  2978  001B                     	;# 
  2979  001C                     	;# 
  2980  001E                     	;# 
  2981  001F                     	;# 
  2982  008C                     	;# 
  2983  008D                     	;# 
  2984  0091                     	;# 
  2985  0092                     	;# 
  2986  0093                     	;# 
  2987  0094                     	;# 
  2988  0095                     	;# 
  2989  0096                     	;# 
  2990  0097                     	;# 
  2991  0098                     	;# 
  2992  0099                     	;# 
  2993  009A                     	;# 
  2994  009B                     	;# 
  2995  009B                     	;# 
  2996  009C                     	;# 
  2997  009D                     	;# 
  2998  009E                     	;# 
  2999  010C                     	;# 
  3000  010D                     	;# 
  3001  0111                     	;# 
  3002  0112                     	;# 
  3003  0113                     	;# 
  3004  0114                     	;# 
  3005  0115                     	;# 
  3006  0116                     	;# 
  3007  0117                     	;# 
  3008  0118                     	;# 
  3009  0119                     	;# 
  3010  011A                     	;# 
  3011  011B                     	;# 
  3012  011D                     	;# 
  3013  011E                     	;# 
  3014  018C                     	;# 
  3015  018D                     	;# 
  3016  0191                     	;# 
  3017  0191                     	;# 
  3018  0192                     	;# 
  3019  0193                     	;# 
  3020  0193                     	;# 
  3021  0193                     	;# 
  3022  0194                     	;# 
  3023  0195                     	;# 
  3024  0196                     	;# 
  3025  0199                     	;# 
  3026  019A                     	;# 
  3027  019B                     	;# 
  3028  019B                     	;# 
  3029  019B                     	;# 
  3030  019B                     	;# 
  3031  019C                     	;# 
  3032  019C                     	;# 
  3033  019D                     	;# 
  3034  019E                     	;# 
  3035  019F                     	;# 
  3036  020C                     	;# 
  3037  020D                     	;# 
  3038  0211                     	;# 
  3039  0211                     	;# 
  3040  0212                     	;# 
  3041  0212                     	;# 
  3042  0213                     	;# 
  3043  0213                     	;# 
  3044  0214                     	;# 
  3045  0214                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0215                     	;# 
  3049  0216                     	;# 
  3050  0216                     	;# 
  3051  0217                     	;# 
  3052  0217                     	;# 
  3053  0219                     	;# 
  3054  021A                     	;# 
  3055  021B                     	;# 
  3056  021C                     	;# 
  3057  021D                     	;# 
  3058  021E                     	;# 
  3059  021F                     	;# 
  3060  0291                     	;# 
  3061  0291                     	;# 
  3062  0292                     	;# 
  3063  0293                     	;# 
  3064  0294                     	;# 
  3065  0295                     	;# 
  3066  0295                     	;# 
  3067  0296                     	;# 
  3068  0298                     	;# 
  3069  0298                     	;# 
  3070  0299                     	;# 
  3071  029A                     	;# 
  3072  029B                     	;# 
  3073  029C                     	;# 
  3074  029C                     	;# 
  3075  029D                     	;# 
  3076  029E                     	;# 
  3077  029E                     	;# 
  3078  0311                     	;# 
  3079  0311                     	;# 
  3080  0312                     	;# 
  3081  0313                     	;# 
  3082  0318                     	;# 
  3083  0318                     	;# 
  3084  0319                     	;# 
  3085  031A                     	;# 
  3086  0394                     	;# 
  3087  0395                     	;# 
  3088  0396                     	;# 
  3089  039A                     	;# 
  3090  039C                     	;# 
  3091  039D                     	;# 
  3092  039E                     	;# 
  3093  039F                     	;# 
  3094  0415                     	;# 
  3095  0416                     	;# 
  3096  0417                     	;# 
  3097  041C                     	;# 
  3098  041D                     	;# 
  3099  041E                     	;# 
  3100  0FE4                     	;# 
  3101  0FE5                     	;# 
  3102  0FE6                     	;# 
  3103  0FE7                     	;# 
  3104  0FE8                     	;# 
  3105  0FE9                     	;# 
  3106  0FEA                     	;# 
  3107  0FEB                     	;# 
  3108  0FED                     	;# 
  3109  0FEE                     	;# 
  3110  0FEF                     	;# 
  3111  0000                     	;# 
  3112  0001                     	;# 
  3113  0002                     	;# 
  3114  0003                     	;# 
  3115  0004                     	;# 
  3116  0005                     	;# 
  3117  0006                     	;# 
  3118  0007                     	;# 
  3119  0008                     	;# 
  3120  0009                     	;# 
  3121  000A                     	;# 
  3122  000B                     	;# 
  3123  000C                     	;# 
  3124  000D                     	;# 
  3125  0011                     	;# 
  3126  0012                     	;# 
  3127  0013                     	;# 
  3128  0014                     	;# 
  3129  0015                     	;# 
  3130  0016                     	;# 
  3131  0016                     	;# 
  3132  0017                     	;# 
  3133  0018                     	;# 
  3134  0019                     	;# 
  3135  001A                     	;# 
  3136  001B                     	;# 
  3137  001C                     	;# 
  3138  001E                     	;# 
  3139  001F                     	;# 
  3140  008C                     	;# 
  3141  008D                     	;# 
  3142  0091                     	;# 
  3143  0092                     	;# 
  3144  0093                     	;# 
  3145  0094                     	;# 
  3146  0095                     	;# 
  3147  0096                     	;# 
  3148  0097                     	;# 
  3149  0098                     	;# 
  3150  0099                     	;# 
  3151  009A                     	;# 
  3152  009B                     	;# 
  3153  009B                     	;# 
  3154  009C                     	;# 
  3155  009D                     	;# 
  3156  009E                     	;# 
  3157  010C                     	;# 
  3158  010D                     	;# 
  3159  0111                     	;# 
  3160  0112                     	;# 
  3161  0113                     	;# 
  3162  0114                     	;# 
  3163  0115                     	;# 
  3164  0116                     	;# 
  3165  0117                     	;# 
  3166  0118                     	;# 
  3167  0119                     	;# 
  3168  011A                     	;# 
  3169  011B                     	;# 
  3170  011D                     	;# 
  3171  011E                     	;# 
  3172  018C                     	;# 
  3173  018D                     	;# 
  3174  0191                     	;# 
  3175  0191                     	;# 
  3176  0192                     	;# 
  3177  0193                     	;# 
  3178  0193                     	;# 
  3179  0193                     	;# 
  3180  0194                     	;# 
  3181  0195                     	;# 
  3182  0196                     	;# 
  3183  0199                     	;# 
  3184  019A                     	;# 
  3185  019B                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019B                     	;# 
  3189  019C                     	;# 
  3190  019C                     	;# 
  3191  019D                     	;# 
  3192  019E                     	;# 
  3193  019F                     	;# 
  3194  020C                     	;# 
  3195  020D                     	;# 
  3196  0211                     	;# 
  3197  0211                     	;# 
  3198  0212                     	;# 
  3199  0212                     	;# 
  3200  0213                     	;# 
  3201  0213                     	;# 
  3202  0214                     	;# 
  3203  0214                     	;# 
  3204  0215                     	;# 
  3205  0215                     	;# 
  3206  0215                     	;# 
  3207  0216                     	;# 
  3208  0216                     	;# 
  3209  0217                     	;# 
  3210  0217                     	;# 
  3211  0219                     	;# 
  3212  021A                     	;# 
  3213  021B                     	;# 
  3214  021C                     	;# 
  3215  021D                     	;# 
  3216  021E                     	;# 
  3217  021F                     	;# 
  3218  0291                     	;# 
  3219  0291                     	;# 
  3220  0292                     	;# 
  3221  0293                     	;# 
  3222  0294                     	;# 
  3223  0295                     	;# 
  3224  0295                     	;# 
  3225  0296                     	;# 
  3226  0298                     	;# 
  3227  0298                     	;# 
  3228  0299                     	;# 
  3229  029A                     	;# 
  3230  029B                     	;# 
  3231  029C                     	;# 
  3232  029C                     	;# 
  3233  029D                     	;# 
  3234  029E                     	;# 
  3235  029E                     	;# 
  3236  0311                     	;# 
  3237  0311                     	;# 
  3238  0312                     	;# 
  3239  0313                     	;# 
  3240  0318                     	;# 
  3241  0318                     	;# 
  3242  0319                     	;# 
  3243  031A                     	;# 
  3244  0394                     	;# 
  3245  0395                     	;# 
  3246  0396                     	;# 
  3247  039A                     	;# 
  3248  039C                     	;# 
  3249  039D                     	;# 
  3250  039E                     	;# 
  3251  039F                     	;# 
  3252  0415                     	;# 
  3253  0416                     	;# 
  3254  0417                     	;# 
  3255  041C                     	;# 
  3256  041D                     	;# 
  3257  041E                     	;# 
  3258  0FE4                     	;# 
  3259  0FE5                     	;# 
  3260  0FE6                     	;# 
  3261  0FE7                     	;# 
  3262  0FE8                     	;# 
  3263  0FE9                     	;# 
  3264  0FEA                     	;# 
  3265  0FEB                     	;# 
  3266  0FED                     	;# 
  3267  0FEE                     	;# 
  3268  0FEF                     	;# 
  3269                           
  3270                           	psect	stringtext1
  3271  1000                     __pstringtext1:	
  3272  1000                     _ASCII:	
  3273  1000  3400               	retlw	0
  3274  1001  3400               	retlw	0
  3275  1002  3400               	retlw	0
  3276  1003  3400               	retlw	0
  3277  1004  3400               	retlw	0
  3278  1005  3400               	retlw	0
  3279  1006  3400               	retlw	0
  3280  1007  345F               	retlw	95
  3281  1008  3400               	retlw	0
  3282  1009  3400               	retlw	0
  3283  100A  3400               	retlw	0
  3284  100B  3407               	retlw	7
  3285  100C  3400               	retlw	0
  3286  100D  3407               	retlw	7
  3287  100E  3400               	retlw	0
  3288  100F  3414               	retlw	20
  3289  1010  347F               	retlw	127
  3290  1011  3414               	retlw	20
  3291  1012  347F               	retlw	127
  3292  1013  3414               	retlw	20
  3293  1014  3424               	retlw	36
  3294  1015  342A               	retlw	42
  3295  1016  347F               	retlw	127
  3296  1017  342A               	retlw	42
  3297  1018  3412               	retlw	18
  3298  1019  3423               	retlw	35
  3299  101A  3413               	retlw	19
  3300  101B  3408               	retlw	8
  3301  101C  3464               	retlw	100
  3302  101D  3462               	retlw	98
  3303  101E  3436               	retlw	54
  3304  101F  3449               	retlw	73
  3305  1020  3455               	retlw	85
  3306  1021  3422               	retlw	34
  3307  1022  3450               	retlw	80
  3308  1023  3400               	retlw	0
  3309  1024  3405               	retlw	5
  3310  1025  3403               	retlw	3
  3311  1026  3400               	retlw	0
  3312  1027  3400               	retlw	0
  3313  1028  3400               	retlw	0
  3314  1029  341C               	retlw	28
  3315  102A  3422               	retlw	34
  3316  102B  3441               	retlw	65
  3317  102C  3400               	retlw	0
  3318  102D  3400               	retlw	0
  3319  102E  3441               	retlw	65
  3320  102F  3422               	retlw	34
  3321  1030  341C               	retlw	28
  3322  1031  3400               	retlw	0
  3323  1032  3414               	retlw	20
  3324  1033  3408               	retlw	8
  3325  1034  343E               	retlw	62
  3326  1035  3408               	retlw	8
  3327  1036  3414               	retlw	20
  3328  1037  3408               	retlw	8
  3329  1038  3408               	retlw	8
  3330  1039  343E               	retlw	62
  3331  103A  3408               	retlw	8
  3332  103B  3408               	retlw	8
  3333  103C  3400               	retlw	0
  3334  103D  3450               	retlw	80
  3335  103E  3430               	retlw	48
  3336  103F  3400               	retlw	0
  3337  1040  3400               	retlw	0
  3338  1041  3408               	retlw	8
  3339  1042  3408               	retlw	8
  3340  1043  3408               	retlw	8
  3341  1044  3408               	retlw	8
  3342  1045  3408               	retlw	8
  3343  1046  3400               	retlw	0
  3344  1047  3460               	retlw	96
  3345  1048  3460               	retlw	96
  3346  1049  3400               	retlw	0
  3347  104A  3400               	retlw	0
  3348  104B  3420               	retlw	32
  3349  104C  3410               	retlw	16
  3350  104D  3408               	retlw	8
  3351  104E  3404               	retlw	4
  3352  104F  3402               	retlw	2
  3353  1050  343E               	retlw	62
  3354  1051  3451               	retlw	81
  3355  1052  3449               	retlw	73
  3356  1053  3445               	retlw	69
  3357  1054  343E               	retlw	62
  3358  1055  3400               	retlw	0
  3359  1056  3442               	retlw	66
  3360  1057  347F               	retlw	127
  3361  1058  3440               	retlw	64
  3362  1059  3400               	retlw	0
  3363  105A  3442               	retlw	66
  3364  105B  3461               	retlw	97
  3365  105C  3451               	retlw	81
  3366  105D  3449               	retlw	73
  3367  105E  3446               	retlw	70
  3368  105F  3421               	retlw	33
  3369  1060  3441               	retlw	65
  3370  1061  3445               	retlw	69
  3371  1062  344B               	retlw	75
  3372  1063  3431               	retlw	49
  3373  1064  3418               	retlw	24
  3374  1065  3414               	retlw	20
  3375  1066  3412               	retlw	18
  3376  1067  347F               	retlw	127
  3377  1068  3410               	retlw	16
  3378  1069  3427               	retlw	39
  3379  106A  3445               	retlw	69
  3380  106B  3445               	retlw	69
  3381  106C  3445               	retlw	69
  3382  106D  3439               	retlw	57
  3383  106E  343C               	retlw	60
  3384  106F  344A               	retlw	74
  3385  1070  3449               	retlw	73
  3386  1071  3449               	retlw	73
  3387  1072  3430               	retlw	48
  3388  1073  3401               	retlw	1
  3389  1074  3471               	retlw	113
  3390  1075  3409               	retlw	9
  3391  1076  3405               	retlw	5
  3392  1077  3403               	retlw	3
  3393  1078  3436               	retlw	54
  3394  1079  3449               	retlw	73
  3395  107A  3449               	retlw	73
  3396  107B  3449               	retlw	73
  3397  107C  3436               	retlw	54
  3398  107D  3406               	retlw	6
  3399  107E  3449               	retlw	73
  3400  107F  3449               	retlw	73
  3401  1080  3429               	retlw	41
  3402  1081  341E               	retlw	30
  3403  1082  3400               	retlw	0
  3404  1083  3436               	retlw	54
  3405  1084  3436               	retlw	54
  3406  1085  3400               	retlw	0
  3407  1086  3400               	retlw	0
  3408  1087  3400               	retlw	0
  3409  1088  3456               	retlw	86
  3410  1089  3436               	retlw	54
  3411  108A  3400               	retlw	0
  3412  108B  3400               	retlw	0
  3413  108C  3408               	retlw	8
  3414  108D  3414               	retlw	20
  3415  108E  3422               	retlw	34
  3416  108F  3441               	retlw	65
  3417  1090  3400               	retlw	0
  3418  1091  3414               	retlw	20
  3419  1092  3414               	retlw	20
  3420  1093  3414               	retlw	20
  3421  1094  3414               	retlw	20
  3422  1095  3414               	retlw	20
  3423  1096  3400               	retlw	0
  3424  1097  3441               	retlw	65
  3425  1098  3422               	retlw	34
  3426  1099  3414               	retlw	20
  3427  109A  3408               	retlw	8
  3428  109B  3402               	retlw	2
  3429  109C  3401               	retlw	1
  3430  109D  3451               	retlw	81
  3431  109E  3409               	retlw	9
  3432  109F  3406               	retlw	6
  3433  10A0  3400               	retlw	0
  3434  10A1  340F               	retlw	15
  3435  10A2  3409               	retlw	9
  3436  10A3  3409               	retlw	9
  3437  10A4  340F               	retlw	15
  3438  10A5  347E               	retlw	126
  3439  10A6  3411               	retlw	17
  3440  10A7  3411               	retlw	17
  3441  10A8  3411               	retlw	17
  3442  10A9  347E               	retlw	126
  3443  10AA  347F               	retlw	127
  3444  10AB  3449               	retlw	73
  3445  10AC  3449               	retlw	73
  3446  10AD  3449               	retlw	73
  3447  10AE  3436               	retlw	54
  3448  10AF  343E               	retlw	62
  3449  10B0  3441               	retlw	65
  3450  10B1  3441               	retlw	65
  3451  10B2  3441               	retlw	65
  3452  10B3  3422               	retlw	34
  3453  10B4  347F               	retlw	127
  3454  10B5  3441               	retlw	65
  3455  10B6  3441               	retlw	65
  3456  10B7  3422               	retlw	34
  3457  10B8  341C               	retlw	28
  3458  10B9  347F               	retlw	127
  3459  10BA  3449               	retlw	73
  3460  10BB  3449               	retlw	73
  3461  10BC  3449               	retlw	73
  3462  10BD  3441               	retlw	65
  3463  10BE  347F               	retlw	127
  3464  10BF  3409               	retlw	9
  3465  10C0  3409               	retlw	9
  3466  10C1  3409               	retlw	9
  3467  10C2  3401               	retlw	1
  3468  10C3  343E               	retlw	62
  3469  10C4  3441               	retlw	65
  3470  10C5  3449               	retlw	73
  3471  10C6  3449               	retlw	73
  3472  10C7  347A               	retlw	122
  3473  10C8  347F               	retlw	127
  3474  10C9  3408               	retlw	8
  3475  10CA  3408               	retlw	8
  3476  10CB  3408               	retlw	8
  3477  10CC  347F               	retlw	127
  3478  10CD  3400               	retlw	0
  3479  10CE  3441               	retlw	65
  3480  10CF  347F               	retlw	127
  3481  10D0  3441               	retlw	65
  3482  10D1  3400               	retlw	0
  3483  10D2  3420               	retlw	32
  3484  10D3  3440               	retlw	64
  3485  10D4  3441               	retlw	65
  3486  10D5  343F               	retlw	63
  3487  10D6  3401               	retlw	1
  3488  10D7  347F               	retlw	127
  3489  10D8  3408               	retlw	8
  3490  10D9  3414               	retlw	20
  3491  10DA  3422               	retlw	34
  3492  10DB  3441               	retlw	65
  3493  10DC  347F               	retlw	127
  3494  10DD  3440               	retlw	64
  3495  10DE  3440               	retlw	64
  3496  10DF  3440               	retlw	64
  3497  10E0  3440               	retlw	64
  3498  10E1  347F               	retlw	127
  3499  10E2  3402               	retlw	2
  3500  10E3  340C               	retlw	12
  3501  10E4  3402               	retlw	2
  3502  10E5  347F               	retlw	127
  3503  10E6  347F               	retlw	127
  3504  10E7  3404               	retlw	4
  3505  10E8  3408               	retlw	8
  3506  10E9  3410               	retlw	16
  3507  10EA  347F               	retlw	127
  3508  10EB  343E               	retlw	62
  3509  10EC  3441               	retlw	65
  3510  10ED  3441               	retlw	65
  3511  10EE  3441               	retlw	65
  3512  10EF  343E               	retlw	62
  3513  10F0  347F               	retlw	127
  3514  10F1  3409               	retlw	9
  3515  10F2  3409               	retlw	9
  3516  10F3  3409               	retlw	9
  3517  10F4  3406               	retlw	6
  3518  10F5  343E               	retlw	62
  3519  10F6  3441               	retlw	65
  3520  10F7  3451               	retlw	81
  3521  10F8  3421               	retlw	33
  3522  10F9  345E               	retlw	94
  3523  10FA  347F               	retlw	127
  3524  10FB  3409               	retlw	9
  3525  10FC  3419               	retlw	25
  3526  10FD  3429               	retlw	41
  3527  10FE  3446               	retlw	70
  3528  10FF  3446               	retlw	70
  3529  1100  3449               	retlw	73
  3530  1101  3449               	retlw	73
  3531  1102  3449               	retlw	73
  3532  1103  3431               	retlw	49
  3533  1104  3401               	retlw	1
  3534  1105  3401               	retlw	1
  3535  1106  347F               	retlw	127
  3536  1107  3401               	retlw	1
  3537  1108  3401               	retlw	1
  3538  1109  343F               	retlw	63
  3539  110A  3440               	retlw	64
  3540  110B  3440               	retlw	64
  3541  110C  3440               	retlw	64
  3542  110D  343F               	retlw	63
  3543  110E  341F               	retlw	31
  3544  110F  3420               	retlw	32
  3545  1110  3440               	retlw	64
  3546  1111  3420               	retlw	32
  3547  1112  341F               	retlw	31
  3548  1113  343F               	retlw	63
  3549  1114  3440               	retlw	64
  3550  1115  3438               	retlw	56
  3551  1116  3440               	retlw	64
  3552  1117  343F               	retlw	63
  3553  1118  3463               	retlw	99
  3554  1119  3414               	retlw	20
  3555  111A  3408               	retlw	8
  3556  111B  3414               	retlw	20
  3557  111C  3463               	retlw	99
  3558  111D  3407               	retlw	7
  3559  111E  3408               	retlw	8
  3560  111F  3470               	retlw	112
  3561  1120  3408               	retlw	8
  3562  1121  3407               	retlw	7
  3563  1122  3461               	retlw	97
  3564  1123  3451               	retlw	81
  3565  1124  3449               	retlw	73
  3566  1125  3445               	retlw	69
  3567  1126  3443               	retlw	67
  3568  1127  3400               	retlw	0
  3569  1128  347F               	retlw	127
  3570  1129  3441               	retlw	65
  3571  112A  3441               	retlw	65
  3572  112B  3400               	retlw	0
  3573  112C  3402               	retlw	2
  3574  112D  3404               	retlw	4
  3575  112E  3408               	retlw	8
  3576  112F  3410               	retlw	16
  3577  1130  3420               	retlw	32
  3578  1131  3400               	retlw	0
  3579  1132  3441               	retlw	65
  3580  1133  3441               	retlw	65
  3581  1134  347F               	retlw	127
  3582  1135  3400               	retlw	0
  3583  1136  3404               	retlw	4
  3584  1137  3402               	retlw	2
  3585  1138  3401               	retlw	1
  3586  1139  3402               	retlw	2
  3587  113A  3404               	retlw	4
  3588  113B  3440               	retlw	64
  3589  113C  3440               	retlw	64
  3590  113D  3440               	retlw	64
  3591  113E  3440               	retlw	64
  3592  113F  3440               	retlw	64
  3593  1140  3400               	retlw	0
  3594  1141  3401               	retlw	1
  3595  1142  3402               	retlw	2
  3596  1143  3404               	retlw	4
  3597  1144  3400               	retlw	0
  3598  1145  3420               	retlw	32
  3599  1146  3454               	retlw	84
  3600  1147  3454               	retlw	84
  3601  1148  3454               	retlw	84
  3602  1149  3478               	retlw	120
  3603  114A  347F               	retlw	127
  3604  114B  3448               	retlw	72
  3605  114C  3444               	retlw	68
  3606  114D  3444               	retlw	68
  3607  114E  3438               	retlw	56
  3608  114F  3438               	retlw	56
  3609  1150  3444               	retlw	68
  3610  1151  3444               	retlw	68
  3611  1152  3444               	retlw	68
  3612  1153  3420               	retlw	32
  3613  1154  3438               	retlw	56
  3614  1155  3444               	retlw	68
  3615  1156  3444               	retlw	68
  3616  1157  3448               	retlw	72
  3617  1158  347F               	retlw	127
  3618  1159  3438               	retlw	56
  3619  115A  3454               	retlw	84
  3620  115B  3454               	retlw	84
  3621  115C  3454               	retlw	84
  3622  115D  3418               	retlw	24
  3623  115E  3408               	retlw	8
  3624  115F  347E               	retlw	126
  3625  1160  3409               	retlw	9
  3626  1161  3401               	retlw	1
  3627  1162  3402               	retlw	2
  3628  1163  340C               	retlw	12
  3629  1164  3452               	retlw	82
  3630  1165  3452               	retlw	82
  3631  1166  3452               	retlw	82
  3632  1167  343E               	retlw	62
  3633  1168  347F               	retlw	127
  3634  1169  3408               	retlw	8
  3635  116A  3404               	retlw	4
  3636  116B  3404               	retlw	4
  3637  116C  3478               	retlw	120
  3638  116D  3400               	retlw	0
  3639  116E  3444               	retlw	68
  3640  116F  347D               	retlw	125
  3641  1170  3440               	retlw	64
  3642  1171  3400               	retlw	0
  3643  1172  3420               	retlw	32
  3644  1173  3440               	retlw	64
  3645  1174  3444               	retlw	68
  3646  1175  343D               	retlw	61
  3647  1176  3400               	retlw	0
  3648  1177  347F               	retlw	127
  3649  1178  3410               	retlw	16
  3650  1179  3428               	retlw	40
  3651  117A  3444               	retlw	68
  3652  117B  3400               	retlw	0
  3653  117C  3400               	retlw	0
  3654  117D  3441               	retlw	65
  3655  117E  347F               	retlw	127
  3656  117F  3440               	retlw	64
  3657  1180  3400               	retlw	0
  3658  1181  347C               	retlw	124
  3659  1182  3404               	retlw	4
  3660  1183  3418               	retlw	24
  3661  1184  3404               	retlw	4
  3662  1185  3478               	retlw	120
  3663  1186  347C               	retlw	124
  3664  1187  3408               	retlw	8
  3665  1188  3404               	retlw	4
  3666  1189  3404               	retlw	4
  3667  118A  3478               	retlw	120
  3668  118B  3438               	retlw	56
  3669  118C  3444               	retlw	68
  3670  118D  3444               	retlw	68
  3671  118E  3444               	retlw	68
  3672  118F  3438               	retlw	56
  3673  1190  347C               	retlw	124
  3674  1191  3414               	retlw	20
  3675  1192  3414               	retlw	20
  3676  1193  3414               	retlw	20
  3677  1194  3408               	retlw	8
  3678  1195  3408               	retlw	8
  3679  1196  3414               	retlw	20
  3680  1197  3414               	retlw	20
  3681  1198  3418               	retlw	24
  3682  1199  347C               	retlw	124
  3683  119A  347C               	retlw	124
  3684  119B  3408               	retlw	8
  3685  119C  3404               	retlw	4
  3686  119D  3404               	retlw	4
  3687  119E  3408               	retlw	8
  3688  119F  3448               	retlw	72
  3689  11A0  3454               	retlw	84
  3690  11A1  3454               	retlw	84
  3691  11A2  3454               	retlw	84
  3692  11A3  3420               	retlw	32
  3693  11A4  3404               	retlw	4
  3694  11A5  343F               	retlw	63
  3695  11A6  3444               	retlw	68
  3696  11A7  3440               	retlw	64
  3697  11A8  3420               	retlw	32
  3698  11A9  343C               	retlw	60
  3699  11AA  3440               	retlw	64
  3700  11AB  3440               	retlw	64
  3701  11AC  3420               	retlw	32
  3702  11AD  347C               	retlw	124
  3703  11AE  341C               	retlw	28
  3704  11AF  3420               	retlw	32
  3705  11B0  3440               	retlw	64
  3706  11B1  3420               	retlw	32
  3707  11B2  341C               	retlw	28
  3708  11B3  343C               	retlw	60
  3709  11B4  3440               	retlw	64
  3710  11B5  3430               	retlw	48
  3711  11B6  3440               	retlw	64
  3712  11B7  343C               	retlw	60
  3713  11B8  3444               	retlw	68
  3714  11B9  3428               	retlw	40
  3715  11BA  3410               	retlw	16
  3716  11BB  3428               	retlw	40
  3717  11BC  3444               	retlw	68
  3718  11BD  340C               	retlw	12
  3719  11BE  3450               	retlw	80
  3720  11BF  3450               	retlw	80
  3721  11C0  3450               	retlw	80
  3722  11C1  343C               	retlw	60
  3723  11C2  3444               	retlw	68
  3724  11C3  3464               	retlw	100
  3725  11C4  3454               	retlw	84
  3726  11C5  344C               	retlw	76
  3727  11C6  3444               	retlw	68
  3728  11C7  3400               	retlw	0
  3729  11C8  3408               	retlw	8
  3730  11C9  3436               	retlw	54
  3731  11CA  3441               	retlw	65
  3732  11CB  3400               	retlw	0
  3733  11CC  3400               	retlw	0
  3734  11CD  3400               	retlw	0
  3735  11CE  34FF               	retlw	255
  3736  11CF  3400               	retlw	0
  3737  11D0  3400               	retlw	0
  3738  11D1  3400               	retlw	0
  3739  11D2  3441               	retlw	65
  3740  11D3  3436               	retlw	54
  3741  11D4  3408               	retlw	8
  3742  11D5  3400               	retlw	0
  3743  11D6                     __end_of_ASCII:	
  3744                           
  3745                           	psect	stringtext2
  3746  11D6                     __pstringtext2:	
  3747  11D6                     _LARGE:	
  3748  11D6  34E0               	retlw	224
  3749  11D7  34F8               	retlw	248
  3750  11D8  34FC               	retlw	252
  3751  11D9  341E               	retlw	30
  3752  11DA  340E               	retlw	14
  3753  11DB  3406               	retlw	6
  3754  11DC  3406               	retlw	6
  3755  11DD  340E               	retlw	14
  3756  11DE  341E               	retlw	30
  3757  11DF  34FC               	retlw	252
  3758  11E0  34F8               	retlw	248
  3759  11E1  34E0               	retlw	224
  3760  11E2  34FF               	retlw	255
  3761  11E3  34FF               	retlw	255
  3762  11E4  34FF               	retlw	255
  3763  11E5  3400               	retlw	0
  3764  11E6  3400               	retlw	0
  3765  11E7  3400               	retlw	0
  3766  11E8  3400               	retlw	0
  3767  11E9  3400               	retlw	0
  3768  11EA  3400               	retlw	0
  3769  11EB  34FF               	retlw	255
  3770  11EC  34FF               	retlw	255
  3771  11ED  34FF               	retlw	255
  3772  11EE  340F               	retlw	15
  3773  11EF  343F               	retlw	63
  3774  11F0  347F               	retlw	127
  3775  11F1  34F0               	retlw	240
  3776  11F2  34E0               	retlw	224
  3777  11F3  34C0               	retlw	192
  3778  11F4  34C0               	retlw	192
  3779  11F5  34E0               	retlw	224
  3780  11F6  34F0               	retlw	240
  3781  11F7  347F               	retlw	127
  3782  11F8  343F               	retlw	63
  3783  11F9  340F               	retlw	15
  3784  11FA  3400               	retlw	0
  3785  11FB  3400               	retlw	0
  3786  11FC  3418               	retlw	24
  3787  11FD  3418               	retlw	24
  3788  11FE  341C               	retlw	28
  3789  11FF  34FE               	retlw	254
  3790  1200  34FE               	retlw	254
  3791  1201  34FE               	retlw	254
  3792  1202  3400               	retlw	0
  3793  1203  3400               	retlw	0
  3794  1204  3400               	retlw	0
  3795  1205  3400               	retlw	0
  3796  1206  3400               	retlw	0
  3797  1207  3400               	retlw	0
  3798  1208  3400               	retlw	0
  3799  1209  3400               	retlw	0
  3800  120A  3400               	retlw	0
  3801  120B  34FF               	retlw	255
  3802  120C  34FF               	retlw	255
  3803  120D  34FF               	retlw	255
  3804  120E  3400               	retlw	0
  3805  120F  3400               	retlw	0
  3806  1210  3400               	retlw	0
  3807  1211  3400               	retlw	0
  3808  1212  3400               	retlw	0
  3809  1213  3400               	retlw	0
  3810  1214  34E0               	retlw	224
  3811  1215  34E0               	retlw	224
  3812  1216  34E0               	retlw	224
  3813  1217  34FF               	retlw	255
  3814  1218  34FF               	retlw	255
  3815  1219  34FF               	retlw	255
  3816  121A  34E0               	retlw	224
  3817  121B  34E0               	retlw	224
  3818  121C  3400               	retlw	0
  3819  121D  3400               	retlw	0
  3820  121E  3438               	retlw	56
  3821  121F  343C               	retlw	60
  3822  1220  341C               	retlw	28
  3823  1221  340E               	retlw	14
  3824  1222  340E               	retlw	14
  3825  1223  340E               	retlw	14
  3826  1224  340E               	retlw	14
  3827  1225  340E               	retlw	14
  3828  1226  341E               	retlw	30
  3829  1227  34FC               	retlw	252
  3830  1228  34FC               	retlw	252
  3831  1229  34F0               	retlw	240
  3832  122A  3400               	retlw	0
  3833  122B  3400               	retlw	0
  3834  122C  3400               	retlw	0
  3835  122D  3480               	retlw	128
  3836  122E  34C0               	retlw	192
  3837  122F  34E0               	retlw	224
  3838  1230  34F0               	retlw	240
  3839  1231  3478               	retlw	120
  3840  1232  343C               	retlw	60
  3841  1233  341F               	retlw	31
  3842  1234  340F               	retlw	15
  3843  1235  3403               	retlw	3
  3844  1236  34F8               	retlw	248
  3845  1237  34FE               	retlw	254
  3846  1238  34FF               	retlw	255
  3847  1239  34EF               	retlw	239
  3848  123A  34E3               	retlw	227
  3849  123B  34E1               	retlw	225
  3850  123C  34E0               	retlw	224
  3851  123D  34E0               	retlw	224
  3852  123E  34E0               	retlw	224
  3853  123F  34E0               	retlw	224
  3854  1240  34E0               	retlw	224
  3855  1241  34E0               	retlw	224
  3856  1242  3418               	retlw	24
  3857  1243  341C               	retlw	28
  3858  1244  340E               	retlw	14
  3859  1245  340E               	retlw	14
  3860  1246  3406               	retlw	6
  3861  1247  3406               	retlw	6
  3862  1248  3406               	retlw	6
  3863  1249  340E               	retlw	14
  3864  124A  340E               	retlw	14
  3865  124B  34FC               	retlw	252
  3866  124C  34FC               	retlw	252
  3867  124D  34F0               	retlw	240
  3868  124E  3400               	retlw	0
  3869  124F  3400               	retlw	0
  3870  1250  3400               	retlw	0
  3871  1251  3400               	retlw	0
  3872  1252  340C               	retlw	12
  3873  1253  340C               	retlw	12
  3874  1254  340C               	retlw	12
  3875  1255  341E               	retlw	30
  3876  1256  343F               	retlw	63
  3877  1257  34F3               	retlw	243
  3878  1258  34E1               	retlw	225
  3879  1259  34C0               	retlw	192
  3880  125A  3438               	retlw	56
  3881  125B  3478               	retlw	120
  3882  125C  3470               	retlw	112
  3883  125D  34E0               	retlw	224
  3884  125E  34E0               	retlw	224
  3885  125F  34E0               	retlw	224
  3886  1260  34E0               	retlw	224
  3887  1261  34E0               	retlw	224
  3888  1262  3470               	retlw	112
  3889  1263  347F               	retlw	127
  3890  1264  343F               	retlw	63
  3891  1265  340F               	retlw	15
  3892  1266  3400               	retlw	0
  3893  1267  3400               	retlw	0
  3894  1268  3480               	retlw	128
  3895  1269  34C0               	retlw	192
  3896  126A  34E0               	retlw	224
  3897  126B  34F0               	retlw	240
  3898  126C  3478               	retlw	120
  3899  126D  343C               	retlw	60
  3900  126E  341C               	retlw	28
  3901  126F  34FE               	retlw	254
  3902  1270  34FE               	retlw	254
  3903  1271  34FE               	retlw	254
  3904  1272  34F8               	retlw	248
  3905  1273  34FE               	retlw	254
  3906  1274  34FF               	retlw	255
  3907  1275  34C7               	retlw	199
  3908  1276  34C1               	retlw	193
  3909  1277  34C0               	retlw	192
  3910  1278  34C0               	retlw	192
  3911  1279  34C0               	retlw	192
  3912  127A  34C0               	retlw	192
  3913  127B  34FF               	retlw	255
  3914  127C  34FF               	retlw	255
  3915  127D  34FF               	retlw	255
  3916  127E  3400               	retlw	0
  3917  127F  3400               	retlw	0
  3918  1280  3400               	retlw	0
  3919  1281  3400               	retlw	0
  3920  1282  3400               	retlw	0
  3921  1283  3400               	retlw	0
  3922  1284  3400               	retlw	0
  3923  1285  3400               	retlw	0
  3924  1286  3400               	retlw	0
  3925  1287  34FF               	retlw	255
  3926  1288  34FF               	retlw	255
  3927  1289  34FF               	retlw	255
  3928  128A  34FE               	retlw	254
  3929  128B  34FE               	retlw	254
  3930  128C  34FE               	retlw	254
  3931  128D  3406               	retlw	6
  3932  128E  3406               	retlw	6
  3933  128F  3406               	retlw	6
  3934  1290  3406               	retlw	6
  3935  1291  3406               	retlw	6
  3936  1292  3406               	retlw	6
  3937  1293  3406               	retlw	6
  3938  1294  3406               	retlw	6
  3939  1295  3400               	retlw	0
  3940  1296  3407               	retlw	7
  3941  1297  3407               	retlw	7
  3942  1298  3407               	retlw	7
  3943  1299  3406               	retlw	6
  3944  129A  3406               	retlw	6
  3945  129B  3406               	retlw	6
  3946  129C  3406               	retlw	6
  3947  129D  340E               	retlw	14
  3948  129E  341C               	retlw	28
  3949  129F  34FC               	retlw	252
  3950  12A0  34F8               	retlw	248
  3951  12A1  34E0               	retlw	224
  3952  12A2  3430               	retlw	48
  3953  12A3  3470               	retlw	112
  3954  12A4  3470               	retlw	112
  3955  12A5  34E0               	retlw	224
  3956  12A6  34C0               	retlw	192
  3957  12A7  34C0               	retlw	192
  3958  12A8  34C0               	retlw	192
  3959  12A9  34E0               	retlw	224
  3960  12AA  34F0               	retlw	240
  3961  12AB  347F               	retlw	127
  3962  12AC  343F               	retlw	63
  3963  12AD  340F               	retlw	15
  3964  12AE  34E0               	retlw	224
  3965  12AF  34F8               	retlw	248
  3966  12B0  34FC               	retlw	252
  3967  12B1  341E               	retlw	30
  3968  12B2  340E               	retlw	14
  3969  12B3  3406               	retlw	6
  3970  12B4  3406               	retlw	6
  3971  12B5  3406               	retlw	6
  3972  12B6  340E               	retlw	14
  3973  12B7  341C               	retlw	28
  3974  12B8  3418               	retlw	24
  3975  12B9  3400               	retlw	0
  3976  12BA  34FF               	retlw	255
  3977  12BB  34FF               	retlw	255
  3978  12BC  34FF               	retlw	255
  3979  12BD  341C               	retlw	28
  3980  12BE  340E               	retlw	14
  3981  12BF  340E               	retlw	14
  3982  12C0  340E               	retlw	14
  3983  12C1  340E               	retlw	14
  3984  12C2  341C               	retlw	28
  3985  12C3  34FC               	retlw	252
  3986  12C4  34F8               	retlw	248
  3987  12C5  34E0               	retlw	224
  3988  12C6  340F               	retlw	15
  3989  12C7  343F               	retlw	63
  3990  12C8  347F               	retlw	127
  3991  12C9  34F0               	retlw	240
  3992  12CA  34E0               	retlw	224
  3993  12CB  34C0               	retlw	192
  3994  12CC  34C0               	retlw	192
  3995  12CD  34E0               	retlw	224
  3996  12CE  34F0               	retlw	240
  3997  12CF  347F               	retlw	127
  3998  12D0  343F               	retlw	63
  3999  12D1  340F               	retlw	15
  4000  12D2  3406               	retlw	6
  4001  12D3  3406               	retlw	6
  4002  12D4  3406               	retlw	6
  4003  12D5  3406               	retlw	6
  4004  12D6  3406               	retlw	6
  4005  12D7  3406               	retlw	6
  4006  12D8  3406               	retlw	6
  4007  12D9  34C6               	retlw	198
  4008  12DA  34FE               	retlw	254
  4009  12DB  34FE               	retlw	254
  4010  12DC  347E               	retlw	126
  4011  12DD  3400               	retlw	0
  4012  12DE  3400               	retlw	0
  4013  12DF  3400               	retlw	0
  4014  12E0  3400               	retlw	0
  4015  12E1  3480               	retlw	128
  4016  12E2  34E0               	retlw	224
  4017  12E3  34F8               	retlw	248
  4018  12E4  347E               	retlw	126
  4019  12E5  341F               	retlw	31
  4020  12E6  3407               	retlw	7
  4021  12E7  3401               	retlw	1
  4022  12E8  3400               	retlw	0
  4023  12E9  3400               	retlw	0
  4024  12EA  34E0               	retlw	224
  4025  12EB  34F8               	retlw	248
  4026  12EC  34FE               	retlw	254
  4027  12ED  341F               	retlw	31
  4028  12EE  3407               	retlw	7
  4029  12EF  3401               	retlw	1
  4030  12F0  3400               	retlw	0
  4031  12F1  3400               	retlw	0
  4032  12F2  3400               	retlw	0
  4033  12F3  3400               	retlw	0
  4034  12F4  3400               	retlw	0
  4035  12F5  3400               	retlw	0
  4036  12F6  34F0               	retlw	240
  4037  12F7  34F8               	retlw	248
  4038  12F8  34FC               	retlw	252
  4039  12F9  340E               	retlw	14
  4040  12FA  3406               	retlw	6
  4041  12FB  3406               	retlw	6
  4042  12FC  3406               	retlw	6
  4043  12FD  3406               	retlw	6
  4044  12FE  340E               	retlw	14
  4045  12FF  34FC               	retlw	252
  4046  1300  34F8               	retlw	248
  4047  1301  34F0               	retlw	240
  4048  1302  34C1               	retlw	193
  4049  1303  34E3               	retlw	227
  4050  1304  34F7               	retlw	247
  4051  1305  343E               	retlw	62
  4052  1306  341C               	retlw	28
  4053  1307  3418               	retlw	24
  4054  1308  3418               	retlw	24
  4055  1309  341C               	retlw	28
  4056  130A  343E               	retlw	62
  4057  130B  34F7               	retlw	247
  4058  130C  34E3               	retlw	227
  4059  130D  34C1               	retlw	193
  4060  130E  341F               	retlw	31
  4061  130F  343F               	retlw	63
  4062  1310  347F               	retlw	127
  4063  1311  34E0               	retlw	224
  4064  1312  34C0               	retlw	192
  4065  1313  34C0               	retlw	192
  4066  1314  34C0               	retlw	192
  4067  1315  34C0               	retlw	192
  4068  1316  34E0               	retlw	224
  4069  1317  347F               	retlw	127
  4070  1318  343F               	retlw	63
  4071  1319  341F               	retlw	31
  4072  131A  34F0               	retlw	240
  4073  131B  34F8               	retlw	248
  4074  131C  34FC               	retlw	252
  4075  131D  340E               	retlw	14
  4076  131E  3406               	retlw	6
  4077  131F  3406               	retlw	6
  4078  1320  3406               	retlw	6
  4079  1321  3406               	retlw	6
  4080  1322  340E               	retlw	14
  4081  1323  34FC               	retlw	252
  4082  1324  34F8               	retlw	248
  4083  1325  34F0               	retlw	240
  4084  1326  3407               	retlw	7
  4085  1327  341F               	retlw	31
  4086  1328  343F               	retlw	63
  4087  1329  3438               	retlw	56
  4088  132A  3470               	retlw	112
  4089  132B  3470               	retlw	112
  4090  132C  3470               	retlw	112
  4091  132D  3470               	retlw	112
  4092  132E  3438               	retlw	56
  4093  132F  34FF               	retlw	255
  4094  1330  34FF               	retlw	255
  4095  1331  34FF               	retlw	255
  4096  1332  3400               	retlw	0
  4097  1333  3460               	retlw	96
  4098  1334  34E0               	retlw	224
  4099  1335  34C0               	retlw	192
  4100  1336  34C0               	retlw	192
  4101  1337  34C0               	retlw	192
  4102  1338  34E0               	retlw	224
  4103  1339  3470               	retlw	112
  4104  133A  3478               	retlw	120
  4105  133B  343F               	retlw	63
  4106  133C  341F               	retlw	31
  4107  133D  3407               	retlw	7
  4108  133E                     __end_of_LARGE:	
  4109                           
  4110                           	psect	stringtext3
  4111  1800                     __pstringtext3:	
  4112  1800                     _InitConfigRegs:	
  4113  1800  3436               	retlw	54
  4114  1801  3484               	retlw	132
  4115  1802  3404               	retlw	4
  4116  1803  3404               	retlw	4
  4117  1804  340C               	retlw	12
  4118  1805  34C1               	retlw	193
  4119  1806  347D               	retlw	125
  4120  1807  3464               	retlw	100
  4121  1808  3414               	retlw	20
  4122  1809  3477               	retlw	119
  4123  180A  345F               	retlw	95
  4124  180B  3413               	retlw	19
  4125  180C  3438               	retlw	56
  4126  180D  3408               	retlw	8
  4127  180E  3401               	retlw	1
  4128  180F  3400               	retlw	0
  4129  1810  34A3               	retlw	163
  4130  1811  3438               	retlw	56
  4131  1812  3438               	retlw	56
  4132  1813  3407               	retlw	7
  4133  1814  3400               	retlw	0
  4134  1815  3400               	retlw	0
  4135  1816  347A               	retlw	122
  4136  1817  347A               	retlw	122
  4137  1818  346C               	retlw	108
  4138  1819  3431               	retlw	49
  4139  181A  34B0               	retlw	176
  4140  181B  3400               	retlw	0
  4141  181C  3440               	retlw	64
  4142  181D  3400               	retlw	0
  4143  181E  34FC               	retlw	252
  4144  181F  3400               	retlw	0
  4145  1820                     __end_of_InitConfigRegs:	
  4146                           
  4147                           	psect	stringtext4
  4148  183C                     __pstringtext4:	
  4149  183C                     _NVM_BlockROM:	
  4150  183C  3498               	retlw	low (_ROM_NWID| (0+32768))
  4151  183D  3498               	retlw	high (_ROM_NWID| (0+32768))
  4152  183E  3493               	retlw	low (_ROM_PARAM| (0+32768))
  4153  183F  3498               	retlw	high (_ROM_PARAM| (0+32768))
  4154  1840  348A               	retlw	low (_ROM_PIRDATA| (0+32768))
  4155  1841  3498               	retlw	high (_ROM_PIRDATA| (0+32768))
  4156  1842  3460               	retlw	low (_ROM_TEMPPROG| (0+32768))
  4157  1843  3498               	retlw	high (_ROM_TEMPPROG| (0+32768))
  4158  1844  3460               	retlw	low (_ROM_TEMPPROG| (0+32768))
  4159  1845  3498               	retlw	high (_ROM_TEMPPROG| (0+32768))
  4160  1846  349D               	retlw	low (_ROM_TEMP_REGDATA| (0+32768))
  4161  1847  3498               	retlw	high (_ROM_TEMP_REGDATA| (0+32768))
  4162  1848  3400               	retlw	0
  4163  1849  3400               	retlw	0
  4164  184A  3420               	retlw	low (_ROM_CRTRL| (0+32768))
  4165  184B  3498               	retlw	high (_ROM_CRTRL| (0+32768))
  4166  184C  34A1               	retlw	low (_REG_PARAMS_ROM| (0+32768))
  4167  184D  3498               	retlw	high (_REG_PARAMS_ROM| (0+32768))
  4168  184E                     __end_of_NVM_BlockROM:	
  4169                           
  4170                           	psect	stringtext5
  4171  184E                     __pstringtext5:	
  4172  184E                     _NVM_BlockRAM:	
  4173  184E  34D5               	retlw	low (_RAM_NWID| 0)
  4174  184F  3400               	retlw	high (_RAM_NWID| 0)
  4175  1850  34DA               	retlw	low (_RAM_PARAM| 0)
  4176  1851  3400               	retlw	high (_RAM_PARAM| 0)
  4177  1852  345D               	retlw	low (_RAM_PIRDATA| (0+256))
  4178  1853  3401               	retlw	high (_RAM_PIRDATA| (0+256))
  4179  1854  344F               	retlw	low (_RAM_TEMPPROG| (0+256))
  4180  1855  3401               	retlw	high (_RAM_TEMPPROG| (0+256))
  4181  1856  3441               	retlw	low (_RAM_TEMPPROG2| (0+256))
  4182  1857  3401               	retlw	high (_RAM_TEMPPROG2| (0+256))
  4183  1858  34DF               	retlw	low (_RAM_TEMP_REGDATA| 0)
  4184  1859  3400               	retlw	high (_RAM_TEMP_REGDATA| 0)
  4185  185A  3429               	retlw	low (_TEMP_HISTORY| (0+256))
  4186  185B  3401               	retlw	high (_TEMP_HISTORY| (0+256))
  4187  185C  34BE               	retlw	low (_RAM_CTRL| (0+512))
  4188  185D  3402               	retlw	high (_RAM_CTRL| (0+512))
  4189  185E  34E3               	retlw	low (_REG_PARAMS_RAM| 0)
  4190  185F  3400               	retlw	high (_REG_PARAMS_RAM| 0)
  4191  1860                     __end_of_NVM_BlockRAM:	
  4192                           
  4193                           	psect	stringtext6
  4194  1878                     __pstringtext6:	
  4195  1878                     _NVM_BlockAddr:	
  4196  1878  34F0               	retlw	240
  4197  1879  3400               	retlw	0
  4198  187A  340A               	retlw	10
  4199  187B  3414               	retlw	20
  4200  187C  3428               	retlw	40
  4201  187D  348C               	retlw	140
  4202  187E  343C               	retlw	60
  4203  187F  3496               	retlw	150
  4204  1880  34B4               	retlw	180
  4205  1881                     __end_of_NVM_BlockAddr:	
  4206                           
  4207                           	psect	stringtext7
  4208  1881                     __pstringtext7:	
  4209  1881                     _NVM_BlockSize:	
  4210  1881  3405               	retlw	5
  4211  1882  3405               	retlw	5
  4212  1883  3409               	retlw	9
  4213  1884  340E               	retlw	14
  4214  1885  340E               	retlw	14
  4215  1886  3404               	retlw	4
  4216  1887  3418               	retlw	24
  4217  1888  341C               	retlw	28
  4218  1889  3404               	retlw	4
  4219  188A                     __end_of_NVM_BlockSize:	
  4220                           
  4221                           	psect	stringtext8
  4222  1820                     __pstringtext8:	
  4223  1820                     _ROM_CRTRL:	
  4224  1820  340F               	retlw	15
  4225  1821  3404               	retlw	4
  4226  1822  340A               	retlw	10
  4227  1823  340F               	retlw	15
  4228  1824  3405               	retlw	5
  4229  1825  3401               	retlw	1
  4230  1826  3405               	retlw	5
  4231  1827  3407               	retlw	7
  4232  1828  3400               	retlw	0
  4233  1829  34FF               	retlw	-1
  4234  182A  3402               	retlw	2
  4235  182B  3403               	retlw	3
  4236  182C  34FF               	retlw	-1
  4237  182D  34FF               	retlw	-1
  4238  182E  3400               	retlw	0
  4239  182F  3401               	retlw	1
  4240  1830  34FB               	retlw	-5
  4241  1831  34FF               	retlw	-1
  4242  1832  34FE               	retlw	-2
  4243  1833  34FD               	retlw	-3
  4244  1834  34F0               	retlw	-16
  4245  1835  34FE               	retlw	-2
  4246  1836  34FB               	retlw	-5
  4247  1837  34F9               	retlw	-7
  4248  1838  34E2               	retlw	-30
  4249  1839  34FB               	retlw	-5
  4250  183A  34F6               	retlw	-10
  4251  183B  34F1               	retlw	-15
  4252  183C                     __end_of_ROM_CRTRL:	
  4253                           
  4254                           	psect	stringtext9
  4255  1860                     __pstringtext9:	
  4256  1860                     _ROM_TEMPPROG:	
  4257  1860  3400               	retlw	0
  4258  1861  3432               	retlw	50
  4259  1862  345A               	retlw	90
  4260  1863  3478               	retlw	120
  4261  1864  348C               	retlw	140
  4262  1865  34B4               	retlw	180
  4263  1866  34C8               	retlw	200
  4264  1867  34C8               	retlw	200
  4265  1868  34C8               	retlw	200
  4266  1869  34C8               	retlw	200
  4267  186A  34C8               	retlw	200
  4268  186B  34C8               	retlw	200
  4269  186C  34C8               	retlw	200
  4270  186D  34C8               	retlw	200
  4271  186E                     __end_of_ROM_TEMPPROG:	
  4272                           
  4273                           	psect	stringtext10
  4274  188A                     __pstringtext10:	
  4275  188A                     _ROM_PIRDATA:	
  4276  188A  3403               	retlw	3
  4277  188B  34FF               	retlw	255
  4278  188C  34FF               	retlw	255
  4279  188D  34FF               	retlw	255
  4280  188E  34FF               	retlw	255
  4281  188F  3410               	retlw	16
  4282  1890  340E               	retlw	14
  4283  1891  3410               	retlw	16
  4284  1892  340E               	retlw	14
  4285  1893                     __end_of_ROM_PIRDATA:	
  4286                           
  4287                           	psect	stringtext11
  4288  1893                     __pstringtext11:	
  4289  1893                     _ROM_PARAM:	
  4290  1893  34C8               	retlw	200
  4291  1894  34E4               	retlw	228
  4292  1895  340C               	retlw	12
  4293  1896  34C8               	retlw	200
  4294  1897  3464               	retlw	100
  4295  1898                     __end_of_ROM_PARAM:	
  4296                           
  4297                           	psect	stringtext12
  4298  1898                     __pstringtext12:	
  4299  1898                     _ROM_NWID:	
  4300  1898  347A               	retlw	122
  4301  1899  347A               	retlw	122
  4302  189A  346C               	retlw	108
  4303  189B  3431               	retlw	49
  4304  189C  34FE               	retlw	254
  4305  189D                     __end_of_ROM_NWID:	
  4306                           
  4307                           	psect	stringtext13
  4308  189D                     __pstringtext13:	
  4309  189D                     _ROM_TEMP_REGDATA:	
  4310  189D  34FF               	retlw	255
  4311  189E  34FF               	retlw	255
  4312  189F  34FF               	retlw	255
  4313  18A0  34FF               	retlw	255
  4314  18A1                     __end_of_ROM_TEMP_REGDATA:	
  4315                           
  4316                           	psect	stringtext14
  4317  18A1                     __pstringtext14:	
  4318  18A1                     _REG_PARAMS_ROM:	
  4319  18A1  3432               	retlw	50
  4320  18A2  3464               	retlw	100
  4321  18A3  3400               	retlw	0
  4322  18A4  3400               	retlw	0
  4323  18A5                     __end_of_REG_PARAMS_ROM:	
  4324                           
  4325                           	psect	nvBANK1
  4326  00E7                     __pnvBANK1:	
  4327  00E7                     _u16Tics:	
  4328  00E7                     	ds	2
  4329  000D                     _PORTB	set	13
  4330  000D                     _PORTBbits	set	13
  4331  000B                     _INTCONbits	set	11
  4332  000B                     _INTCON	set	11
  4333  001C                     _T2CONbits	set	28
  4334  001B                     _PR2	set	27
  4335  001C                     _T2CON	set	28
  4336  008B                     _SSP1IF	set	139
  4337  0099                     _TMR4IF	set	153
  4338  009B                     _TMR6IF	set	155
  4339  0089                     _TMR2IF	set	137
  4340  009E                     _ADCON1	set	158
  4341  009D                     _ADCON0	set	157
  4342  009B                     _ADRESL	set	155
  4343  009C                     _ADRESH	set	156
  4344  009D                     _ADCON0bits	set	157
  4345  008C                     _TRISAbits	set	140
  4346  0095                     _OPTION_REG	set	149
  4347  008C                     _TRISA	set	140
  4348  008D                     _TRISB	set	141
  4349  0099                     _OSCCONbits	set	153
  4350  048B                     _SSP1IE	set	1163
  4351  049B                     _TMR6IE	set	1179
  4352  0499                     _TMR4IE	set	1177
  4353  0489                     _TMR2IE	set	1161
  4354  010C                     _LATAbits	set	268
  4355  010D                     _LATBbits	set	269
  4356  010D                     _LATB	set	269
  4357  010C                     _LATA	set	268
  4358  011D                     _APFCON0	set	285
  4359  0191                     _EEADR	set	401
  4360  0196                     _EECON2	set	406
  4361  0193                     _EEDATL	set	403
  4362  0195                     _EECON1bits	set	405
  4363  018D                     _ANSELB	set	397
  4364  018C                     _ANSELA	set	396
  4365  0211                     _SSP1BUF	set	529
  4366  0215                     _SSP1CON1bits	set	533
  4367  0214                     _SSP1STAT	set	532
  4368  0217                     _SSP1CON3	set	535
  4369  0216                     _SSP1CON2	set	534
  4370  0215                     _SSP1CON1	set	533
  4371  020D                     _WPUB	set	525
  4372  041D                     _PR6	set	1053
  4373  041E                     _T6CONbits	set	1054
  4374  0416                     _PR4	set	1046
  4375  0417                     _T4CONbits	set	1047
  4376  041E                     _T6CON	set	1054
  4377  0417                     _T4CON	set	1047
  4378                           
  4379                           	psect	stringtext15
  4380  186E                     __pstringtext15:	
  4381  186E                     STR_14:	
  4382  186E  3420               	retlw	32	;' '
  4383  186F  3453               	retlw	83	;'S'
  4384  1870  3465               	retlw	101	;'e'
  4385  1871  3474               	retlw	116	;'t'
  4386  1872  3420               	retlw	32	;' '
  4387  1873  3454               	retlw	84	;'T'
  4388  1874  3465               	retlw	101	;'e'
  4389  1875  346D               	retlw	109	;'m'
  4390  1876  3470               	retlw	112	;'p'
  4391  1877  3400               	retlw	0
  4392                           
  4393                           	psect	stringtext16
  4394  18A5                     __pstringtext16:	
  4395  18A5                     STR_1:	
  4396  18A5  3420               	retlw	32	;' '
  4397  18A6  3420               	retlw	32	;' '
  4398  18A7  3420               	retlw	32	;' '
  4399  18A8  3400               	retlw	0
  4400                           
  4401                           	psect	stringtext17
  4402  18A9                     __pstringtext17:	
  4403  18A9                     STR_3:	
  4404  18A9  3446               	retlw	70	;'F'
  4405  18AA  3465               	retlw	101	;'e'
  4406  18AB  3462               	retlw	98	;'b'
  4407  18AC  3400               	retlw	0
  4408                           
  4409                           	psect	stringtext18
  4410  18AD                     __pstringtext18:	
  4411  18AD                     STR_13:	
  4412  18AD  3444               	retlw	68	;'D'
  4413  18AE  3465               	retlw	101	;'e'
  4414  18AF  3463               	retlw	99	;'c'
  4415  18B0  3400               	retlw	0
  4416                           
  4417                           	psect	stringtext19
  4418  18B1                     __pstringtext19:	
  4419  18B1                     STR_9:	
  4420  18B1  3441               	retlw	65	;'A'
  4421  18B2  3475               	retlw	117	;'u'
  4422  18B3  3467               	retlw	103	;'g'
  4423  18B4  3400               	retlw	0
  4424                           
  4425                           	psect	stringtext20
  4426  18B5                     __pstringtext20:	
  4427  18B5                     STR_8:	
  4428  18B5  344A               	retlw	74	;'J'
  4429  18B6  3475               	retlw	117	;'u'
  4430  18B7  346C               	retlw	108	;'l'
  4431  18B8  3400               	retlw	0
  4432                           
  4433                           	psect	stringtext21
  4434  18B9                     __pstringtext21:	
  4435  18B9                     STR_2:	
  4436  18B9  344A               	retlw	74	;'J'
  4437  18BA  3461               	retlw	97	;'a'
  4438  18BB  346E               	retlw	110	;'n'
  4439  18BC  3400               	retlw	0
  4440                           
  4441                           	psect	stringtext22
  4442  18BD                     __pstringtext22:	
  4443  18BD                     STR_7:	
  4444  18BD  344A               	retlw	74	;'J'
  4445  18BE  3475               	retlw	117	;'u'
  4446  18BF  346E               	retlw	110	;'n'
  4447  18C0  3400               	retlw	0
  4448                           
  4449                           	psect	stringtext23
  4450  18C1                     __pstringtext23:	
  4451  18C1                     STR_10:	
  4452  18C1  3453               	retlw	83	;'S'
  4453  18C2  3465               	retlw	101	;'e'
  4454  18C3  3470               	retlw	112	;'p'
  4455  18C4  3400               	retlw	0
  4456                           
  4457                           	psect	stringtext24
  4458  18C5                     __pstringtext24:	
  4459  18C5                     STR_4:	
  4460  18C5  344D               	retlw	77	;'M'
  4461  18C6  3461               	retlw	97	;'a'
  4462  18C7  3472               	retlw	114	;'r'
  4463  18C8  3400               	retlw	0
  4464                           
  4465                           	psect	stringtext25
  4466  18C9                     __pstringtext25:	
  4467  18C9                     STR_5:	
  4468  18C9  3441               	retlw	65	;'A'
  4469  18CA  3470               	retlw	112	;'p'
  4470  18CB  3472               	retlw	114	;'r'
  4471  18CC  3400               	retlw	0
  4472                           
  4473                           	psect	stringtext26
  4474  18CD                     __pstringtext26:	
  4475  18CD                     STR_11:	
  4476  18CD  344F               	retlw	79	;'O'
  4477  18CE  346B               	retlw	107	;'k'
  4478  18CF  3474               	retlw	116	;'t'
  4479  18D0  3400               	retlw	0
  4480                           
  4481                           	psect	stringtext27
  4482  18D1                     __pstringtext27:	
  4483  18D1                     STR_12:	
  4484  18D1  344E               	retlw	78	;'N'
  4485  18D2  346F               	retlw	111	;'o'
  4486  18D3  3476               	retlw	118	;'v'
  4487  18D4  3400               	retlw	0
  4488                           
  4489                           	psect	stringtext28
  4490  18D5                     __pstringtext28:	
  4491  18D5                     STR_6:	
  4492  18D5  344D               	retlw	77	;'M'
  4493  18D6  3461               	retlw	97	;'a'
  4494  18D7  3479               	retlw	121	;'y'
  4495  18D8  3400               	retlw	0
  4496                           
  4497                           	psect	stringtext29
  4498  0000                     __pstringtext29:	
  4499                           
  4500                           	psect	cinit
  4501  038A                     start_initialization:	
  4502                           ; #config settings
  4503                           
  4504  038A                     __initialization:	
  4505  038A                     end_of_initialization:	
  4506                           ;End of C runtime variable initialization code
  4507                           
  4508  038A                     __end_of__initialization:	
  4509  038A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4510  038B  0020               	movlb	0
  4511  038C  318B  2B83         	ljmp	_main	;jump to C main() function
  4512                           
  4513                           	psect	bssBANK0
  4514  0020                     __pbssBANK0:	
  4515  0020                     _seed:	
  4516  0020                     	ds	4
  4517  0024                     _uSc:	
  4518  0024                     	ds	2
  4519  0026                     _pRam:	
  4520  0026                     	ds	2
  4521  0028                     _PresenceTime:	
  4522  0028                     	ds	2
  4523  002A                     _Delta:	
  4524  002A                     	ds	2
  4525  002C                     _currtemp:	
  4526  002C                     	ds	2
  4527  002E                     _ProgSetTemp:	
  4528  002E                     	ds	2
  4529  0030                     _PIRFlags:	
  4530  0030                     	ds	2
  4531  0032                     _AdcRaw:	
  4532  0032                     	ds	2
  4533  0034                     _cntr:	
  4534  0034                     	ds	1
  4535  0035                     _oldhrs:	
  4536  0035                     	ds	1
  4537  0036                     _ftimer:	
  4538  0036                     	ds	1
  4539  0037                     _PresenceOff:	
  4540  0037                     	ds	1
  4541  0038                     _ePrs:	
  4542  0038                     	ds	1
  4543  0039                     _pflags:	
  4544  0039                     	ds	1
  4545  003A                     _MRF89XA_Error:	
  4546  003A                     	ds	1
  4547  003B                     _RF_Mode:	
  4548  003B                     	ds	1
  4549  003C                     _NVMState:	
  4550  003C                     	ds	1
  4551  003D                     _addr:	
  4552  003D                     	ds	1
  4553  003E                     _ByteCount:	
  4554  003E                     	ds	1
  4555  003F                     _CurrentBlock:	
  4556  003F                     	ds	1
  4557  0040                     _CSm:	
  4558  0040                     	ds	1
  4559  0041                     _MRF89XA_RSSI:	
  4560  0041                     	ds	1
  4561  0042                     _TempHumFlag:	
  4562  0042                     	ds	1
  4563  0043                     _dotctr:	
  4564  0043                     	ds	1
  4565  0044                     _u8menuswitch:	
  4566  0044                     	ds	1
  4567  0045                     _u8editmode:	
  4568  0045                     	ds	1
  4569  0046                     app_Menu@u8temp:	
  4570  0046                     	ds	1
  4571  0047                     _Line:	
  4572  0047                     	ds	1
  4573  0048                     _Menu:	
  4574  0048                     	ds	1
  4575  0049                     _currhum:	
  4576  0049                     	ds	1
  4577  004A                     _bWriteNvm:	
  4578  004A                     	ds	1
  4579  004B                     _c_mode:	
  4580  004B                     	ds	1
  4581  004C                     _nvpos:	
  4582  004C                     	ds	1
  4583  004D                     _nvblock:	
  4584  004D                     	ds	1
  4585  004E                     _evalCntr:	
  4586  004E                     	ds	1
  4587  004F                     _sFlags:	
  4588  004F                     	ds	1
  4589  0050                     _newPWM:	
  4590  0050                     	ds	1
  4591  0051                     _RTC_Status:	
  4592  0051                     	ds	1
  4593  0052                     _SWcnt2:	
  4594  0052                     	ds	1
  4595  0053                     _SWcnt1:	
  4596  0053                     	ds	1
  4597  0054                     _SWdeb2:	
  4598  0054                     	ds	1
  4599  0055                     _SWdeb1:	
  4600  0055                     	ds	1
  4601  0056                     _SW2buf:	
  4602  0056                     	ds	1
  4603  0057                     _SW1buf:	
  4604  0057                     	ds	1
  4605  0058                     _AdcTempCnt:	
  4606  0058                     	ds	1
  4607  0059                     _u8temp:	
  4608  0059                     	ds	1
  4609  005A                     _yp:	
  4610  005A                     	ds	1
  4611  005B                     _xp:	
  4612  005B                     	ds	1
  4613                           
  4614                           	psect	bssBANK1
  4615  00A0                     __pbssBANK1:	
  4616  00A0                     _ComData:	
  4617  00A0                     	ds	19
  4618  00B3                     _ComTxData:	
  4619  00B3                     	ds	9
  4620  00BC                     _DateTime:	
  4621  00BC                     	ds	7
  4622  00C3                     _AdcTempFilt:	
  4623  00C3                     	ds	4
  4624  00C7                     _pRom:	
  4625  00C7                     	ds	2
  4626  00C9                     _oldSetTemp:	
  4627  00C9                     	ds	2
  4628  00CB                     _startTemp:	
  4629  00CB                     	ds	2
  4630  00CD                     _startTime:	
  4631  00CD                     	ds	2
  4632  00CF                     _sTemp:	
  4633  00CF                     	ds	2
  4634  00D1                     _AdcTemp:	
  4635  00D1                     	ds	2
  4636  00D3                     _u16Reset:	
  4637  00D3                     	ds	2
  4638  00D5                     _RAM_NWID:	
  4639  00D5                     	ds	5
  4640  00DA                     _RAM_PARAM:	
  4641  00DA                     	ds	5
  4642  00DF                     _RAM_TEMP_REGDATA:	
  4643  00DF                     	ds	4
  4644  00E3                     _REG_PARAMS_RAM:	
  4645  00E3                     	ds	4
  4646                           
  4647                           	psect	bssBANK2
  4648  0120                     __pbssBANK2:	
  4649  0120                     _NVM_BlockStatus:	
  4650  0120                     	ds	9
  4651  0129                     _TEMP_HISTORY:	
  4652  0129                     	ds	24
  4653  0141                     _RAM_TEMPPROG2:	
  4654  0141                     	ds	14
  4655  014F                     _RAM_TEMPPROG:	
  4656  014F                     	ds	14
  4657  015D                     _RAM_PIRDATA:	
  4658  015D                     	ds	9
  4659                           
  4660                           	psect	bssBANK3
  4661  01A0                     __pbssBANK3:	
  4662  01A0                     _RxPacket:	
  4663  01A0                     	ds	64
  4664                           
  4665                           	psect	bssBANK4
  4666  0220                     __pbssBANK4:	
  4667  0220                     _TxPacket:	
  4668  0220                     	ds	64
  4669                           
  4670                           	psect	bssBANK5
  4671  02A0                     __pbssBANK5:	
  4672  02A0                     _WorkBuff:	
  4673  02A0                     	ds	30
  4674  02BE                     _RAM_CTRL:	
  4675  02BE                     	ds	28
  4676                           
  4677                           	psect	cstackCOMMON
  4678  0070                     __pcstackCOMMON:	
  4679  0070                     ?_I2C_Init:	
  4680  0070                     ??_I2C_Init:	
  4681                           ; 1 bytes @ 0x0
  4682                           
  4683  0070                     ?_SPI_HF_Init:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0070                     ??_SPI_HF_Init:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0070                     ?_IO_Init:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0070                     ??_IO_Init:	
  4693                           ; 1 bytes @ 0x0
  4694                           
  4695  0070                     ?_LCD_Init:	
  4696                           ; 1 bytes @ 0x0
  4697                           
  4698  0070                     ?_NVM_Init:	
  4699                           ; 1 bytes @ 0x0
  4700                           
  4701  0070                     ?_Comm_Init:	
  4702                           ; 1 bytes @ 0x0
  4703                           
  4704  0070                     ?_AirS_Init:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707  0070                     ??_AirS_Init:	
  4708                           ; 1 bytes @ 0x0
  4709                           
  4710  0070                     ?_RTC_Init:	
  4711                           ; 1 bytes @ 0x0
  4712                           
  4713  0070                     ??_RTC_Init:	
  4714                           ; 1 bytes @ 0x0
  4715                           
  4716  0070                     ?_PRG_Init:	
  4717                           ; 1 bytes @ 0x0
  4718                           
  4719  0070                     ??_PRG_Init:	
  4720                           ; 1 bytes @ 0x0
  4721                           
  4722  0070                     ?_REG_Init:	
  4723                           ; 1 bytes @ 0x0
  4724                           
  4725  0070                     ??_REG_Init:	
  4726                           ; 1 bytes @ 0x0
  4727                           
  4728  0070                     ?_PRS_Init:	
  4729                           ; 1 bytes @ 0x0
  4730                           
  4731  0070                     ??_PRS_Init:	
  4732                           ; 1 bytes @ 0x0
  4733                           
  4734  0070                     ?_MNU_Init:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0070                     ?_WIN_Init:	
  4738                           ; 1 bytes @ 0x0
  4739                           
  4740  0070                     ??_WIN_Init:	
  4741                           ; 1 bytes @ 0x0
  4742                           
  4743  0070                     ?_Comm_OnIdle:	
  4744                           ; 1 bytes @ 0x0
  4745                           
  4746  0070                     ?_IO_TaskFast:	
  4747                           ; 1 bytes @ 0x0
  4748                           
  4749  0070                     ??_IO_TaskFast:	
  4750                           ; 1 bytes @ 0x0
  4751                           
  4752  0070                     ?_MNU_TaskButton:	
  4753                           ; 1 bytes @ 0x0
  4754                           
  4755  0070                     ?_PRS_Task:	
  4756                           ; 1 bytes @ 0x0
  4757                           
  4758  0070                     ?_AirS_Task:	
  4759                           ; 1 bytes @ 0x0
  4760                           
  4761  0070                     ??_AirS_Task:	
  4762                           ; 1 bytes @ 0x0
  4763                           
  4764  0070                     ?_Comm_Task:	
  4765                           ; 1 bytes @ 0x0
  4766                           
  4767  0070                     ?_PRS_Task1s:	
  4768                           ; 1 bytes @ 0x0
  4769                           
  4770  0070                     ??_PRS_Task1s:	
  4771                           ; 1 bytes @ 0x0
  4772                           
  4773  0070                     ?_AirS_Task_Slow:	
  4774                           ; 1 bytes @ 0x0
  4775                           
  4776  0070                     ?_Comm_TaskSlow:	
  4777                           ; 1 bytes @ 0x0
  4778                           
  4779  0070                     ??_Comm_TaskSlow:	
  4780                           ; 1 bytes @ 0x0
  4781                           
  4782  0070                     ?_WIN_TaskSlow:	
  4783                           ; 1 bytes @ 0x0
  4784                           
  4785  0070                     ??_WIN_TaskSlow:	
  4786                           ; 1 bytes @ 0x0
  4787                           
  4788  0070                     ?_RTC_TaskSlow:	
  4789                           ; 1 bytes @ 0x0
  4790                           
  4791  0070                     ??_RTC_TaskSlow:	
  4792                           ; 1 bytes @ 0x0
  4793                           
  4794  0070                     ?_IO_TaskSlow:	
  4795                           ; 1 bytes @ 0x0
  4796                           
  4797  0070                     ?_PRG_TaskSlow:	
  4798                           ; 1 bytes @ 0x0
  4799                           
  4800  0070                     ?_REG_TaskSlow:	
  4801                           ; 1 bytes @ 0x0
  4802                           
  4803  0070                     ?_NVM_Task:	
  4804                           ; 1 bytes @ 0x0
  4805                           
  4806  0070                     ?_NVM_IsIdle:	
  4807                           ; 1 bytes @ 0x0
  4808                           
  4809  0070                     ??_NVM_IsIdle:	
  4810                           ; 1 bytes @ 0x0
  4811                           
  4812  0070                     ?_MNU_Task:	
  4813                           ; 1 bytes @ 0x0
  4814                           
  4815  0070                     ?_SPI_HF_Put:	
  4816                           ; 1 bytes @ 0x0
  4817                           
  4818  0070                     ??_SPI_HF_Put:	
  4819                           ; 1 bytes @ 0x0
  4820                           
  4821  0070                     ?_LCD_Char:	
  4822                           ; 1 bytes @ 0x0
  4823                           
  4824  0070                     ?_IO_StartTimer2:	
  4825                           ; 1 bytes @ 0x0
  4826                           
  4827  0070                     ??_IO_StartTimer2:	
  4828                           ; 1 bytes @ 0x0
  4829                           
  4830  0070                     ?_WIN_IsOpen:	
  4831                           ; 1 bytes @ 0x0
  4832                           
  4833  0070                     ??_WIN_IsOpen:	
  4834                           ; 1 bytes @ 0x0
  4835                           
  4836  0070                     ?_RTC_TimeToNumber:	
  4837                           ; 1 bytes @ 0x0
  4838                           
  4839  0070                     ?_NVM_ReadBlockData:	
  4840                           ; 1 bytes @ 0x0
  4841                           
  4842  0070                     ?_PRS_RoomPresence:	
  4843                           ; 1 bytes @ 0x0
  4844                           
  4845  0070                     ??_PRS_RoomPresence:	
  4846                           ; 1 bytes @ 0x0
  4847                           
  4848  0070                     ?_NVM_WriteBlock:	
  4849                           ; 1 bytes @ 0x0
  4850                           
  4851  0070                     ??_NVM_WriteBlock:	
  4852                           ; 1 bytes @ 0x0
  4853                           
  4854  0070                     ?_NVM_WriteBlockData:	
  4855                           ; 1 bytes @ 0x0
  4856                           
  4857  0070                     ?_NEG_RESP:	
  4858                           ; 1 bytes @ 0x0
  4859                           
  4860  0070                     ??_NEG_RESP:	
  4861                           ; 1 bytes @ 0x0
  4862                           
  4863  0070                     ?_POS_RESP:	
  4864                           ; 1 bytes @ 0x0
  4865                           
  4866  0070                     ??_POS_RESP:	
  4867                           ; 1 bytes @ 0x0
  4868                           
  4869  0070                     ?_NVM_GetBlockLenght:	
  4870                           ; 1 bytes @ 0x0
  4871                           
  4872  0070                     ??_NVM_GetBlockLenght:	
  4873                           ; 1 bytes @ 0x0
  4874                           
  4875  0070                     ?_MRF89XARegisterRead:	
  4876                           ; 1 bytes @ 0x0
  4877                           
  4878  0070                     ?_MRF89XASetRFMode:	
  4879                           ; 1 bytes @ 0x0
  4880                           
  4881  0070                     ?_WriteFIFO:	
  4882                           ; 1 bytes @ 0x0
  4883                           
  4884  0070                     ?_TransmitFrame:	
  4885                           ; 1 bytes @ 0x0
  4886                           
  4887  0070                     ?_Comm_IsAlreadyReceived:	
  4888                           ; 1 bytes @ 0x0
  4889                           
  4890  0070                     ??_Comm_IsAlreadyReceived:	
  4891                           ; 1 bytes @ 0x0
  4892                           
  4893  0070                     ?_PRS_OnPIRFrame:	
  4894                           ; 1 bytes @ 0x0
  4895                           
  4896  0070                     ??_PRS_OnPIRFrame:	
  4897                           ; 1 bytes @ 0x0
  4898                           
  4899  0070                     ?_App_OnWinSensor:	
  4900                           ; 1 bytes @ 0x0
  4901                           
  4902  0070                     ??_App_OnWinSensor:	
  4903                           ; 1 bytes @ 0x0
  4904                           
  4905  0070                     ?_App_OnAirTempSig:	
  4906                           ; 1 bytes @ 0x0
  4907                           
  4908  0070                     ??_App_OnAirTempSig:	
  4909                           ; 1 bytes @ 0x0
  4910                           
  4911  0070                     ?_App_OnAirHumSig:	
  4912                           ; 1 bytes @ 0x0
  4913                           
  4914  0070                     ??_App_OnAirHumSig:	
  4915                           ; 1 bytes @ 0x0
  4916                           
  4917  0070                     ?_Clock_Init:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0070                     ??_Clock_Init:	
  4921                           ; 1 bytes @ 0x0
  4922                           
  4923  0070                     ?_Ports_Init:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0070                     ??_Ports_Init:	
  4927                           ; 1 bytes @ 0x0
  4928                           
  4929  0070                     ?_RequestReset:	
  4930                           ; 1 bytes @ 0x0
  4931                           
  4932  0070                     ??_RequestReset:	
  4933                           ; 1 bytes @ 0x0
  4934                           
  4935  0070                     ?_ISR:	
  4936                           ; 1 bytes @ 0x0
  4937                           
  4938  0070                     ??_ISR:	
  4939                           ; 1 bytes @ 0x0
  4940                           
  4941  0070                     ?_Read_Eep:	
  4942                           ; 1 bytes @ 0x0
  4943                           
  4944  0070                     ??_Read_Eep:	
  4945                           ; 1 bytes @ 0x0
  4946                           
  4947  0070                     ?_Write_Eep:	
  4948                           ; 1 bytes @ 0x0
  4949                           
  4950  0070                     ?_LCDWriteCMD:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0070                     ?_LCD_ClearLine:	
  4954                           ; 1 bytes @ 0x0
  4955                           
  4956  0070                     ?_LCD_ClearLCD:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0070                     ?_LCD_LargeDigit:	
  4960                           ; 1 bytes @ 0x0
  4961                           
  4962  0070                     ?_LCD_LargeDot:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0070                     ?_LCD_Large2Dots:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0070                     ?_LCD_LargePlus:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0070                     ?_LCD_LargeMinus:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0070                     ?_LCD_BitmapV:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0070                     ?_IO_DisablePIR:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0070                     ??_IO_DisablePIR:	
  4981                           ; 1 bytes @ 0x0
  4982                           
  4983  0070                     ?_IO_CalcTemp:	
  4984                           ; 1 bytes @ 0x0
  4985                           
  4986  0070                     ??_IO_CalcTemp:	
  4987                           ; 1 bytes @ 0x0
  4988                           
  4989  0070                     ?_IO_GetPIRLevel:	
  4990                           ; 1 bytes @ 0x0
  4991                           
  4992  0070                     ??_IO_GetPIRLevel:	
  4993                           ; 1 bytes @ 0x0
  4994                           
  4995  0070                     ?_IO_GetPIRPin:	
  4996                           ; 1 bytes @ 0x0
  4997                           
  4998  0070                     ??_IO_GetPIRPin:	
  4999                           ; 1 bytes @ 0x0
  5000                           
  5001  0070                     ?_IO_GetSW1Press:	
  5002                           ; 1 bytes @ 0x0
  5003                           
  5004  0070                     ??_IO_GetSW1Press:	
  5005                           ; 1 bytes @ 0x0
  5006                           
  5007  0070                     ?_IO_GetSW2Press:	
  5008                           ; 1 bytes @ 0x0
  5009                           
  5010  0070                     ??_IO_GetSW2Press:	
  5011                           ; 1 bytes @ 0x0
  5012                           
  5013  0070                     ?_IO_StartTimer1:	
  5014                           ; 1 bytes @ 0x0
  5015                           
  5016  0070                     ??_IO_StartTimer1:	
  5017                           ; 1 bytes @ 0x0
  5018                           
  5019  0070                     ?_SPI_HF_Get:	
  5020                           ; 1 bytes @ 0x0
  5021                           
  5022  0070                     ??_SPI_HF_Get:	
  5023                           ; 1 bytes @ 0x0
  5024                           
  5025  0070                     ?_REG_FZLogic:	
  5026                           ; 1 bytes @ 0x0
  5027                           
  5028  0070                     ??_REG_FZLogic:	
  5029                           ; 1 bytes @ 0x0
  5030                           
  5031  0070                     ?_REG_GetLevel:	
  5032                           ; 1 bytes @ 0x0
  5033                           
  5034  0070                     ??_REG_GetLevel:	
  5035                           ; 1 bytes @ 0x0
  5036                           
  5037  0070                     ?_DetermineProg:	
  5038                           ; 1 bytes @ 0x0
  5039                           
  5040  0070                     ?_DetermineMode:	
  5041                           ; 1 bytes @ 0x0
  5042                           
  5043  0070                     ?_PRG_SetNewTemp:	
  5044                           ; 1 bytes @ 0x0
  5045                           
  5046  0070                     ?_DrawClrLastLines:	
  5047                           ; 1 bytes @ 0x0
  5048                           
  5049  0070                     ?_DrawTimeDate:	
  5050                           ; 1 bytes @ 0x0
  5051                           
  5052  0070                     ?_DrawLargeHum:	
  5053                           ; 1 bytes @ 0x0
  5054                           
  5055  0070                     ?_DrawLargeTime:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     ?_DrawRegPower:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     ?_DrawSetTempText:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     ?_ROL:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     ??_ROL:	
  5068                           ; 1 bytes @ 0x0
  5069                           
  5070  0070                     ?_Calc_Key:	
  5071                           ; 1 bytes @ 0x0
  5072                           
  5073  0070                     ?_UDS_CompareKey:	
  5074                           ; 1 bytes @ 0x0
  5075                           
  5076  0070                     ?_UDS_GetSeed:	
  5077                           ; 1 bytes @ 0x0
  5078                           
  5079  0070                     ?_WriteNVMBlockSync:	
  5080                           ; 1 bytes @ 0x0
  5081                           
  5082  0070                     ?_UDS_WDBID:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ?_UDS_RDBID:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ?_PrepBlockData:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ??_PrepBlockData:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ?_ReadBlock:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ?_MRF89XAInit:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  0070                     ?_MRF89XAStartReception:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  0070                     ?_MRF89XASendFrame:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     ?_ReadFIFO:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     ??_ReadFIFO:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     ?_MRF89XACheckRSSI:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     ?_MRF89XATask:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?_RTC_OnRTCFrame:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ??_RTC_OnRTCFrame:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?_RTC_BCD2DEC:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ?_Comm_PrepareTransmit:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?_Comm_InitMRF:	
  5131                           ; 1 bytes @ 0x0
  5132                           
  5133  0070                     ?_Comm_RxProcess:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  0070                     ?_ReloadTime:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  0070                     ??_ReloadTime:	
  5140                           ; 1 bytes @ 0x0
  5141                           
  5142  0070                     ?_GetRIRLevel:	
  5143                           ; 1 bytes @ 0x0
  5144                           
  5145  0070                     ??_GetRIRLevel:	
  5146                           ; 1 bytes @ 0x0
  5147                           
  5148  0070                     ?___bmul:	
  5149                           ; 1 bytes @ 0x0
  5150                           
  5151  0070                     ?___lbmod:	
  5152                           ; 1 bytes @ 0x0
  5153                           
  5154  0070                     ?_main:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     ?_IO_GetTempMeas:	
  5158                           ; 2 bytes @ 0x0
  5159                           
  5160  0070                     ?___wmul:	
  5161                           ; 2 bytes @ 0x0
  5162                           
  5163  0070                     ?___awdiv:	
  5164                           ; 2 bytes @ 0x0
  5165                           
  5166  0070                     ?___awmod:	
  5167                           ; 2 bytes @ 0x0
  5168                           
  5169  0070                     ?___lmul:	
  5170                           ; 2 bytes @ 0x0
  5171                           
  5172  0070                     Read_Eep@badd:	
  5173                           ; 4 bytes @ 0x0
  5174                           
  5175  0070                     Write_Eep@bdata:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     IO_GetSW1Press@b:	
  5179                           ; 1 bytes @ 0x0
  5180                           
  5181  0070                     IO_GetSW2Press@b:	
  5182                           ; 1 bytes @ 0x0
  5183                           
  5184  0070                     IO_StartTimer1@Time:	
  5185                           ; 1 bytes @ 0x0
  5186                           
  5187  0070                     IO_StartTimer2@Time:	
  5188                           ; 1 bytes @ 0x0
  5189                           
  5190  0070                     SPI_HF_Put@v:	
  5191                           ; 1 bytes @ 0x0
  5192                           
  5193  0070                     ROL@num:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196  0070                     NVM_WriteBlock@BlockIndex:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199  0070                     NVM_IsIdle@i:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0070                     NVM_GetBlockLenght@Block:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0070                     NVM_WriteBlockData@offset:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0070                     NVM_ReadBlockData@offset:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211  0070                     ReadFIFO@value:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0070                     NEG_RESP@c:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0070                     POS_RESP@len:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0070                     ReloadTime@bLocal:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0070                     AirS_Init@i:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0070                     _WIN_IsOpen$1753:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0070                     ___bmul@multiplicand:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0070                     ___lbmod@divisor:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0070                     IO_CalcTemp@offs8:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0070                     ___wmul@multiplier:	
  5239                           ; 2 bytes @ 0x0
  5240                           
  5241  0070                     ___awdiv@divisor:	
  5242                           ; 2 bytes @ 0x0
  5243                           
  5244  0070                     ___awmod@divisor:	
  5245                           ; 2 bytes @ 0x0
  5246                           
  5247  0070                     ___lmul@multiplier:	
  5248                           ; 2 bytes @ 0x0
  5249                           
  5250                           
  5251                           ; 4 bytes @ 0x0
  5252  0070                     	ds	1
  5253  0071                     ??_PRS_Task:	
  5254  0071                     ??_Comm_Task:	
  5255                           ; 1 bytes @ 0x1
  5256                           
  5257  0071                     ??_REG_TaskSlow:	
  5258                           ; 1 bytes @ 0x1
  5259                           
  5260  0071                     ??_NVM_ReadBlockData:	
  5261                           ; 1 bytes @ 0x1
  5262                           
  5263  0071                     ?_MRF89XARegisterSet:	
  5264                           ; 1 bytes @ 0x1
  5265                           
  5266  0071                     ??_MRF89XARegisterRead:	
  5267                           ; 1 bytes @ 0x1
  5268                           
  5269  0071                     ??_WriteFIFO:	
  5270                           ; 1 bytes @ 0x1
  5271                           
  5272  0071                     ??_Write_Eep:	
  5273                           ; 1 bytes @ 0x1
  5274                           
  5275  0071                     ??_LCDWriteCMD:	
  5276                           ; 1 bytes @ 0x1
  5277                           
  5278  0071                     ??_LCD_ClearLine:	
  5279                           ; 1 bytes @ 0x1
  5280                           
  5281  0071                     ??_LCD_ClearLCD:	
  5282                           ; 1 bytes @ 0x1
  5283                           
  5284  0071                     ??_LCD_LargeDot:	
  5285                           ; 1 bytes @ 0x1
  5286                           
  5287  0071                     ??_LCD_LargePlus:	
  5288                           ; 1 bytes @ 0x1
  5289                           
  5290  0071                     ??_LCD_LargeMinus:	
  5291                           ; 1 bytes @ 0x1
  5292                           
  5293  0071                     ??_LCD_BitmapV:	
  5294                           ; 1 bytes @ 0x1
  5295                           
  5296  0071                     ??_Calc_Key:	
  5297                           ; 1 bytes @ 0x1
  5298                           
  5299  0071                     ??_UDS_GetSeed:	
  5300                           ; 1 bytes @ 0x1
  5301                           
  5302  0071                     ??_Comm_PrepareTransmit:	
  5303                           ; 1 bytes @ 0x1
  5304                           
  5305  0071                     ??___bmul:	
  5306                           ; 1 bytes @ 0x1
  5307                           
  5308  0071                     ??___lbmod:	
  5309                           ; 1 bytes @ 0x1
  5310                           
  5311  0071                     Write_Eep@badd:	
  5312                           ; 1 bytes @ 0x1
  5313                           
  5314  0071                     LCDWriteCMD@data:	
  5315                           ; 1 bytes @ 0x1
  5316                           
  5317  0071                     LCD_ClearLine@i:	
  5318                           ; 1 bytes @ 0x1
  5319                           
  5320  0071                     LCD_BitmapV@bmp:	
  5321                           ; 1 bytes @ 0x1
  5322                           
  5323  0071                     IO_TaskFast@bUV:	
  5324                           ; 1 bytes @ 0x1
  5325                           
  5326  0071                     NVM_WriteBlockData@data:	
  5327                           ; 1 bytes @ 0x1
  5328                           
  5329  0071                     MRF89XARegisterSet@value:	
  5330                           ; 1 bytes @ 0x1
  5331                           
  5332  0071                     MRF89XARegisterRead@value:	
  5333                           ; 1 bytes @ 0x1
  5334                           
  5335  0071                     WriteFIFO@Data:	
  5336                           ; 1 bytes @ 0x1
  5337                           
  5338  0071                     ___bmul@product:	
  5339                           ; 1 bytes @ 0x1
  5340                           
  5341  0071                     LCD_ClearLCD@index:	
  5342                           ; 1 bytes @ 0x1
  5343                           
  5344  0071                     UDS_CompareKey@s1:	
  5345                           ; 2 bytes @ 0x1
  5346                           
  5347                           
  5348                           ; 4 bytes @ 0x1
  5349  0071                     	ds	1
  5350  0072                     ??_LCD_Init:	
  5351  0072                     ??_NVM_WriteBlockData:	
  5352                           ; 1 bytes @ 0x2
  5353                           
  5354  0072                     ??_MRF89XARegisterSet:	
  5355                           ; 1 bytes @ 0x2
  5356                           
  5357  0072                     ?_LCD_XY:	
  5358                           ; 1 bytes @ 0x2
  5359                           
  5360  0072                     ??_IO_GetTempMeas:	
  5361                           ; 1 bytes @ 0x2
  5362                           
  5363  0072                     Write_Eep@SAVEICON:	
  5364                           ; 1 bytes @ 0x2
  5365                           
  5366  0072                     LCD_XY@y:	
  5367                           ; 1 bytes @ 0x2
  5368                           
  5369  0072                     MRF89XARegisterSet@address:	
  5370                           ; 1 bytes @ 0x2
  5371                           
  5372  0072                     MRF89XARegisterRead@address:	
  5373                           ; 1 bytes @ 0x2
  5374                           
  5375  0072                     ___bmul@multiplier:	
  5376                           ; 1 bytes @ 0x2
  5377                           
  5378  0072                     ___lbmod@dividend:	
  5379                           ; 1 bytes @ 0x2
  5380                           
  5381  0072                     ___wmul@multiplicand:	
  5382                           ; 1 bytes @ 0x2
  5383                           
  5384  0072                     ___awdiv@dividend:	
  5385                           ; 2 bytes @ 0x2
  5386                           
  5387  0072                     ___awmod@dividend:	
  5388                           ; 2 bytes @ 0x2
  5389                           
  5390                           
  5391                           ; 2 bytes @ 0x2
  5392  0072                     	ds	1
  5393  0073                     ??_MNU_Init:	
  5394  0073                     ??_MRF89XASetRFMode:	
  5395                           ; 1 bytes @ 0x3
  5396                           
  5397  0073                     ??_LCD_XY:	
  5398                           ; 1 bytes @ 0x3
  5399                           
  5400  0073                     ??_ReadBlock:	
  5401                           ; 1 bytes @ 0x3
  5402                           
  5403  0073                     ??_MRF89XACheckRSSI:	
  5404                           ; 1 bytes @ 0x3
  5405                           
  5406  0073                     ??_RTC_BCD2DEC:	
  5407                           ; 1 bytes @ 0x3
  5408                           
  5409  0073                     LCD_XY@x:	
  5410                           ; 1 bytes @ 0x3
  5411                           
  5412  0073                     MRF89XASetRFMode@mcparam0_read:	
  5413                           ; 1 bytes @ 0x3
  5414                           
  5415  0073                     RTC_BCD2DEC@y:	
  5416                           ; 1 bytes @ 0x3
  5417                           
  5418  0073                     ___lbmod@counter:	
  5419                           ; 1 bytes @ 0x3
  5420                           
  5421                           
  5422                           ; 1 bytes @ 0x3
  5423  0073                     	ds	1
  5424  0074                     ??_NVM_Init:	
  5425  0074                     ??_NVM_Task:	
  5426                           ; 1 bytes @ 0x4
  5427                           
  5428  0074                     ??_LCD_Large2Dots:	
  5429                           ; 1 bytes @ 0x4
  5430                           
  5431  0074                     ??_DrawClrLastLines:	
  5432                           ; 1 bytes @ 0x4
  5433                           
  5434  0074                     ??___wmul:	
  5435                           ; 1 bytes @ 0x4
  5436                           
  5437  0074                     ??___awdiv:	
  5438                           ; 1 bytes @ 0x4
  5439                           
  5440  0074                     ??___awmod:	
  5441                           ; 1 bytes @ 0x4
  5442                           
  5443  0074                     LCD_Large2Dots@bON:	
  5444                           ; 1 bytes @ 0x4
  5445                           
  5446  0074                     NVM_Task@i:	
  5447                           ; 1 bytes @ 0x4
  5448                           
  5449  0074                     NVM_ReadBlockData@Block:	
  5450                           ; 1 bytes @ 0x4
  5451                           
  5452  0074                     MRF89XASetRFMode@mode:	
  5453                           ; 1 bytes @ 0x4
  5454                           
  5455  0074                     RTC_BCD2DEC@x:	
  5456                           ; 1 bytes @ 0x4
  5457                           
  5458  0074                     ___awdiv@counter:	
  5459                           ; 1 bytes @ 0x4
  5460                           
  5461  0074                     ___awmod@counter:	
  5462                           ; 1 bytes @ 0x4
  5463                           
  5464  0074                     ___lbmod@rem:	
  5465                           ; 1 bytes @ 0x4
  5466                           
  5467  0074                     ___wmul@product:	
  5468                           ; 1 bytes @ 0x4
  5469                           
  5470  0074                     ___lmul@multiplicand:	
  5471                           ; 2 bytes @ 0x4
  5472                           
  5473                           
  5474                           ; 4 bytes @ 0x4
  5475  0074                     	ds	1
  5476  0075                     ??_AirS_Task_Slow:	
  5477  0075                     ??_WriteNVMBlockSync:	
  5478                           ; 1 bytes @ 0x5
  5479                           
  5480  0075                     ??_MRF89XAInit:	
  5481                           ; 1 bytes @ 0x5
  5482                           
  5483  0075                     ??_MRF89XAStartReception:	
  5484                           ; 1 bytes @ 0x5
  5485                           
  5486  0075                     ??_MRF89XASendFrame:	
  5487                           ; 1 bytes @ 0x5
  5488                           
  5489  0075                     ??_MRF89XATask:	
  5490                           ; 1 bytes @ 0x5
  5491                           
  5492  0075                     ?___lbdiv:	
  5493                           ; 1 bytes @ 0x5
  5494                           
  5495  0075                     WriteNVMBlockSync@block:	
  5496                           ; 1 bytes @ 0x5
  5497                           
  5498  0075                     MRF89XAInit@res:	
  5499                           ; 1 bytes @ 0x5
  5500                           
  5501  0075                     MRF89XAStartReception@i:	
  5502                           ; 1 bytes @ 0x5
  5503                           
  5504  0075                     MRF89XASendFrame@i:	
  5505                           ; 1 bytes @ 0x5
  5506                           
  5507  0075                     MRF89XATask@k:	
  5508                           ; 1 bytes @ 0x5
  5509                           
  5510  0075                     ___awdiv@sign:	
  5511                           ; 1 bytes @ 0x5
  5512                           
  5513  0075                     ___awmod@sign:	
  5514                           ; 1 bytes @ 0x5
  5515                           
  5516  0075                     ___lbdiv@divisor:	
  5517                           ; 1 bytes @ 0x5
  5518                           
  5519  0075                     NVM_ReadBlockData@pr:	
  5520                           ; 1 bytes @ 0x5
  5521                           
  5522                           
  5523                           ; 2 bytes @ 0x5
  5524  0075                     	ds	1
  5525  0076                     ??_LCD_Char:	
  5526  0076                     ??_LCD_LargeDigit:	
  5527                           ; 1 bytes @ 0x6
  5528                           
  5529  0076                     ??___lbdiv:	
  5530                           ; 1 bytes @ 0x6
  5531                           
  5532  0076                     LCD_LargeDigit@dig:	
  5533                           ; 1 bytes @ 0x6
  5534                           
  5535  0076                     LCD_Char@character:	
  5536                           ; 1 bytes @ 0x6
  5537                           
  5538  0076                     MRF89XAInit@input:	
  5539                           ; 1 bytes @ 0x6
  5540                           
  5541  0076                     MRF89XATask@i:	
  5542                           ; 1 bytes @ 0x6
  5543                           
  5544  0076                     ___lbdiv@dividend:	
  5545                           ; 1 bytes @ 0x6
  5546                           
  5547  0076                     NVM_WriteBlockData@pr:	
  5548                           ; 1 bytes @ 0x6
  5549                           
  5550  0076                     ___awdiv@quotient:	
  5551                           ; 2 bytes @ 0x6
  5552                           
  5553                           
  5554                           ; 2 bytes @ 0x6
  5555  0076                     	ds	1
  5556  0077                     ??_UDS_RDBID:	
  5557  0077                     LCD_LargeDigit@i:	
  5558                           ; 1 bytes @ 0x7
  5559                           
  5560  0077                     LCD_Char@j:	
  5561                           ; 1 bytes @ 0x7
  5562                           
  5563  0077                     MRF89XAInit@i:	
  5564                           ; 1 bytes @ 0x7
  5565                           
  5566  0077                     ___lbdiv@counter:	
  5567                           ; 1 bytes @ 0x7
  5568                           
  5569                           
  5570                           ; 1 bytes @ 0x7
  5571  0077                     	ds	1
  5572  0078                     ??_Comm_Init:	
  5573  0078                     ??_TransmitFrame:	
  5574                           ; 1 bytes @ 0x8
  5575                           
  5576  0078                     ??_Comm_InitMRF:	
  5577                           ; 1 bytes @ 0x8
  5578                           
  5579  0078                     ??___lmul:	
  5580                           ; 1 bytes @ 0x8
  5581                           
  5582  0078                     NVM_WriteBlockData@Block:	
  5583                           ; 1 bytes @ 0x8
  5584                           
  5585  0078                     ___lbdiv@quotient:	
  5586                           ; 1 bytes @ 0x8
  5587                           
  5588  0078                     LCD_LargeDigit@offs:	
  5589                           ; 1 bytes @ 0x8
  5590                           
  5591  0078                     LCD_Char@index:	
  5592                           ; 2 bytes @ 0x8
  5593                           
  5594  0078                     UDS_RDBID@i:	
  5595                           ; 2 bytes @ 0x8
  5596                           
  5597  0078                     ___lmul@product:	
  5598                           ; 2 bytes @ 0x8
  5599                           
  5600                           
  5601                           ; 4 bytes @ 0x8
  5602  0078                     	ds	1
  5603  0079                     ??_RTC_TimeToNumber:	
  5604  0079                     ??_PRG_SetNewTemp:	
  5605                           ; 1 bytes @ 0x9
  5606                           
  5607  0079                     ??_UDS_WDBID:	
  5608                           ; 1 bytes @ 0x9
  5609                           
  5610  0079                     UDS_WDBID@j:	
  5611                           ; 1 bytes @ 0x9
  5612                           
  5613  0079                     RTC_TimeToNumber@r:	
  5614                           ; 1 bytes @ 0x9
  5615                           
  5616                           
  5617                           ; 1 bytes @ 0x9
  5618  0079                     	ds	1
  5619  007A                     ?_LCD_BCDNumber:	
  5620  007A                     ?_LCD_String:	
  5621                           ; 1 bytes @ 0xA
  5622                           
  5623  007A                     ??_DetermineProg:	
  5624                           ; 1 bytes @ 0xA
  5625                           
  5626  007A                     ?_DrawLargeTemp:	
  5627                           ; 1 bytes @ 0xA
  5628                           
  5629  007A                     ??_DrawLargeHum:	
  5630                           ; 1 bytes @ 0xA
  5631                           
  5632  007A                     ??_DrawLargeTime:	
  5633                           ; 1 bytes @ 0xA
  5634                           
  5635  007A                     ??_DrawRegPower:	
  5636                           ; 1 bytes @ 0xA
  5637                           
  5638  007A                     LCD_BCDNumber@bLzero:	
  5639                           ; 1 bytes @ 0xA
  5640                           
  5641  007A                     DetermineProg@ctime:	
  5642                           ; 1 bytes @ 0xA
  5643                           
  5644  007A                     UDS_WDBID@i:	
  5645                           ; 1 bytes @ 0xA
  5646                           
  5647  007A                     LCD_String@characters:	
  5648                           ; 1 bytes @ 0xA
  5649                           
  5650  007A                     DrawLargeTemp@t:	
  5651                           ; 2 bytes @ 0xA
  5652                           
  5653  007A                     UDS_RDBID@k:	
  5654                           ; 2 bytes @ 0xA
  5655                           
  5656                           
  5657                           ; 2 bytes @ 0xA
  5658  007A                     	ds	1
  5659  007B                     ??_LCD_BCDNumber:	
  5660  007B                     LCD_BCDNumber@digit:	
  5661                           ; 1 bytes @ 0xB
  5662                           
  5663  007B                     DetermineProg@ix:	
  5664                           ; 1 bytes @ 0xB
  5665                           
  5666  007B                     PRG_SetNewTemp@sIncrease:	
  5667                           ; 1 bytes @ 0xB
  5668                           
  5669  007B                     UDS_WDBID@k:	
  5670                           ; 1 bytes @ 0xB
  5671                           
  5672                           
  5673                           ; 1 bytes @ 0xB
  5674  007B                     	ds	1
  5675  007C                     ??_Comm_OnIdle:	
  5676  007C                     ??_MNU_TaskButton:	
  5677                           ; 1 bytes @ 0xC
  5678                           
  5679  007C                     ??_IO_TaskSlow:	
  5680                           ; 1 bytes @ 0xC
  5681                           
  5682  007C                     ??_PRG_TaskSlow:	
  5683                           ; 1 bytes @ 0xC
  5684                           
  5685  007C                     ??_LCD_String:	
  5686                           ; 1 bytes @ 0xC
  5687                           
  5688  007C                     ??_DetermineMode:	
  5689                           ; 1 bytes @ 0xC
  5690                           
  5691  007C                     ??_DrawLargeTemp:	
  5692                           ; 1 bytes @ 0xC
  5693                           
  5694  007C                     ??_Comm_RxProcess:	
  5695                           ; 1 bytes @ 0xC
  5696                           
  5697                           
  5698                           ; 1 bytes @ 0xC
  5699  007C                     	ds	1
  5700  007D                     ??_MNU_Task:	
  5701  007D                     ??_main:	
  5702                           ; 1 bytes @ 0xD
  5703                           
  5704  007D                     ??_DrawTimeDate:	
  5705                           ; 1 bytes @ 0xD
  5706                           
  5707  007D                     ??_DrawSetTempText:	
  5708                           ; 1 bytes @ 0xD
  5709                           
  5710                           
  5711                           	psect	cstackBANK0
  5712  005C                     __pcstackBANK0:	
  5713                           ; 1 bytes @ 0xD
  5714                           
  5715  005C                     ??_UDS_CompareKey:	
  5716                           
  5717                           ; 1 bytes @ 0x0
  5718  005C                     	ds	16
  5719  006C                     main@taskslot:	
  5720                           
  5721                           ; 1 bytes @ 0x10
  5722  006C                     	ds	1
  5723  006D                     main@task1sec:	
  5724                           
  5725                           ; 1 bytes @ 0x11
  5726  006D                     	ds	1
  5727                           
  5728                           	psect	maintext
  5729  0B83                     __pmaintext:	
  5730 ;;
  5731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5732 ;;
  5733 ;; *************** function _main *****************
  5734 ;; Defined at:
  5735 ;;		line 116 in file "../main.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  task1sec        1   17[BANK0 ] unsigned char 
  5740 ;;  taskslot        1   16[BANK0 ] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2  113[None  ] int 
  5743 ;; Registers used:
  5744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : B1F/0
  5747 ;;		On exit  : 1A/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;Total ram usage:        2 bytes
  5755 ;; Hardware stack levels required when called:    8
  5756 ;; This function calls:
  5757 ;;		_AirS_Init
  5758 ;;		_AirS_Task
  5759 ;;		_AirS_Task_Slow
  5760 ;;		_Clock_Init
  5761 ;;		_Comm_Init
  5762 ;;		_Comm_OnIdle
  5763 ;;		_Comm_Task
  5764 ;;		_Comm_TaskSlow
  5765 ;;		_I2C_Init
  5766 ;;		_IO_Init
  5767 ;;		_IO_TaskFast
  5768 ;;		_IO_TaskSlow
  5769 ;;		_LCD_Init
  5770 ;;		_MNU_Init
  5771 ;;		_MNU_Task
  5772 ;;		_MNU_TaskButton
  5773 ;;		_NVM_Init
  5774 ;;		_NVM_IsIdle
  5775 ;;		_NVM_Task
  5776 ;;		_PRG_Init
  5777 ;;		_PRG_TaskSlow
  5778 ;;		_PRS_Init
  5779 ;;		_PRS_Task
  5780 ;;		_PRS_Task1s
  5781 ;;		_Ports_Init
  5782 ;;		_REG_Init
  5783 ;;		_REG_TaskSlow
  5784 ;;		_RTC_Init
  5785 ;;		_RTC_TaskSlow
  5786 ;;		_SPI_HF_Init
  5787 ;;		_WIN_Init
  5788 ;;		_WIN_TaskSlow
  5789 ;; This function is called by:
  5790 ;;		Startup code after reset
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _main
  5796  0B83                     _main:	
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5800  0B83  3194  24B2  318B   	fcall	_Ports_Init
  5801  0B86  2462  318B         	fcall	_Clock_Init
  5802  0B88  27FC               	fcall	_I2C_Init
  5803  0B89  3194  2461  318B   	fcall	_SPI_HF_Init
  5804  0B8C  3195  251C  318B   	fcall	_IO_Init
  5805  0B8F  3187  27A1  318B   	fcall	_LCD_Init
  5806  0B92  3196  2678  318B   	fcall	_NVM_Init
  5807  0B95  252F  318B         	fcall	_Comm_Init
  5808  0B97  240C               	fcall	_AirS_Init
  5809  0B98  3194  2449  318B   	fcall	_RTC_Init
  5810  0B9B  318B  2379  318B   	fcall	_PRG_Init
  5811  0B9E  3194  2454  318B   	fcall	_REG_Init
  5812  0BA1  3188  2000  318B   	fcall	_PRS_Init
  5813  0BA4  3194  24FD  318B   	fcall	_MNU_Init
  5814  0BA7  3187  27FA  318B   	fcall	_WIN_Init
  5815  0BAA  0021               	movlb	1	; select bank1
  5816  0BAB  3031               	movlw	49
  5817  0BAC  01D3               	clrf	_u16Reset^(0+128)
  5818  0BAD  01D4               	clrf	(_u16Reset+1)^(0+128)
  5819  0BAE  0020               	movlb	0	; select bank0
  5820  0BAF  00ED               	movwf	main@task1sec
  5821  0BB0  2BE1               	goto	l7512
  5822  0BB1                     l7538:	
  5823  0BB1  3031               	movlw	49
  5824  0BB2  00ED               	movwf	main@task1sec
  5825  0BB3  3194  247D  318B   	fcall	_PRS_Task1s
  5826  0BB6  2423  318B         	fcall	_AirS_Task_Slow
  5827  0BB8  27F3               	fcall	_Comm_TaskSlow
  5828  0BB9  3194  246F  318B   	fcall	_WIN_TaskSlow
  5829  0BBC  2C01               	goto	l7568
  5830  0BBD                     l7548:	
  5831  0BBD  3194  24E1  318B   	fcall	_RTC_TaskSlow
  5832  0BC0  2BE1               	goto	l7512
  5833  0BC1                     l7550:	
  5834  0BC1  3188  2008  318B   	fcall	_IO_TaskSlow
  5835  0BC4  2BE1               	goto	l7512
  5836  0BC5                     l7552:	
  5837  0BC5  3189  218C  318B   	fcall	_PRG_TaskSlow
  5838  0BC8  2BE1               	goto	l7512
  5839  0BC9                     l7554:	
  5840  0BC9  3188  20A9  318B   	fcall	_REG_TaskSlow
  5841  0BCC  2BE1               	goto	l7512
  5842  0BCD                     l7556:	
  5843  0BCD  2499  318B         	fcall	_NVM_Task
  5844  0BCF  305A               	movlw	90
  5845  0BD0  0021               	movlb	1	; select bank1
  5846  0BD1  0653               	xorwf	_u16Reset^(0+128),w
  5847  0BD2  30A5               	movlw	165
  5848  0BD3  1903               	skipnz
  5849  0BD4  0654               	xorwf	(_u16Reset+1)^(0+128),w
  5850  0BD5  1D03               	btfss	3,2
  5851  0BD6  2BE1               	goto	l7512
  5852  0BD7  2487  318B         	fcall	_NVM_IsIdle
  5853  0BD9  3A00               	xorlw	0
  5854  0BDA  1903               	skipnz
  5855  0BDB  2BE1               	goto	l7512
  5856  0BDC  0001               	reset	;# 
  5857  0BDD  2BE1               	goto	l7512
  5858  0BDE                     l7564:	
  5859  0BDE  3183  239A  318B   	fcall	_MNU_Task
  5860  0BE1                     l7512:	
  5861  0BE1  2557  318B         	fcall	_Comm_OnIdle
  5862  0BE3  0020               	movlb	0	; select bank0
  5863  0BE4  1C91               	btfss	17,1	;volatile
  5864  0BE5  2BE1               	goto	l7512
  5865  0BE6  1091               	bcf	17,1	;volatile
  5866  0BE7  0021               	movlb	1	; select bank1
  5867  0BE8  0AE7               	incf	_u16Tics^(0+128),f
  5868  0BE9  1903               	skipnz
  5869  0BEA  0AE8               	incf	(_u16Tics+1)^(0+128),f
  5870  0BEB  3196  2618  318B   	fcall	_IO_TaskFast
  5871  0BEE  3189  21B2  318B   	fcall	_MNU_TaskButton
  5872  0BF1  3196  26E0  318B   	fcall	_PRS_Task
  5873  0BF4  2422               	fcall	_AirS_Task
  5874  0BF5  3195  2544  318B   	fcall	_Comm_Task
  5875  0BF8  0867               	movf	_u16Tics^(0+128),w
  5876  0BF9  0020               	movlb	0	; select bank0
  5877  0BFA  00EC               	movwf	main@taskslot
  5878  0BFB  301F               	movlw	31
  5879  0BFC  05EC               	andwf	main@taskslot,f
  5880  0BFD  086D               	movf	main@task1sec,w
  5881  0BFE  1903               	btfsc	3,2
  5882  0BFF  2BB1               	goto	l7538
  5883  0C00  03ED               	decf	main@task1sec,f
  5884  0C01                     l7568:	
  5885  0C01  086C               	movf	main@taskslot,w
  5886                           
  5887                           ; Switch size 1, requested type "space"
  5888                           ; Number of cases is 5, Range of values is 0 to 4
  5889                           ; switch strategies available:
  5890                           ; Name         Instructions Cycles
  5891                           ; direct_byte           16     6 (fixed)
  5892                           ; simple_byte           16     9 (average)
  5893                           ; jumptable            260     6 (fixed)
  5894                           ;	Chosen strategy is direct_byte
  5895  0C02  0084               	movwf	4
  5896  0C03  3005               	movlw	5
  5897  0C04  0204               	subwf	4,w
  5898  0C05  1803               	skipnc
  5899  0C06  2BDE               	goto	l7564
  5900  0C07  3193               	movlp	high S7614
  5901  0C08  3504               	lslf	4,w
  5902  0C09  3E3E               	addlw	low S7614
  5903  0C0A  0082               	movwf	2
  5904  0C0B  2BE1               	goto	l7512
  5905  0C0C                     __end_of_main:	
  5906  0C0C                     __ptext119:	
  5907 ;; *************** function _AirS_Init *****************
  5908 ;; Defined at:
  5909 ;;		line 15 in file "../drv_air_sens.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  i               1    0[COMMON] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 1F/1
  5920 ;;		On exit  : 1E/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;Total ram usage:        1 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _AirS_Init
  5939  0C0C                     _AirS_Init:	
  5940                           
  5941                           ;incstack = 0
  5942                           ; Regs used in _AirS_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
  5943  0C0C  30C8               	movlw	200
  5944  0C0D  0020               	movlb	0	; select bank0
  5945  0C0E  00AC               	movwf	_currtemp
  5946  0C0F  30FF               	movlw	255
  5947  0C10  01AD               	clrf	_currtemp+1
  5948  0C11  00C9               	movwf	_currhum
  5949  0C12  01B6               	clrf	_ftimer
  5950  0C13  00B5               	movwf	_oldhrs
  5951  0C14  01F0               	clrf	AirS_Init@i
  5952  0C15                     l5640:	
  5953  0C15  0870               	movf	AirS_Init@i,w
  5954  0C16  3E29               	addlw	(low (_TEMP_HISTORY| (0+256)))& (0+255)
  5955  0C17  0086               	movwf	6
  5956  0C18  3001               	movlw	1	; select bank2/3
  5957  0C19  0087               	movwf	7
  5958  0C1A  30FF               	movlw	255
  5959  0C1B  0081               	movwf	1
  5960  0C1C  3018               	movlw	24
  5961  0C1D  0AF0               	incf	AirS_Init@i,f
  5962  0C1E  0270               	subwf	AirS_Init@i,w
  5963  0C1F  1803               	btfsc	3,0
  5964  0C20  0008               	return
  5965  0C21  2C15               	goto	l5640
  5966  0C22                     __end_of_AirS_Init:	
  5967  0C22                     __ptext118:	
  5968 ;; *************** function _AirS_Task *****************
  5969 ;; Defined at:
  5970 ;;		line 31 in file "../drv_air_sens.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		None
  5979 ;; Tracked objects:
  5980 ;;		On entry : 1F/0
  5981 ;;		On exit  : 1F/0
  5982 ;;		Unchanged: 1F/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_main
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _AirS_Task
  6000  0C22                     _AirS_Task:	
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in _AirS_Task: []
  6004  0C22  0008               	return
  6005  0C23                     __end_of_AirS_Task:	
  6006  0C23                     __ptext114:	
  6007 ;; *************** function _AirS_Task_Slow *****************
  6008 ;; Defined at:
  6009 ;;		line 37 in file "../drv_air_sens.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 1C/0
  6020 ;;		On exit  : 1F/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        2 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    3
  6030 ;; This function calls:
  6031 ;;		_IO_GetTempMeas
  6032 ;;		_RTC_BCD2DEC
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _AirS_Task_Slow
  6040  0C23                     _AirS_Task_Slow:	
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _AirS_Task_Slow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6044  0C23  0020               	movlb	0	; select bank0
  6045  0C24  0836               	movf	_ftimer,w
  6046  0C25  1903               	btfsc	3,2
  6047  0C26  2C29               	goto	l5930
  6048  0C27  03B6               	decf	_ftimer,f
  6049  0C28  2C32               	goto	l5934
  6050  0C29                     l5930:	
  6051  0C29  245C  318B         	fcall	_IO_GetTempMeas
  6052  0C2B  0871               	movf	?_IO_GetTempMeas+1,w
  6053  0C2C  0020               	movlb	0	; select bank0
  6054  0C2D  00AD               	movwf	_currtemp+1
  6055  0C2E  0870               	movf	?_IO_GetTempMeas,w
  6056  0C2F  00AC               	movwf	_currtemp
  6057  0C30  30FF               	movlw	255
  6058  0C31  00C9               	movwf	_currhum
  6059  0C32                     l5934:	
  6060  0C32  082D               	movf	_currtemp+1,w
  6061  0C33  0021               	movlb	1	; select bank1
  6062  0C34  00B5               	movwf	((_ComTxData+1)^(0+128)+1)
  6063  0C35  0020               	movlb	0	; select bank0
  6064  0C36  082C               	movf	_currtemp,w
  6065  0C37  0021               	movlb	1	; select bank1
  6066  0C38  00B4               	movwf	(_ComTxData^(0+128)+1)
  6067  0C39  0020               	movlb	0	; select bank0
  6068  0C3A  0849               	movf	_currhum,w
  6069  0C3B  0021               	movlb	1	; select bank1
  6070  0C3C  00B7               	movwf	(_ComTxData^(0+128)+4)
  6071  0C3D  0020               	movlb	0	; select bank0
  6072  0C3E  0851               	movf	_RTC_Status,w
  6073  0C3F  1903               	btfsc	3,2
  6074  0C40  0008               	return
  6075  0C41  0021               	movlb	1	; select bank1
  6076  0C42  083E               	movf	(_DateTime^(0+128)+2),w
  6077  0C43  0020               	movlb	0	; select bank0
  6078  0C44  0635               	xorwf	_oldhrs,w
  6079  0C45  1903               	skipnz
  6080  0C46  0008               	return
  6081  0C47  0021               	movlb	1	; select bank1
  6082  0C48  083E               	movf	(_DateTime^(0+128)+2),w
  6083  0C49  0020               	movlb	0	; select bank0
  6084  0C4A  00B5               	movwf	_oldhrs
  6085  0C4B  318B  231B         	fcall	_RTC_BCD2DEC
  6086  0C4D  3E29               	addlw	(low (_TEMP_HISTORY| (0+256)))& (0+255)
  6087  0C4E  0086               	movwf	6
  6088  0C4F  3001               	movlw	1	; select bank2/3
  6089  0C50  0087               	movwf	7
  6090  0C51  0020               	movlb	0	; select bank0
  6091  0C52  082D               	movf	_currtemp+1,w
  6092  0C53  00F6               	movwf	??_AirS_Task_Slow+1
  6093  0C54  082C               	movf	_currtemp,w
  6094  0C55  00F5               	movwf	??_AirS_Task_Slow
  6095  0C56  0D76               	rlf	??_AirS_Task_Slow+1,w
  6096  0C57  0CF6               	rrf	??_AirS_Task_Slow+1,f
  6097  0C58  0CF5               	rrf	??_AirS_Task_Slow,f
  6098  0C59  0875               	movf	??_AirS_Task_Slow,w
  6099  0C5A  0081               	movwf	1
  6100  0C5B  0008               	return
  6101  0C5C                     __end_of_AirS_Task_Slow:	
  6102  0C5C                     __ptext117:	
  6103 ;; *************** function _IO_GetTempMeas *****************
  6104 ;; Defined at:
  6105 ;;		line 49 in file "../drv_io.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2    0[COMMON] short 
  6112 ;; Registers used:
  6113 ;;		wreg
  6114 ;; Tracked objects:
  6115 ;;		On entry : 1F/0
  6116 ;;		On exit  : 1F/1
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    1
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_AirS_Task_Slow
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _IO_GetTempMeas
  6135  0C5C                     _IO_GetTempMeas:	
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _IO_GetTempMeas: [wreg]
  6139  0C5C  0021               	movlb	1	; select bank1
  6140  0C5D  0850               	movf	(_sTemp+1)^(0+128),w
  6141  0C5E  00F1               	movwf	?_IO_GetTempMeas+1
  6142  0C5F  084F               	movf	_sTemp^(0+128),w
  6143  0C60  00F0               	movwf	?_IO_GetTempMeas
  6144  0C61  0008               	return
  6145  0C62                     __end_of_IO_GetTempMeas:	
  6146  0C62                     __ptext113:	
  6147 ;; *************** function _Clock_Init *****************
  6148 ;; Defined at:
  6149 ;;		line 57 in file "../main.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : B1F/4
  6160 ;;		On exit  : B1F/0
  6161 ;;		Unchanged: B00/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_main
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function _Clock_Init
  6179  0C62                     _Clock_Init:	
  6180                           
  6181                           ;incstack = 0
  6182                           ; Regs used in _Clock_Init: [wreg+status,2+status,0]
  6183  0C62  3020               	movlw	32
  6184  0C63  0021               	movlb	1	; select bank1
  6185  0C64  00E7               	movwf	_u16Tics^(0+128)
  6186  0C65  304E               	movlw	78
  6187  0C66  00E8               	movwf	(_u16Tics^(0+128)+1)
  6188  0C67                     l5504:	
  6189  0C67  27E5  318B         	fcall	PL28	;call to abstracted procedure
  6190  0C69  0F67               	incfsz	_u16Tics^(0+128),w
  6191  0C6A  2C67               	goto	l5504
  6192  0C6B  0A68               	incf	(_u16Tics+1)^(0+128),w
  6193  0C6C  1D03               	btfss	3,2
  6194  0C6D  2C67               	goto	l5504
  6195  0C6E  0819               	movf	25,w	;volatile
  6196  0C6F  3987               	andlw	-121
  6197  0C70  3860               	iorlw	96
  6198  0C71  0099               	movwf	25	;volatile
  6199  0C72  3064               	movlw	100
  6200  0C73  00E7               	movwf	_u16Tics^(0+128)
  6201  0C74  01E8               	clrf	(_u16Tics+1)^(0+128)
  6202  0C75                     l5510:	
  6203  0C75  27E5  318B         	fcall	PL28	;call to abstracted procedure
  6204  0C77  0F67               	incfsz	_u16Tics^(0+128),w
  6205  0C78  2C75               	goto	l5510
  6206  0C79  0A68               	incf	(_u16Tics+1)^(0+128),w
  6207  0C7A  1D03               	btfss	3,2
  6208  0C7B  2C75               	goto	l5510
  6209  0C7C  3003               	movlw	3
  6210  0C7D  0020               	movlb	0	; select bank0
  6211  0C7E  009C               	movwf	28	;volatile
  6212  0C7F  309C               	movlw	156
  6213  0C80  009B               	movwf	27	;volatile
  6214  0C81  1091               	bcf	17,1	;volatile
  6215  0C82  0021               	movlb	1	; select bank1
  6216  0C83  1091               	bcf	17,1	;volatile
  6217  0C84  0020               	movlb	0	; select bank0
  6218  0C85  151C               	bsf	28,2	;volatile
  6219  0C86  0008               	return
  6220  0C87                     __end_of_Clock_Init:	
  6221  0C87                     __ptext82:	
  6222 ;; *************** function _NVM_IsIdle *****************
  6223 ;; Defined at:
  6224 ;;		line 120 in file "../../LIBC/NVM/svc_nvm.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  i               1    0[COMMON] unsigned char 
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      unsigned char 
  6231 ;; Registers used:
  6232 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 1A/1
  6235 ;;		On exit  : 1A/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;Total ram usage:        1 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    1
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;;		_UDS_RDBID
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           
  6254                           ;psect for function _NVM_IsIdle
  6255  0C87                     _NVM_IsIdle:	
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _NVM_IsIdle: [wreg+fsr1l+fsr1h+status,2+status,0]
  6259  0C87  01F0               	clrf	NVM_IsIdle@i
  6260  0C88                     l6476:	
  6261  0C88  0870               	movf	NVM_IsIdle@i,w
  6262  0C89  3E20               	addlw	(low (_NVM_BlockStatus| (0+256)))& (0+255)
  6263  0C8A  0086               	movwf	6
  6264  0C8B  3001               	movlw	1	; select bank2/3
  6265  0C8C  0087               	movwf	7
  6266  0C8D  1901               	btfsc	1,2
  6267  0C8E  3400               	retlw	0
  6268  0C8F  3009               	movlw	9
  6269  0C90  0AF0               	incf	NVM_IsIdle@i,f
  6270  0C91  0270               	subwf	NVM_IsIdle@i,w
  6271  0C92  1C03               	skipc
  6272  0C93  2C88               	goto	l6476
  6273  0C94  0020               	movlb	0	; select bank0
  6274  0C95  083C               	movf	_NVMState,w
  6275  0C96  1903               	btfsc	3,2
  6276  0C97  3401               	retlw	1
  6277  0C98  3400               	retlw	0
  6278  0C99                     __end_of_NVM_IsIdle:	
  6279  0C99                     __ptext73:	
  6280 ;; *************** function _NVM_Task *****************
  6281 ;; Defined at:
  6282 ;;		line 130 in file "../../LIBC/NVM/svc_nvm.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  i               1    4[COMMON] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 1C/0
  6293 ;;		On exit  : 1E/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;Total ram usage:        1 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    3
  6303 ;; This function calls:
  6304 ;;		_PrepBlockData
  6305 ;;		_ReadBlock
  6306 ;;		_Read_Eep
  6307 ;;		_Write_Eep
  6308 ;; This function is called by:
  6309 ;;		_main
  6310 ;;		_WriteNVMBlockSync
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           
  6315                           ;psect for function _NVM_Task
  6316  0C99                     _NVM_Task:	
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _NVM_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6320  0C99  2CFF               	goto	l6432
  6321  0C9A                     l6366:	
  6322  0C9A  01BF               	clrf	_CurrentBlock
  6323  0C9B                     l6368:	
  6324  0C9B  3009               	movlw	9
  6325  0C9C  023F               	subwf	_CurrentBlock,w
  6326  0C9D  1803               	btfsc	3,0
  6327  0C9E  0008               	return
  6328  0C9F  3196  26D4  318B   	fcall	PL8	;call to abstracted procedure
  6329  0CA2  0801               	movf	1,w
  6330  0CA3  1D03               	btfss	3,2
  6331  0CA4  2CA7               	goto	l6380
  6332  0CA5  3196  2E88         	ljmp	l6330
  6333  0CA7                     l6380:	
  6334  0CA7  3196  26D4  318B   	fcall	PL8	;call to abstracted procedure
  6335  0CAA  1D01               	btfss	1,2
  6336  0CAB  2CCE               	goto	l6402
  6337  0CAC  083F               	movf	_CurrentBlock,w
  6338  0CAD  3E20               	addlw	(low (_NVM_BlockStatus| (0+256)))& (0+255)
  6339  0CAE  0086               	movwf	6
  6340  0CAF  1101               	bcf	1,2
  6341  0CB0  26D8  318B         	fcall	_PrepBlockData
  6342  0CB2  01F4               	clrf	NVM_Task@i
  6343  0CB3                     l6394:	
  6344  0CB3  083E               	movf	_ByteCount,w
  6345  0CB4  0274               	subwf	NVM_Task@i,w
  6346  0CB5  1803               	btfsc	3,0
  6347  0CB6  2CC7               	goto	l6396
  6348  0CB7  0874               	movf	NVM_Task@i,w
  6349  0CB8  3EA0               	addlw	(low (_WorkBuff| (0+512)))& (0+255)
  6350  0CB9  0086               	movwf	6
  6351  0CBA  3002               	movlw	2	; select bank5/6
  6352  0CBB  0087               	movwf	7
  6353  0CBC  0826               	movf	_pRam,w
  6354  0CBD  0084               	movwf	4
  6355  0CBE  0827               	movf	_pRam+1,w
  6356  0CBF  0085               	movwf	5
  6357  0CC0  0800               	movf	0,w
  6358  0CC1  0081               	movwf	1
  6359  0CC2  0AA6               	incf	_pRam,f
  6360  0CC3  1903               	skipnz
  6361  0CC4  0AA7               	incf	_pRam+1,f
  6362  0CC5  0AF4               	incf	NVM_Task@i,f
  6363  0CC6  2CB3               	goto	l6394
  6364  0CC7                     l6396:	
  6365  0CC7  30A0               	movlw	low _WorkBuff
  6366  0CC8  00A6               	movwf	_pRam
  6367  0CC9  3002               	movlw	high _WorkBuff
  6368  0CCA  00A7               	movwf	_pRam+1
  6369  0CCB  01BC               	clrf	_NVMState
  6370  0CCC  0ABC               	incf	_NVMState,f
  6371  0CCD  0008               	return
  6372  0CCE                     l6402:	
  6373  0CCE  0ABF               	incf	_CurrentBlock,f
  6374  0CCF  2C9B               	goto	l6368
  6375  0CD0                     l6406:	
  6376  0CD0  0826               	movf	_pRam,w
  6377  0CD1  0086               	movwf	6
  6378  0CD2  0827               	movf	_pRam+1,w
  6379  0CD3  0087               	movwf	7
  6380  0CD4  083D               	movf	_addr,w
  6381  0CD5  250C  318B         	fcall	_Read_Eep
  6382  0CD7  0601               	xorwf	1,w
  6383  0CD8  1903               	skipnz
  6384  0CD9  2CE1               	goto	l6410
  6385  0CDA  3196  26DA  318B   	fcall	PL10	;call to abstracted procedure
  6386  0CDD  0801               	movf	1,w
  6387  0CDE  00F0               	movwf	Write_Eep@bdata
  6388  0CDF  083D               	movf	_addr,w
  6389  0CE0  2517               	fcall	_Write_Eep
  6390  0CE1                     l6410:	
  6391  0CE1  3196  26DA  318B   	fcall	PL10	;call to abstracted procedure
  6392  0CE4  0801               	movf	1,w
  6393  0CE5  07C0               	addwf	_CSm,f
  6394  0CE6  0ABD               	incf	_addr,f
  6395  0CE7  0AA6               	incf	_pRam,f
  6396  0CE8  1903               	skipnz
  6397  0CE9  0AA7               	incf	_pRam+1,f
  6398  0CEA  03BE               	decf	_ByteCount,f
  6399  0CEB  083E               	movf	_ByteCount,w
  6400  0CEC  1D03               	btfss	3,2
  6401  0CED  0008               	return
  6402  0CEE  3002               	movlw	2
  6403  0CEF  00BC               	movwf	_NVMState
  6404  0CF0  0008               	return
  6405  0CF1                     l6422:	
  6406  0CF1  083D               	movf	_addr,w
  6407  0CF2  250C  318B         	fcall	_Read_Eep
  6408  0CF4  0020               	movlb	0	; select bank0
  6409  0CF5  0640               	xorwf	_CSm,w
  6410  0CF6  1903               	skipnz
  6411  0CF7  2CFC               	goto	l6426
  6412  0CF8  0840               	movf	_CSm,w
  6413  0CF9  00F0               	movwf	Write_Eep@bdata
  6414  0CFA  083D               	movf	_addr,w
  6415  0CFB  2517               	fcall	_Write_Eep
  6416  0CFC                     l6426:	
  6417  0CFC  0020               	movlb	0	; select bank0
  6418  0CFD  01BC               	clrf	_NVMState
  6419  0CFE  0008               	return
  6420  0CFF                     l6432:	
  6421  0CFF  0020               	movlb	0	; select bank0
  6422  0D00  083C               	movf	_NVMState,w
  6423                           
  6424                           ; Switch size 1, requested type "space"
  6425                           ; Number of cases is 3, Range of values is 0 to 2
  6426                           ; switch strategies available:
  6427                           ; Name         Instructions Cycles
  6428                           ; simple_byte           10     6 (average)
  6429                           ; direct_byte           12     6 (fixed)
  6430                           ; jumptable            260     6 (fixed)
  6431                           ;	Chosen strategy is simple_byte
  6432  0D01  3A00               	xorlw	0	; case 0
  6433  0D02  1903               	skipnz
  6434  0D03  2C9A               	goto	l6366
  6435  0D04  3A01               	xorlw	1	; case 1
  6436  0D05  1903               	skipnz
  6437  0D06  2CD0               	goto	l6406
  6438  0D07  3A03               	xorlw	3	; case 2
  6439  0D08  1903               	skipnz
  6440  0D09  2CF1               	goto	l6422
  6441  0D0A  2CFC               	goto	l6426
  6442  0D0B  0008               	return
  6443  0D0C                     __end_of_NVM_Task:	
  6444  0D0C                     __ptext76:	
  6445 ;; *************** function _Read_Eep *****************
  6446 ;; Defined at:
  6447 ;;		line 5 in file "../drv_eep.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  badd            1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  badd            1    0[COMMON] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      unsigned char 
  6454 ;; Registers used:
  6455 ;;		wreg
  6456 ;; Tracked objects:
  6457 ;;		On entry : 1F/0
  6458 ;;		On exit  : 1F/3
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;Total ram usage:        1 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_ReadBlock
  6472 ;;		_NVM_Task
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _Read_Eep
  6478  0D0C                     _Read_Eep:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in _Read_Eep: [wreg]
  6482  0D0C  00F0               	movwf	Read_Eep@badd
  6483  0D0D  0023               	movlb	3	; select bank3
  6484  0D0E  0091               	movwf	17	;volatile
  6485  0D0F  0192               	clrf	18	;volatile
  6486  0D10  1315               	bcf	21,6	;volsfr
  6487  0D11  1395               	bcf	21,7	;volsfr
  6488  0D12  1415               	bsf	21,0	;volsfr
  6489  0D13  0000               	nop
  6490  0D14  0023               	movlb	3	; select bank3
  6491  0D15  0813               	movf	19,w	;volatile
  6492  0D16  0008               	return
  6493  0D17                     __end_of_Read_Eep:	
  6494  0D17                     __ptext74:	
  6495 ;; *************** function _Write_Eep *****************
  6496 ;; Defined at:
  6497 ;;		line 15 in file "../drv_eep.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  badd            1    wreg     unsigned char 
  6500 ;;  bdata           1    0[COMMON] unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  badd            1    1[COMMON] unsigned char 
  6503 ;;  SAVEICON        1    2[COMMON] unsigned char 
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg
  6508 ;; Tracked objects:
  6509 ;;		On entry : 1E/1
  6510 ;;		On exit  : 1F/3
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6513 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;Total ram usage:        3 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; Hardware stack levels required when called:    1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_NVM_Task
  6524 ;;		_Comm_RxProcess
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function _Write_Eep
  6530  0D17                     _Write_Eep:	
  6531                           
  6532                           ;incstack = 0
  6533                           ; Regs used in _Write_Eep: [wreg]
  6534  0D17  00F1               	movwf	Write_Eep@badd
  6535  0D18  080B               	movf	11,w	;volatile
  6536  0D19  00F2               	movwf	Write_Eep@SAVEICON
  6537  0D1A  138B               	bcf	11,7	;volatile
  6538  0D1B  0871               	movf	Write_Eep@badd,w
  6539  0D1C  0023               	movlb	3	; select bank3
  6540  0D1D  0091               	movwf	17	;volatile
  6541  0D1E  0192               	clrf	18	;volatile
  6542  0D1F  0870               	movf	Write_Eep@bdata,w
  6543  0D20  0093               	movwf	19	;volatile
  6544  0D21  1395               	bcf	21,7	;volsfr
  6545  0D22  1315               	bcf	21,6	;volsfr
  6546  0D23  1515               	bsf	21,2	;volsfr
  6547  0D24  3055               	movlw	85
  6548  0D25  0096               	movwf	22	;volsfr
  6549  0D26  30AA               	movlw	170
  6550  0D27  0096               	movwf	22	;volsfr
  6551  0D28  1495               	bsf	21,1	;volsfr
  6552  0D29                     l154:	
  6553  0D29  1895               	btfsc	21,1	;volsfr
  6554  0D2A  2D29               	goto	l154
  6555  0D2B  1BF2               	btfsc	Write_Eep@SAVEICON,7
  6556  0D2C  178B               	bsf	11,7	;volatile
  6557  0D2D  1115               	bcf	21,2	;volsfr
  6558  0D2E  0008               	return
  6559  0D2F                     __end_of_Write_Eep:	
  6560  0D2F                     __ptext99:	
  6561 ;; *************** function _Comm_Init *****************
  6562 ;; Defined at:
  6563 ;;		line 86 in file "../../LIBC/COM/svc_comm.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 1F/0
  6574 ;;		On exit  : 1F/1
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    7
  6584 ;; This function calls:
  6585 ;;		_Comm_InitMRF
  6586 ;;		_MRF89XAStartReception
  6587 ;;		_TransmitFrame
  6588 ;; This function is called by:
  6589 ;;		_main
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function _Comm_Init
  6595  0D2F                     _Comm_Init:	
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in _Comm_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6599  0D2F  2653  318B         	fcall	_Comm_InitMRF
  6600  0D31  30F5               	movlw	245
  6601  0D32  0024               	movlb	4	; select bank4
  6602  0D33  00A4               	movwf	(_TxPacket^(0+512)+4)
  6603  0D34  3005               	movlw	5
  6604  0D35  00A0               	movwf	_TxPacket^(0+512)
  6605  0D36  30FF               	movlw	255
  6606  0D37  00A1               	movwf	(_TxPacket^(0+512)+1)
  6607  0D38  26BC  318B         	fcall	_TransmitFrame
  6608  0D3A  2582  318B         	fcall	_MRF89XAStartReception
  6609  0D3C  0021               	movlb	1	; select bank1
  6610  0D3D  11A0               	bcf	_ComData^(0+128),3
  6611  0D3E  1520               	bsf	_ComData^(0+128),2
  6612  0D3F  10A0               	bcf	_ComData^(0+128),1
  6613  0D40  01A1               	clrf	(_ComData^(0+128)+1)
  6614  0D41  01A2               	clrf	(_ComData^(0+128)+2)
  6615  0D42                     l7318:	
  6616  0D42  3004               	movlw	4
  6617  0D43  0222               	subwf	(_ComData^(0+128)+2),w
  6618  0D44  1803               	btfsc	3,0
  6619  0D45  2D4E               	goto	l7320
  6620  0D46  27D9  318B         	fcall	PL22	;call to abstracted procedure
  6621  0D48  0822               	movf	(_ComData^(0+128)+2),w
  6622  0D49  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
  6623  0D4A  0086               	movwf	6
  6624  0D4B  0181               	clrf	1
  6625  0D4C  0AA2               	incf	(_ComData^(0+128)+2),f
  6626  0D4D  2D42               	goto	l7318
  6627  0D4E                     l7320:	
  6628  0D4E  3022               	movlw	34
  6629  0D4F  00B3               	movwf	_ComTxData^(0+128)
  6630  0D50  3061               	movlw	97
  6631  0D51  00B6               	movwf	(_ComTxData^(0+128)+3)
  6632  0D52  3011               	movlw	17
  6633  0D53  00B8               	movwf	(_ComTxData^(0+128)+5)
  6634  0D54  3071               	movlw	113
  6635  0D55  00BA               	movwf	(_ComTxData^(0+128)+7)
  6636  0D56  0008               	return
  6637  0D57                     __end_of_Comm_Init:	
  6638  0D57                     __ptext65:	
  6639 ;; *************** function _Comm_OnIdle *****************
  6640 ;; Defined at:
  6641 ;;		line 265 in file "../../LIBC/COM/svc_comm.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 1E/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    7
  6662 ;; This function calls:
  6663 ;;		_Comm_InitMRF
  6664 ;;		_Comm_RxProcess
  6665 ;;		_IO_StartTimer1
  6666 ;;		_MRF89XACheckRSSI
  6667 ;;		_MRF89XAStartReception
  6668 ;;		_MRF89XATask
  6669 ;;		_TransmitFrame
  6670 ;; This function is called by:
  6671 ;;		_main
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function _Comm_OnIdle
  6677  0D57                     _Comm_OnIdle:	
  6678                           
  6679                           ;incstack = 0
  6680                           ; Regs used in _Comm_OnIdle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6681  0D57  0021               	movlb	1	; select bank1
  6682  0D58  1CA0               	btfss	_ComData^(0+128),1
  6683  0D59  2D72               	goto	l7352
  6684  0D5A  0020               	movlb	0	; select bank0
  6685  0D5B  1C93               	btfss	19,1	;volatile
  6686  0D5C  0008               	return
  6687  0D5D  26AD  318B         	fcall	_MRF89XACheckRSSI
  6688  0D5F  3083               	movlw	131
  6689  0D60  0241               	subwf	_MRF89XA_RSSI,w
  6690  0D61  1C03               	skipc
  6691  0D62  2D6F               	goto	l7346
  6692  0D63  3028               	movlw	40
  6693  0D64  26B2  318B         	fcall	_IO_StartTimer1
  6694  0D66  0021               	movlb	1	; select bank1
  6695  0D67  0823               	movf	(_ComData^(0+128)+3),w
  6696  0D68  1903               	btfsc	3,2
  6697  0D69  2D6C               	goto	l1295
  6698  0D6A  03A3               	decf	(_ComData^(0+128)+3),f
  6699  0D6B  0008               	return
  6700  0D6C                     l1295:	
  6701  0D6C  0021               	movlb	1	; select bank1
  6702  0D6D  10A0               	bcf	_ComData^(0+128),1
  6703  0D6E                     l7344:	
  6704  0D6E  2D82               	ljmp	l7124
  6705  0D6F                     l7346:	
  6706  0D6F  26BC  318B         	fcall	_TransmitFrame
  6707  0D71  2D6C               	goto	l1295
  6708  0D72                     l7352:	
  6709  0D72  2593  318B         	fcall	_MRF89XATask
  6710  0D74  0023               	movlb	3	; select bank3
  6711  0D75  0820               	movf	_RxPacket^(0+384),w
  6712  0D76  1903               	btfsc	3,2
  6713  0D77  2D7B               	goto	l7360
  6714  0D78  2700  318B         	fcall	_Comm_RxProcess
  6715  0D7A  2D6E               	goto	l7344
  6716  0D7B                     l7360:	
  6717  0D7B  0020               	movlb	0	; select bank0
  6718  0D7C  083A               	movf	_MRF89XA_Error,w
  6719  0D7D  1903               	btfsc	3,2
  6720  0D7E  0008               	return
  6721  0D7F  2653  318B         	fcall	_Comm_InitMRF
  6722  0D81  2D82               	ljmp	l7124
  6723  0D82                     __end_of_Comm_OnIdle:	
  6724  0D82                     __ptext107:	
  6725 ;; *************** function _MRF89XAStartReception *****************
  6726 ;; Defined at:
  6727 ;;		line 183 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;		None
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  i               1    5[COMMON] unsigned char 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  1    wreg      void 
  6734 ;; Registers used:
  6735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/1
  6738 ;;		On exit  : 1F/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;Total ram usage:        1 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    4
  6748 ;; This function calls:
  6749 ;;		_MRF89XARegisterRead
  6750 ;;		_MRF89XARegisterSet
  6751 ;;		_MRF89XASetRFMode
  6752 ;; This function is called by:
  6753 ;;		_Comm_Init
  6754 ;;		_Comm_OnIdle
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function _MRF89XAStartReception
  6760  0D82                     _MRF89XAStartReception:	
  6761  0D82                     l7124:	
  6762                           ;incstack = 0
  6763                           ; Regs used in _MRF89XAStartReception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6764                           
  6765  0D82  0023               	movlb	3	; select bank3
  6766  0D83  3020               	movlw	32
  6767  0D84  01A0               	clrf	_RxPacket^(0+384)
  6768  0D85  2684  318B         	fcall	_MRF89XASetRFMode
  6769  0D87  300D               	movlw	13
  6770  0D88  2614  318B         	fcall	_MRF89XARegisterRead
  6771  0D8A  00F5               	movwf	MRF89XAStartReception@i
  6772  0D8B  3801               	iorlw	1
  6773  0D8C  00F1               	movwf	MRF89XARegisterSet@value
  6774  0D8D  300D               	movlw	13
  6775  0D8E  2676  318B         	fcall	_MRF89XARegisterSet
  6776  0D90  108B               	bcf	11,1	;volatile
  6777  0D91  3060               	movlw	96
  6778  0D92  2E84               	ljmp	_MRF89XASetRFMode
  6779  0D93                     __end_of_MRF89XAStartReception:	
  6780  0D93                     __ptext66:	
  6781 ;; *************** function _MRF89XATask *****************
  6782 ;; Defined at:
  6783 ;;		line 261 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  i               1    6[COMMON] unsigned char 
  6788 ;;  k               1    5[COMMON] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 1F/1
  6795 ;;		On exit  : 1C/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;Total ram usage:        2 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    4
  6805 ;; This function calls:
  6806 ;;		_MRF89XACheckRSSI
  6807 ;;		_MRF89XARegisterRead
  6808 ;;		_MRF89XARegisterSet
  6809 ;;		_MRF89XASetRFMode
  6810 ;;		_ReadFIFO
  6811 ;; This function is called by:
  6812 ;;		_Comm_OnIdle
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _MRF89XATask
  6818  0D93                     _MRF89XATask:	
  6819                           
  6820                           ;incstack = 0
  6821                           ; Regs used in _MRF89XATask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6822  0D93  3060               	movlw	96
  6823  0D94  0020               	movlb	0	; select bank0
  6824  0D95  063B               	xorwf	_RF_Mode,w
  6825  0D96  1903               	btfsc	3,2
  6826  0D97  1C8B               	btfss	11,1	;volatile
  6827  0D98  0008               	return
  6828  0D99  26AD  318B         	fcall	_MRF89XACheckRSSI
  6829  0D9B  3020               	movlw	32
  6830  0D9C  2684  318B         	fcall	_MRF89XASetRFMode
  6831  0D9E  27DF  318B         	fcall	PL24	;call to abstracted procedure
  6832  0DA0  39BF               	andlw	191
  6833  0DA1  3840               	iorlw	64
  6834  0DA2  00F1               	movwf	MRF89XARegisterSet@value
  6835  0DA3  301F               	movlw	31
  6836  0DA4  2676  318B         	fcall	_MRF89XARegisterSet
  6837  0DA6  25CF  318B         	fcall	_ReadFIFO
  6838  0DA8  00F6               	movwf	MRF89XATask@i
  6839  0DA9  303F               	movlw	63
  6840  0DAA  0276               	subwf	MRF89XATask@i,w
  6841  0DAB  1803               	skipnc
  6842  0DAC  2DC1               	goto	l1103
  6843  0DAD  0876               	movf	MRF89XATask@i,w
  6844  0DAE  0023               	movlb	3	; select bank3
  6845  0DAF  00A0               	movwf	_RxPacket^(0+384)
  6846  0DB0  01F5               	clrf	MRF89XATask@k
  6847  0DB1                     l7158:	
  6848  0DB1  0876               	movf	MRF89XATask@i,w
  6849  0DB2  1903               	btfsc	3,2
  6850  0DB3  2DC1               	goto	l1103
  6851  0DB4  0AF5               	incf	MRF89XATask@k,f
  6852  0DB5  0875               	movf	MRF89XATask@k,w
  6853  0DB6  3EA0               	addlw	(low (_RxPacket| (0+256)))& (0+255)
  6854  0DB7  0086               	movwf	6
  6855  0DB8  3001               	movlw	1	; select bank3/4
  6856  0DB9  0087               	movwf	7
  6857  0DBA  25CF  318B         	fcall	_ReadFIFO
  6858  0DBC  0081               	movwf	1
  6859  0DBD  03F6               	decf	MRF89XATask@i,f
  6860  0DBE  2DB1               	goto	l7158
  6861  0DBF                     l7160:	
  6862  0DBF  25CF  318B         	fcall	_ReadFIFO
  6863  0DC1                     l1103:	
  6864  0DC1  300D               	movlw	13
  6865  0DC2  2614  318B         	fcall	_MRF89XARegisterRead
  6866  0DC4  3902               	andlw	2
  6867  0DC5  1D03               	btfss	3,2
  6868  0DC6  2DBF               	goto	l7160
  6869  0DC7  0023               	movlb	3	; select bank3
  6870  0DC8  0820               	movf	_RxPacket^(0+384),w
  6871  0DC9  1D03               	btfss	3,2
  6872  0DCA  0008               	return
  6873  0DCB  0020               	movlb	0	; select bank0
  6874  0DCC  01BA               	clrf	_MRF89XA_Error
  6875  0DCD  0ABA               	incf	_MRF89XA_Error,f
  6876  0DCE  0008               	return
  6877  0DCF                     __end_of_MRF89XATask:	
  6878  0DCF                     __ptext67:	
  6879 ;; *************** function _ReadFIFO *****************
  6880 ;; Defined at:
  6881 ;;		line 233 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  value           1    0[COMMON] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      unsigned char 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, pclath, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 1C/2
  6892 ;;		On exit  : 1F/2
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;Total ram usage:        1 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    2
  6902 ;; This function calls:
  6903 ;;		_SPI_HF_Get
  6904 ;; This function is called by:
  6905 ;;		_MRF89XATask
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function _ReadFIFO
  6911  0DCF                     _ReadFIFO:	
  6912                           
  6913                           ;incstack = 0
  6914                           ; Regs used in _ReadFIFO: [wreg+status,2+pclath+cstack]
  6915  0DCF  0022               	movlb	2	; select bank2
  6916  0DD0  120C               	bcf	12,4	;volatile
  6917  0DD1  2698               	fcall	_SPI_HF_Get
  6918  0DD2  00F0               	movwf	ReadFIFO@value
  6919  0DD3  0022               	movlb	2	; select bank2
  6920  0DD4  160C               	bsf	12,4	;volatile
  6921  0DD5  0870               	movf	ReadFIFO@value,w
  6922  0DD6  0008               	return
  6923  0DD7                     __end_of_ReadFIFO:	
  6924  0DD7                     __ptext106:	
  6925 ;; *************** function _MRF89XAInit *****************
  6926 ;; Defined at:
  6927 ;;		line 129 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  i               1    7[COMMON] unsigned char 
  6932 ;;  input           1    6[COMMON] unsigned char 
  6933 ;;  res             1    5[COMMON] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      unsigned char 
  6936 ;; Registers used:
  6937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 1F/0
  6940 ;;		On exit  : 1F/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;Total ram usage:        3 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    4
  6950 ;; This function calls:
  6951 ;;		_MRF89XARegisterRead
  6952 ;;		_MRF89XARegisterSet
  6953 ;;		_MRF89XASetRFMode
  6954 ;; This function is called by:
  6955 ;;		_Comm_InitMRF
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function _MRF89XAInit
  6961  0DD7                     _MRF89XAInit:	
  6962                           
  6963                           ;incstack = 0
  6964                           ; Regs used in _MRF89XAInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6965  0DD7  01F7               	clrf	MRF89XAInit@i
  6966  0DD8                     l6604:	
  6967  0DD8  0877               	movf	MRF89XAInit@i,w
  6968  0DD9  3E00               	addlw	low (_InitConfigRegs| (0+32768))
  6969  0DDA  0084               	movwf	4
  6970  0DDB  3098               	movlw	high (_InitConfigRegs| (0+32768))
  6971  0DDC  1803               	skipnc
  6972  0DDD  3E01               	addlw	1
  6973  0DDE  0085               	movwf	5
  6974  0DDF  0800               	movf	0,w	;code access
  6975  0DE0  00F1               	movwf	MRF89XARegisterSet@value
  6976  0DE1  0877               	movf	MRF89XAInit@i,w
  6977  0DE2  2676  318B         	fcall	_MRF89XARegisterSet
  6978  0DE4  3020               	movlw	32
  6979  0DE5  0AF7               	incf	MRF89XAInit@i,f
  6980  0DE6  0277               	subwf	MRF89XAInit@i,w
  6981  0DE7  1C03               	skipc
  6982  0DE8  2DD8               	goto	l6604
  6983  0DE9  300E               	movlw	14
  6984  0DEA  2614  318B         	fcall	_MRF89XARegisterRead
  6985  0DEC  27EF  318B         	fcall	PL32	;call to abstracted procedure
  6986  0DEE  2676  318B         	fcall	_MRF89XARegisterSet
  6987  0DF0  3040               	movlw	64
  6988  0DF1  2684  318B         	fcall	_MRF89XASetRFMode
  6989  0DF3  30FF               	movlw	255
  6990  0DF4  00F7               	movwf	MRF89XAInit@i
  6991  0DF5  01F5               	clrf	MRF89XAInit@res
  6992  0DF6  2E00               	goto	l6626
  6993  0DF7                     l6618:	
  6994  0DF7  300E               	movlw	14
  6995  0DF8  2614  318B         	fcall	_MRF89XARegisterRead
  6996  0DFA  00F6               	movwf	MRF89XAInit@input
  6997  0DFB  1CF6               	btfss	MRF89XAInit@input,1
  6998  0DFC  2E00               	goto	l6626
  6999  0DFD  01F7               	clrf	MRF89XAInit@i
  7000  0DFE  01F5               	clrf	MRF89XAInit@res
  7001  0DFF  0AF5               	incf	MRF89XAInit@res,f
  7002  0E00                     l6626:	
  7003  0E00  03F7               	decf	MRF89XAInit@i,f
  7004  0E01  0F77               	incfsz	MRF89XAInit@i,w
  7005  0E02  2DF7               	goto	l6618
  7006  0E03  3020               	movlw	32
  7007  0E04  2684  318B         	fcall	_MRF89XASetRFMode
  7008  0E06  300E               	movlw	14
  7009  0E07  2614  318B         	fcall	_MRF89XARegisterRead
  7010  0E09  27EF  318B         	fcall	PL32	;call to abstracted procedure
  7011  0E0B  2676               	fcall	_MRF89XARegisterSet
  7012  0E0C  0020               	movlb	0	; select bank0
  7013  0E0D  01C1               	clrf	_MRF89XA_RSSI
  7014  0E0E  0023               	movlb	3	; select bank3
  7015  0E0F  01A0               	clrf	_RxPacket^(0+384)
  7016  0E10  0020               	movlb	0	; select bank0
  7017  0E11  01BA               	clrf	_MRF89XA_Error
  7018  0E12  0875               	movf	MRF89XAInit@res,w
  7019  0E13  0008               	return
  7020  0E14                     __end_of_MRF89XAInit:	
  7021  0E14                     __ptext110:	
  7022 ;; *************** function _MRF89XARegisterRead *****************
  7023 ;; Defined at:
  7024 ;;		line 172 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  address         1    wreg     unsigned char 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  address         1    2[COMMON] unsigned char 
  7029 ;;  value           1    1[COMMON] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  1    wreg      unsigned char 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 1C/2
  7036 ;;		On exit  : 1F/2
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:        2 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    2
  7046 ;; This function calls:
  7047 ;;		_SPI_HF_Get
  7048 ;;		_SPI_HF_Put
  7049 ;; This function is called by:
  7050 ;;		_MRF89XAInit
  7051 ;;		_MRF89XAStartReception
  7052 ;;		_MRF89XACheckRSSI
  7053 ;;		_MRF89XATask
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _MRF89XARegisterRead
  7059  0E14                     _MRF89XARegisterRead:	
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in _MRF89XARegisterRead: [wreg+status,2+status,0+pclath+cstack]
  7063  0E14  00F2               	movwf	MRF89XARegisterRead@address
  7064  0E15  0022               	movlb	2	; select bank2
  7065  0E16  118D               	bcf	13,3	;volatile
  7066  0E17  3572               	lslf	MRF89XARegisterRead@address,w
  7067  0E18  3840               	iorlw	64
  7068  0E19  00F2               	movwf	MRF89XARegisterRead@address
  7069  0E1A  3186  26DA  318B   	fcall	_SPI_HF_Put
  7070  0E1D  2698               	fcall	_SPI_HF_Get
  7071  0E1E  00F1               	movwf	MRF89XARegisterRead@value
  7072  0E1F  0022               	movlb	2	; select bank2
  7073  0E20  158D               	bsf	13,3	;volatile
  7074  0E21  0871               	movf	MRF89XARegisterRead@value,w
  7075  0E22  0008               	return
  7076  0E23                     __end_of_MRF89XARegisterRead:	
  7077  0E23                     __ptext101:	
  7078 ;; *************** function _MRF89XASendFrame *****************
  7079 ;; Defined at:
  7080 ;;		line 199 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  i               1    5[COMMON] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 1F/0
  7091 ;;		On exit  : 1F/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;Total ram usage:        1 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    4
  7101 ;; This function calls:
  7102 ;;		_MRF89XARegisterSet
  7103 ;;		_MRF89XASetRFMode
  7104 ;;		_WriteFIFO
  7105 ;; This function is called by:
  7106 ;;		_TransmitFrame
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _MRF89XASendFrame
  7112  0E23                     _MRF89XASendFrame:	
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _MRF89XASendFrame: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7116  0E23  3020               	movlw	32
  7117  0E24  2684  318B         	fcall	_MRF89XASetRFMode
  7118  0E26  27DF  318B         	fcall	PL24	;call to abstracted procedure
  7119  0E28  00F1               	movwf	MRF89XARegisterSet@value
  7120  0E29  301F               	movlw	31
  7121  0E2A  1371               	bcf	MRF89XARegisterSet@value,6
  7122  0E2B  2676  318B         	fcall	_MRF89XARegisterSet
  7123  0E2D  300D               	movlw	low ((_InitConfigRegs+13)| (0+32768))
  7124  0E2E  0084               	movwf	4
  7125  0E2F  3098               	movlw	high ((_InitConfigRegs+13)| (0+32768))
  7126  0E30  0085               	movwf	5
  7127  0E31  0800               	movf	0,w	;code access
  7128  0E32  3801               	iorlw	1
  7129  0E33  00F1               	movwf	MRF89XARegisterSet@value
  7130  0E34  300D               	movlw	13
  7131  0E35  2676  318B         	fcall	_MRF89XARegisterSet
  7132  0E37  300E               	movlw	low ((_InitConfigRegs+14)| (0+32768))
  7133  0E38  0084               	movwf	4
  7134  0E39  3098               	movlw	high ((_InitConfigRegs+14)| (0+32768))
  7135  0E3A  0085               	movwf	5
  7136  0E3B  0800               	movf	0,w	;code access
  7137  0E3C  3802               	iorlw	2
  7138  0E3D  00F1               	movwf	MRF89XARegisterSet@value
  7139  0E3E  300E               	movlw	14
  7140  0E3F  2676  318B         	fcall	_MRF89XARegisterSet
  7141  0E41  01F5               	clrf	MRF89XASendFrame@i
  7142  0E42                     l6892:	
  7143  0E42  0875               	movf	MRF89XASendFrame@i,w
  7144  0E43  0024               	movlb	4	; select bank4
  7145  0E44  0220               	subwf	_TxPacket^(0+512),w
  7146  0E45  1C03               	btfss	3,0
  7147  0E46  2E51               	goto	l6894
  7148  0E47  0875               	movf	MRF89XASendFrame@i,w
  7149  0E48  3E20               	addlw	(low (_TxPacket| (0+512)))& (0+255)
  7150  0E49  0086               	movwf	6
  7151  0E4A  3002               	movlw	2	; select bank4/5
  7152  0E4B  0087               	movwf	7
  7153  0E4C  0801               	movf	1,w
  7154  0E4D  26A4  318B         	fcall	_WriteFIFO
  7155  0E4F  0AF5               	incf	MRF89XASendFrame@i,f
  7156  0E50  2E42               	goto	l6892
  7157  0E51                     l6894:	
  7158  0E51  3080               	movlw	128
  7159  0E52  2E84               	ljmp	_MRF89XASetRFMode
  7160  0E53                     __end_of_MRF89XASendFrame:	
  7161  0E53                     __ptext105:	
  7162 ;; *************** function _Comm_InitMRF *****************
  7163 ;; Defined at:
  7164 ;;		line 72 in file "../../LIBC/COM/svc_comm.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 1F/0
  7175 ;;		On exit  : 1F/2
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;Total ram usage:        0 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    5
  7185 ;; This function calls:
  7186 ;;		_MRF89XAInit
  7187 ;;		_MRF89XARegisterSet
  7188 ;; This function is called by:
  7189 ;;		_Comm_Init
  7190 ;;		_TransmitFrame
  7191 ;;		_Comm_OnIdle
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _Comm_InitMRF
  7197  0E53                     _Comm_InitMRF:	
  7198  0E53                     l6898:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _Comm_InitMRF: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7201                           
  7202  0E53  25D7  318B         	fcall	_MRF89XAInit
  7203  0E55  3A00               	xorlw	0
  7204  0E56  1903               	btfsc	3,2
  7205  0E57  0001               	reset	;# 
  7206  0E58  0021               	movlb	1	; select bank1
  7207  0E59  0855               	movf	_RAM_NWID^(0+128),w
  7208  0E5A  00F1               	movwf	MRF89XARegisterSet@value
  7209  0E5B  3016               	movlw	22
  7210  0E5C  2676  318B         	fcall	_MRF89XARegisterSet
  7211  0E5E  0021               	movlb	1	; select bank1
  7212  0E5F  0856               	movf	(_RAM_NWID^(0+128)+1),w
  7213  0E60  00F1               	movwf	MRF89XARegisterSet@value
  7214  0E61  3017               	movlw	23
  7215  0E62  2676  318B         	fcall	_MRF89XARegisterSet
  7216  0E64  0021               	movlb	1	; select bank1
  7217  0E65  0857               	movf	(_RAM_NWID^(0+128)+2),w
  7218  0E66  00F1               	movwf	MRF89XARegisterSet@value
  7219  0E67  3018               	movlw	24
  7220  0E68  2676  318B         	fcall	_MRF89XARegisterSet
  7221  0E6A  0021               	movlb	1	; select bank1
  7222  0E6B  0858               	movf	(_RAM_NWID^(0+128)+3),w
  7223  0E6C  00F1               	movwf	MRF89XARegisterSet@value
  7224  0E6D  3019               	movlw	25
  7225  0E6E  2676  318B         	fcall	_MRF89XARegisterSet
  7226  0E70  0021               	movlb	1	; select bank1
  7227  0E71  0859               	movf	(_RAM_NWID^(0+128)+4),w
  7228  0E72  00A4               	movwf	(_ComData^(0+128)+4)
  7229  0E73  00F1               	movwf	MRF89XARegisterSet@value
  7230  0E74  301D               	movlw	29
  7231  0E75  2E76               	ljmp	_MRF89XARegisterSet
  7232  0E76                     __end_of_Comm_InitMRF:	
  7233  0E76                     __ptext109:	
  7234 ;; *************** function _MRF89XARegisterSet *****************
  7235 ;; Defined at:
  7236 ;;		line 164 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  address         1    wreg     unsigned char 
  7239 ;;  value           1    1[COMMON] unsigned char 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  address         1    2[COMMON] unsigned char 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2, status,0, pclath, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 18/0
  7248 ;;		On exit  : 1F/2
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;Total ram usage:        2 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    2
  7258 ;; This function calls:
  7259 ;;		_SPI_HF_Put
  7260 ;; This function is called by:
  7261 ;;		_UDS_WDBID
  7262 ;;		_MRF89XAInit
  7263 ;;		_MRF89XAStartReception
  7264 ;;		_MRF89XASendFrame
  7265 ;;		_MRF89XASetRFMode
  7266 ;;		_MRF89XATask
  7267 ;;		_Comm_InitMRF
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _MRF89XARegisterSet
  7273  0E76                     _MRF89XARegisterSet:	
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _MRF89XARegisterSet: [wreg+status,2+status,0+pclath+cstack]
  7277  0E76  00F2               	movwf	MRF89XARegisterSet@address
  7278  0E77  0022               	movlb	2	; select bank2
  7279  0E78  118D               	bcf	13,3	;volatile
  7280  0E79  35F2               	lslf	MRF89XARegisterSet@address,f
  7281  0E7A  0872               	movf	MRF89XARegisterSet@address,w
  7282  0E7B  3186  26DA  318B   	fcall	_SPI_HF_Put
  7283  0E7E  0871               	movf	MRF89XARegisterSet@value,w
  7284  0E7F  3186  26DA         	fcall	_SPI_HF_Put
  7285  0E81  0022               	movlb	2	; select bank2
  7286  0E82  158D               	bsf	13,3	;volatile
  7287  0E83  0008               	return
  7288  0E84                     __end_of_MRF89XARegisterSet:	
  7289  0E84                     __ptext108:	
  7290 ;; *************** function _MRF89XASetRFMode *****************
  7291 ;; Defined at:
  7292 ;;		line 241 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  mode            1    wreg     unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  mode            1    4[COMMON] unsigned char 
  7297 ;;  mcparam0_rea    1    3[COMMON] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 18/0
  7304 ;;		On exit  : 1F/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:        2 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		_MRF89XARegisterSet
  7316 ;; This function is called by:
  7317 ;;		_MRF89XAInit
  7318 ;;		_MRF89XAStartReception
  7319 ;;		_MRF89XASendFrame
  7320 ;;		_MRF89XATask
  7321 ;;		_TransmitFrame
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _MRF89XASetRFMode
  7327  0E84                     _MRF89XASetRFMode:	
  7328                           
  7329                           ;incstack = 0
  7330                           ; Regs used in _MRF89XASetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7331  0E84  00F4               	movwf	MRF89XASetRFMode@mode
  7332  0E85  108B               	bcf	11,1	;volatile
  7333  0E86  3000               	movlw	low (_InitConfigRegs| (0+32768))
  7334  0E87  0084               	movwf	4
  7335  0E88  3098               	movlw	high (_InitConfigRegs| (0+32768))
  7336  0E89  0085               	movwf	5
  7337  0E8A  0800               	movf	0,w	;code access
  7338  0E8B  00F3               	movwf	MRF89XASetRFMode@mcparam0_read
  7339  0E8C  301F               	movlw	31
  7340  0E8D  05F3               	andwf	MRF89XASetRFMode@mcparam0_read,f
  7341  0E8E  0874               	movf	MRF89XASetRFMode@mode,w
  7342  0E8F  04F3               	iorwf	MRF89XASetRFMode@mcparam0_read,f
  7343  0E90  0873               	movf	MRF89XASetRFMode@mcparam0_read,w
  7344  0E91  00F1               	movwf	MRF89XARegisterSet@value
  7345  0E92  3000               	movlw	0
  7346  0E93  2676               	fcall	_MRF89XARegisterSet
  7347  0E94  0874               	movf	MRF89XASetRFMode@mode,w
  7348  0E95  0020               	movlb	0	; select bank0
  7349  0E96  00BB               	movwf	_RF_Mode
  7350  0E97  0008               	return
  7351  0E98                     __end_of_MRF89XASetRFMode:	
  7352  0E98                     __ptext112:	
  7353 ;; *************** function _SPI_HF_Get *****************
  7354 ;; Defined at:
  7355 ;;		line 58 in file "../drv_spi.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  spidata         1    0        unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      unsigned char 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2
  7364 ;; Tracked objects:
  7365 ;;		On entry : 1D/2
  7366 ;;		On exit  : 1F/4
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_MRF89XARegisterRead
  7380 ;;		_ReadFIFO
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function _SPI_HF_Get
  7386  0E98                     _SPI_HF_Get:	
  7387                           
  7388                           ;incstack = 0
  7389                           ; Regs used in _SPI_HF_Get: [wreg+status,2]
  7390  0E98  0024               	movlb	4	; select bank4
  7391  0E99  0811               	movf	17,w	;volatile
  7392  0E9A  0020               	movlb	0	; select bank0
  7393  0E9B  1191               	bcf	17,3	;volatile
  7394  0E9C  0024               	movlb	4	; select bank4
  7395  0E9D  0191               	clrf	17	;volatile
  7396  0E9E                     l473:	
  7397  0E9E  0020               	movlb	0	; select bank0
  7398  0E9F  1D91               	btfss	17,3	;volatile
  7399  0EA0  2E9E               	goto	l473
  7400  0EA1  0024               	movlb	4	; select bank4
  7401  0EA2  0811               	movf	17,w	;volatile
  7402  0EA3  0008               	return
  7403  0EA4                     __end_of_SPI_HF_Get:	
  7404  0EA4                     __ptext102:	
  7405 ;; *************** function _WriteFIFO *****************
  7406 ;; Defined at:
  7407 ;;		line 226 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  Data            1    wreg     unsigned char 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  Data            1    1[COMMON] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, pclath, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 1B/4
  7418 ;;		On exit  : 1F/2
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;Total ram usage:        1 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    2
  7428 ;; This function calls:
  7429 ;;		_SPI_HF_Put
  7430 ;; This function is called by:
  7431 ;;		_MRF89XASendFrame
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function _WriteFIFO
  7437  0EA4                     _WriteFIFO:	
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  7441  0EA4  00F1               	movwf	WriteFIFO@Data
  7442  0EA5  0022               	movlb	2	; select bank2
  7443  0EA6  120C               	bcf	12,4	;volatile
  7444  0EA7  0871               	movf	WriteFIFO@Data,w
  7445  0EA8  3186  26DA         	fcall	_SPI_HF_Put
  7446  0EAA  0022               	movlb	2	; select bank2
  7447  0EAB  160C               	bsf	12,4	;volatile
  7448  0EAC  0008               	return
  7449  0EAD                     __end_of_WriteFIFO:	
  7450  0EAD                     __ptext68:	
  7451 ;; *************** function _MRF89XACheckRSSI *****************
  7452 ;; Defined at:
  7453 ;;		line 256 in file "../../LIBC/MRF89_Drv/MRF89XA.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 1F/0
  7464 ;;		On exit  : 1F/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    3
  7474 ;; This function calls:
  7475 ;;		_MRF89XARegisterRead
  7476 ;; This function is called by:
  7477 ;;		_MRF89XATask
  7478 ;;		_Comm_OnIdle
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function _MRF89XACheckRSSI
  7484  0EAD                     _MRF89XACheckRSSI:	
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _MRF89XACheckRSSI: [wreg+status,2+status,0+pclath+cstack]
  7488  0EAD  3014               	movlw	20
  7489  0EAE  2614               	fcall	_MRF89XARegisterRead
  7490  0EAF  0020               	movlb	0	; select bank0
  7491  0EB0  00C1               	movwf	_MRF89XA_RSSI
  7492  0EB1  0008               	return
  7493  0EB2                     __end_of_MRF89XACheckRSSI:	
  7494  0EB2                     __ptext103:	
  7495 ;; *************** function _IO_StartTimer1 *****************
  7496 ;; Defined at:
  7497 ;;		line 228 in file "../drv_io.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  Time            1    wreg     unsigned char 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  Time            1    0[COMMON] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg
  7506 ;; Tracked objects:
  7507 ;;		On entry : 1E/0
  7508 ;;		On exit  : 1F/8
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;Total ram usage:        1 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_Comm_PrepareTransmit
  7522 ;;		_TransmitFrame
  7523 ;;		_Comm_OnIdle
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           
  7528                           ;psect for function _IO_StartTimer1
  7529  0EB2                     _IO_StartTimer1:	
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _IO_StartTimer1: [wreg]
  7533  0EB2  00F0               	movwf	IO_StartTimer1@Time
  7534  0EB3  0028               	movlb	8	; select bank8
  7535  0EB4  1117               	bcf	23,2	;volatile
  7536  0EB5  0870               	movf	IO_StartTimer1@Time,w
  7537  0EB6  0096               	movwf	22	;volatile
  7538  0EB7  0020               	movlb	0	; select bank0
  7539  0EB8  1093               	bcf	19,1	;volatile
  7540  0EB9  0028               	movlb	8	; select bank8
  7541  0EBA  1517               	bsf	23,2	;volatile
  7542  0EBB  0008               	return
  7543  0EBC                     __end_of_IO_StartTimer1:	
  7544  0EBC                     __ptext100:	
  7545 ;; *************** function _TransmitFrame *****************
  7546 ;; Defined at:
  7547 ;;		line 114 in file "../../LIBC/COM/svc_comm.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 1B/0
  7558 ;;		On exit  : 1D/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    6
  7568 ;; This function calls:
  7569 ;;		_Comm_InitMRF
  7570 ;;		_IO_DisablePIR
  7571 ;;		_IO_StartTimer1
  7572 ;;		_MRF89XASendFrame
  7573 ;;		_MRF89XASetRFMode
  7574 ;; This function is called by:
  7575 ;;		_Comm_Init
  7576 ;;		_Comm_OnIdle
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function _TransmitFrame
  7582  0EBC                     _TransmitFrame:	
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _TransmitFrame: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7586  0EBC  0021               	movlb	1	; select bank1
  7587  0EBD  0824               	movf	(_ComData^(0+128)+4),w
  7588  0EBE  0024               	movlb	4	; select bank4
  7589  0EBF  00A2               	movwf	(_TxPacket^(0+512)+2)
  7590  0EC0  01A3               	clrf	(_TxPacket^(0+512)+3)
  7591  0EC1  26D4  318B         	fcall	_IO_DisablePIR
  7592  0EC3  2623  318B         	fcall	_MRF89XASendFrame
  7593  0EC5  3034               	movlw	52
  7594  0EC6  26B2  318B         	fcall	_IO_StartTimer1
  7595  0EC8  2ECC               	goto	l1225
  7596  0EC9                     l7176:	
  7597  0EC9  0020               	movlb	0	; select bank0
  7598  0ECA  1893               	btfsc	19,1	;volatile
  7599  0ECB  2ECE               	goto	l1229
  7600  0ECC                     l1225:	
  7601  0ECC  1C8B               	btfss	11,1	;volatile
  7602  0ECD  2EC9               	goto	l7176
  7603  0ECE                     l1229:	
  7604  0ECE  0020               	movlb	0	; select bank0
  7605  0ECF  1C93               	btfss	19,1	;volatile
  7606  0ED0  2ED2               	goto	l7180
  7607  0ED1  2E53               	ljmp	l6898
  7608  0ED2                     l7180:	
  7609  0ED2  3020               	movlw	32
  7610  0ED3  2E84               	ljmp	_MRF89XASetRFMode
  7611  0ED4                     __end_of_TransmitFrame:	
  7612  0ED4                     __ptext104:	
  7613 ;; *************** function _IO_DisablePIR *****************
  7614 ;; Defined at:
  7615 ;;		line 38 in file "../drv_io.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg
  7624 ;; Tracked objects:
  7625 ;;		On entry : 1F/4
  7626 ;;		On exit  : 1F/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    1
  7636 ;; This function calls:
  7637 ;;		Nothing
  7638 ;; This function is called by:
  7639 ;;		_TransmitFrame
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           
  7644                           ;psect for function _IO_DisablePIR
  7645  0ED4                     _IO_DisablePIR:	
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in _IO_DisablePIR: [wreg]
  7649  0ED4  3002               	movlw	2
  7650  0ED5  0020               	movlb	0	; select bank0
  7651  0ED6  00B1               	movwf	_PIRFlags+1
  7652  0ED7  0008               	return
  7653  0ED8                     __end_of_IO_DisablePIR:	
  7654  0ED8                     __ptext77:	
  7655 ;; *************** function _PrepBlockData *****************
  7656 ;; Defined at:
  7657 ;;		line 59 in file "../../LIBC/NVM/svc_nvm.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7666 ;; Tracked objects:
  7667 ;;		On entry : 1F/0
  7668 ;;		On exit  : 1F/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;Total ram usage:        3 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_ReadBlock
  7682 ;;		_NVM_Init
  7683 ;;		_NVM_Task
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           
  7688                           ;psect for function _PrepBlockData
  7689  0ED8                     _PrepBlockData:	
  7690                           
  7691                           ;incstack = 0
  7692                           ; Regs used in _PrepBlockData: [wreg-fsr0h+status,2+status,0+pclath]
  7693  0ED8  083F               	movf	_CurrentBlock,w
  7694  0ED9  3E78               	addlw	low (_NVM_BlockAddr| (0+32768))
  7695  0EDA  0084               	movwf	4
  7696  0EDB  3098               	movlw	high (_NVM_BlockAddr| (0+32768))
  7697  0EDC  1803               	skipnc
  7698  0EDD  3E01               	addlw	1
  7699  0EDE  0085               	movwf	5
  7700  0EDF  0800               	movf	0,w	;code access
  7701  0EE0  00BD               	movwf	_addr
  7702  0EE1  083F               	movf	_CurrentBlock,w
  7703  0EE2  00F0               	movwf	??_PrepBlockData
  7704  0EE3  304E               	movlw	low (_NVM_BlockRAM| (0+32768))
  7705  0EE4  27D3  318B         	fcall	PL18	;call to abstracted procedure
  7706  0EE6  3098               	movlw	high (_NVM_BlockRAM| (0+32768))
  7707  0EE7  3D71               	addwfc	??_PrepBlockData+1,w
  7708  0EE8  0085               	movwf	5
  7709  0EE9  3F00               	moviw [0]fsr0
  7710  0EEA  00A6               	movwf	_pRam
  7711  0EEB  3F01               	moviw [1]fsr0
  7712  0EEC  00A7               	movwf	_pRam+1
  7713  0EED  083F               	movf	_CurrentBlock,w
  7714  0EEE  00F0               	movwf	??_PrepBlockData
  7715  0EEF  303C               	movlw	low (_NVM_BlockROM| (0+32768))
  7716  0EF0  27D3               	fcall	PL18	;call to abstracted procedure
  7717  0EF1  3098               	movlw	high (_NVM_BlockROM| (0+32768))
  7718  0EF2  3D71               	addwfc	??_PrepBlockData+1,w
  7719  0EF3  0085               	movwf	5
  7720  0EF4  3F00               	moviw [0]fsr0
  7721  0EF5  0021               	movlb	1	; select bank1
  7722  0EF6  00C7               	movwf	_pRom^(0+128)
  7723  0EF7  3F01               	moviw [1]fsr0
  7724  0EF8  00C8               	movwf	(_pRom+1)^(0+128)
  7725  0EF9  0020               	movlb	0	; select bank0
  7726  0EFA  083F               	movf	_CurrentBlock,w
  7727  0EFB  318B  2371         	fcall	PL6	;call to abstracted procedure
  7728  0EFD  00BE               	movwf	_ByteCount
  7729  0EFE  01C0               	clrf	_CSm
  7730  0EFF  0008               	return
  7731  0F00                     __end_of_PrepBlockData:	
  7732  0F00                     __ptext69:	
  7733 ;; *************** function _Comm_RxProcess *****************
  7734 ;; Defined at:
  7735 ;;		line 132 in file "../../LIBC/COM/svc_comm.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      void 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 1F/3
  7746 ;;		On exit  : 10/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    6
  7756 ;; This function calls:
  7757 ;;		_App_OnAirHumSig
  7758 ;;		_App_OnAirTempSig
  7759 ;;		_App_OnWinSensor
  7760 ;;		_Comm_IsAlreadyReceived
  7761 ;;		_Comm_PrepareTransmit
  7762 ;;		_NEG_RESP
  7763 ;;		_POS_RESP
  7764 ;;		_PRS_OnPIRFrame
  7765 ;;		_RTC_OnRTCFrame
  7766 ;;		_RequestReset
  7767 ;;		_UDS_CompareKey
  7768 ;;		_UDS_GetSeed
  7769 ;;		_UDS_RDBID
  7770 ;;		_UDS_WDBID
  7771 ;;		_Write_Eep
  7772 ;; This function is called by:
  7773 ;;		_Comm_OnIdle
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function _Comm_RxProcess
  7779  0F00                     _Comm_RxProcess:	
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _Comm_RxProcess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7783  0F00  3195  25CD  318B   	fcall	_Comm_IsAlreadyReceived
  7784  0F03  3A00               	xorlw	0
  7785  0F04  1D03               	btfss	3,2
  7786  0F05  0008               	return
  7787  0F06  0024               	movlb	4	; select bank4
  7788  0F07  01A4               	clrf	(_TxPacket^(0+512)+4)
  7789  0F08  01A0               	clrf	_TxPacket^(0+512)
  7790  0F09  2F98               	goto	l7262
  7791  0F0A                     l7188:	
  7792  0F0A  3005               	movlw	5
  7793  0F0B  0021               	movlb	1	; select bank1
  7794  0F0C                     L16:	
  7795  0F0C  00A2               	movwf	(_ComData^(0+128)+2)
  7796  0F0D  0023               	movlb	3	; select bank3
  7797  0F0E  0820               	movf	_RxPacket^(0+384),w
  7798  0F0F  0021               	movlb	1	; select bank1
  7799  0F10  0222               	subwf	(_ComData^(0+128)+2),w
  7800  0F11  1803               	btfsc	3,0
  7801  0F12  2FB3               	goto	l7264
  7802  0F13  0822               	movf	(_ComData^(0+128)+2),w
  7803  0F14  3EA0               	addlw	(low (_RxPacket| (0+256)))& (0+255)
  7804  0F15  0086               	movwf	6
  7805  0F16  3001               	movlw	1	; select bank3/4
  7806  0F17  0087               	movwf	7
  7807  0F18  0801               	movf	1,w
  7808  0F19  00A5               	movwf	(_ComData^(0+128)+5)
  7809  0F1A  3A11               	xorlw	17
  7810  0F1B  1D03               	btfss	3,2
  7811  0F1C  2F21               	goto	l7196
  7812  0F1D  3195  2584  318B   	fcall	_PRS_OnPIRFrame
  7813  0F20  2F3F               	goto	l7212
  7814  0F21                     l7196:	
  7815  0F21  3007               	movlw	7
  7816  0F22  0625               	xorwf	(_ComData^(0+128)+5),w
  7817  0F23  1D03               	btfss	3,2
  7818  0F24  2F29               	goto	l7200
  7819  0F25  3194  249F  318B   	fcall	_RTC_OnRTCFrame
  7820  0F28  2F3F               	goto	l7212
  7821  0F29                     l7200:	
  7822  0F29  30B1               	movlw	177
  7823  0F2A  0625               	xorwf	(_ComData^(0+128)+5),w
  7824  0F2B  1D03               	btfss	3,2
  7825  0F2C  2F31               	goto	l7204
  7826  0F2D  3195  25A4  318B   	fcall	_App_OnWinSensor
  7827  0F30  2F3F               	goto	l7212
  7828  0F31                     l7204:	
  7829  0F31  3022               	movlw	34
  7830  0F32  0625               	xorwf	(_ComData^(0+128)+5),w
  7831  0F33  1D03               	btfss	3,2
  7832  0F34  2F39               	goto	l7208
  7833  0F35  3194  248D  318B   	fcall	_App_OnAirTempSig
  7834  0F38  2F3F               	goto	l7212
  7835  0F39                     l7208:	
  7836  0F39  3061               	movlw	97
  7837  0F3A  0625               	xorwf	(_ComData^(0+128)+5),w
  7838  0F3B  1D03               	btfss	3,2
  7839  0F3C  2F3F               	goto	l7212
  7840  0F3D  27CA  318B         	fcall	_App_OnAirHumSig
  7841  0F3F                     l7212:	
  7842  0F3F  0021               	movlb	1	; select bank1
  7843  0F40  0825               	movf	(_ComData^(0+128)+5),w
  7844  0F41  390F               	andlw	15
  7845  0F42  0722               	addwf	(_ComData^(0+128)+2),w
  7846  0F43  3E01               	addlw	1
  7847  0F44  2F0C               	goto	L16
  7848  0F45                     l7216:	
  7849  0F45  0821               	movf	(_RxPacket^(0+384)+1),w
  7850  0F46  1903               	btfsc	3,2
  7851  0F47  2FB3               	goto	l7264
  7852  0F48  3189  2158  318B   	fcall	_UDS_GetSeed
  7853  0F4B  2FB3               	goto	l7264
  7854  0F4C                     l7220:	
  7855  0F4C  0821               	movf	(_RxPacket^(0+384)+1),w
  7856  0F4D  1903               	btfsc	3,2
  7857  0F4E  2FB3               	goto	l7264
  7858  0F4F  3197  2766  318B   	fcall	_UDS_CompareKey
  7859  0F52  3A00               	xorlw	0
  7860  0F53  1903               	skipnz
  7861  0F54  2FB3               	goto	l7264
  7862  0F55  0021               	movlb	1	; select bank1
  7863  0F56  15A0               	bsf	_ComData^(0+128),3
  7864  0F57  2FB3               	goto	l7264
  7865  0F58                     l7226:	
  7866  0F58  0821               	movf	(_RxPacket^(0+384)+1),w
  7867  0F59  1903               	btfsc	3,2
  7868  0F5A  2FB3               	goto	l7264
  7869  0F5B  0021               	movlb	1	; select bank1
  7870  0F5C  1DA0               	btfss	_ComData^(0+128),3
  7871  0F5D  2FB3               	goto	l7264
  7872  0F5E  30FF               	movlw	255
  7873  0F5F  00F0               	movwf	Write_Eep@bdata
  7874  0F60  2517               	fcall	_Write_Eep
  7875  0F61  3000               	movlw	0
  7876  0F62  318A  22B1  318B   	fcall	_POS_RESP
  7877  0F65  2FB3               	goto	l7264
  7878  0F66                     l7232:	
  7879  0F66  3022               	movlw	34
  7880  0F67  27BD  318B         	fcall	_NEG_RESP
  7881  0F69  0023               	movlb	3	; select bank3
  7882  0F6A  0821               	movf	(_RxPacket^(0+384)+1),w
  7883  0F6B  1903               	btfsc	3,2
  7884  0F6C  2FB3               	goto	l7264
  7885  0F6D  0021               	movlb	1	; select bank1
  7886  0F6E  1DA0               	btfss	_ComData^(0+128),3
  7887  0F6F  2FB3               	goto	l7264
  7888  0F70  318A  2209  318B   	fcall	_UDS_WDBID
  7889  0F73  2FB3               	goto	l7264
  7890  0F74                     l7240:	
  7891  0F74  3022               	movlw	34
  7892  0F75  27BD  318B         	fcall	_NEG_RESP
  7893  0F77  0023               	movlb	3	; select bank3
  7894  0F78  0821               	movf	(_RxPacket^(0+384)+1),w
  7895  0F79  1903               	btfsc	3,2
  7896  0F7A  2FB3               	goto	l7264
  7897  0F7B  318A  2240  318B   	fcall	_UDS_RDBID
  7898  0F7E  2FB3               	goto	l7264
  7899  0F7F                     l7246:	
  7900  0F7F  0821               	movf	(_RxPacket^(0+384)+1),w
  7901  0F80  1903               	btfsc	3,2
  7902  0F81  2FB3               	goto	l7264
  7903  0F82  0021               	movlb	1	; select bank1
  7904  0F83  1DA0               	btfss	_ComData^(0+128),3
  7905  0F84  2FB3               	goto	l7264
  7906  0F85  3194  24F8  318B   	fcall	_RequestReset
  7907  0F88  2FB3               	goto	l7264
  7908  0F89                     l7252:	
  7909  0F89  30A4               	movlw	164
  7910  0F8A  0625               	xorwf	(_RxPacket^(0+384)+5),w
  7911  0F8B  1D03               	btfss	3,2
  7912  0F8C  2F90               	goto	l7256
  7913  0F8D  0021               	movlb	1	; select bank1
  7914  0F8E  1120               	bcf	_ComData^(0+128),2
  7915  0F8F  2FB3               	goto	l7264
  7916  0F90                     l7256:	
  7917  0F90  304A               	movlw	74
  7918  0F91  0625               	xorwf	(_RxPacket^(0+384)+5),w
  7919  0F92  1D03               	btfss	3,2
  7920  0F93  2FB3               	goto	l7264
  7921  0F94  0021               	movlb	1	; select bank1
  7922  0F95  1520               	bsf	_ComData^(0+128),2
  7923  0F96  11A0               	bcf	_ComData^(0+128),3
  7924  0F97  2FB3               	goto	l7264
  7925  0F98                     l7262:	
  7926  0F98  0023               	movlb	3	; select bank3
  7927  0F99  0824               	movf	(_RxPacket^(0+384)+4),w
  7928                           
  7929                           ; Switch size 1, requested type "space"
  7930                           ; Number of cases is 8, Range of values is 6 to 249
  7931                           ; switch strategies available:
  7932                           ; Name         Instructions Cycles
  7933                           ; simple_byte           25    13 (average)
  7934                           ; jumptable            263     9 (fixed)
  7935                           ;	Chosen strategy is simple_byte
  7936  0F9A  3A06               	xorlw	6	; case 6
  7937  0F9B  1903               	skipnz
  7938  0F9C  2F0A               	goto	l7188
  7939  0F9D  3AF6               	xorlw	246	; case 240
  7940  0F9E  1903               	skipnz
  7941  0F9F  2F45               	goto	l7216
  7942  0FA0  3A01               	xorlw	1	; case 241
  7943  0FA1  1903               	skipnz
  7944  0FA2  2F4C               	goto	l7220
  7945  0FA3  3A02               	xorlw	2	; case 243
  7946  0FA4  1903               	skipnz
  7947  0FA5  2F66               	goto	l7232
  7948  0FA6  3A06               	xorlw	6	; case 245
  7949  0FA7  1903               	skipnz
  7950  0FA8  2F7F               	goto	l7246
  7951  0FA9  3A03               	xorlw	3	; case 246
  7952  0FAA  1903               	skipnz
  7953  0FAB  2F74               	goto	l7240
  7954  0FAC  3A0E               	xorlw	14	; case 248
  7955  0FAD  1903               	skipnz
  7956  0FAE  2F58               	goto	l7226
  7957  0FAF  3A01               	xorlw	1	; case 249
  7958  0FB0  1903               	skipnz
  7959  0FB1  2F89               	goto	l7252
  7960  0FB2  2FB3               	goto	l7264
  7961  0FB3                     l7264:	
  7962  0FB3  0024               	movlb	4	; select bank4
  7963  0FB4  0824               	movf	(_TxPacket^(0+512)+4),w
  7964  0FB5  1903               	btfsc	3,2
  7965  0FB6  0008               	return
  7966  0FB7  0023               	movlb	3	; select bank3
  7967  0FB8  0822               	movf	(_RxPacket^(0+384)+2),w
  7968  0FB9  0024               	movlb	4	; select bank4
  7969  0FBA  00A1               	movwf	(_TxPacket^(0+512)+1)
  7970  0FBB  3195  2D7D         	ljmp	l4898
  7971  0FBD                     __end_of_Comm_RxProcess:	
  7972  0FBD                     __ptext88:	
  7973 ;; *************** function _NEG_RESP *****************
  7974 ;; Defined at:
  7975 ;;		line 50 in file "../../LIBC/COM/svc_comm.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  c               1    wreg     unsigned char 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  c               1    0[COMMON] unsigned char 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0
  7984 ;; Tracked objects:
  7985 ;;		On entry : 1C/3
  7986 ;;		On exit  : 18/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;Total ram usage:        1 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:    1
  7996 ;; This function calls:
  7997 ;;		Nothing
  7998 ;; This function is called by:
  7999 ;;		_UDS_CompareKey
  8000 ;;		_Comm_RxProcess
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function _NEG_RESP
  8006  0FBD                     _NEG_RESP:	
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _NEG_RESP: [wreg+status,2+status,0]
  8010  0FBD  00F0               	movwf	NEG_RESP@c
  8011  0FBE  0023               	movlb	3	; select bank3
  8012  0FBF  0821               	movf	(_RxPacket^(0+384)+1),w
  8013  0FC0  1903               	btfsc	3,2
  8014  0FC1  0008               	return
  8015  0FC2  30FF               	movlw	255
  8016  0FC3  0024               	movlb	4	; select bank4
  8017  0FC4  00A4               	movwf	(_TxPacket^(0+512)+4)
  8018  0FC5  0870               	movf	NEG_RESP@c,w
  8019  0FC6  00A5               	movwf	(_TxPacket^(0+512)+5)
  8020  0FC7  3005               	movlw	5
  8021  0FC8  00A0               	movwf	_TxPacket^(0+512)
  8022  0FC9  0008               	return
  8023  0FCA                     __end_of_NEG_RESP:	
  8024  0FCA                     __ptext98:	
  8025 ;; *************** function _App_OnAirHumSig *****************
  8026 ;; Defined at:
  8027 ;;		line 76 in file "../drv_air_sens.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;		None
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;		None
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8036 ;; Tracked objects:
  8037 ;;		On entry : 1F/1
  8038 ;;		On exit  : 1E/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;Total ram usage:        0 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    1
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_Comm_RxProcess
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           
  8056                           ;psect for function _App_OnAirHumSig
  8057  0FCA                     _App_OnAirHumSig:	
  8058                           
  8059                           ;incstack = 0
  8060                           ; Regs used in _App_OnAirHumSig: [wreg+fsr1l+fsr1h+status,2+status,0]
  8061  0FCA  27EA  318B         	fcall	PL30	;call to abstracted procedure
  8062  0FCC  1D03               	skipz
  8063  0FCD  0008               	return
  8064  0FCE  3195  25C6         	fcall	PL4	;call to abstracted procedure
  8065  0FD0  0020               	movlb	0	; select bank0
  8066  0FD1  00C9               	movwf	_currhum
  8067  0FD2  0008               	return
  8068  0FD3                     __end_of_App_OnAirHumSig:	
  8069  0FD3                     PL18:	
  8070  0FD3  01F1               	clrf	??_PrepBlockData+1
  8071  0FD4  35F0               	lslf	??_PrepBlockData,f
  8072  0FD5  0DF1               	rlf	??_PrepBlockData+1,f
  8073  0FD6  0770               	addwf	??_PrepBlockData,w
  8074  0FD7  0084               	movwf	4
  8075  0FD8  0008               	return
  8076  0FD9                     __end_ofPL18:	
  8077  0FD9                     PL22:	
  8078  0FD9  0822               	movf	(_ComData^(0+128)+2),w
  8079  0FDA  3EA7               	addlw	(low ((_ComData| 0+7)))& (0+255)
  8080  0FDB  0086               	movwf	6
  8081  0FDC  0187               	clrf	7
  8082  0FDD  0181               	clrf	1
  8083  0FDE  0008               	return
  8084  0FDF                     __end_ofPL22:	
  8085  0FDF                     PL24:	
  8086  0FDF  301F               	movlw	low ((_InitConfigRegs+31)| (0+32768))
  8087  0FE0  0084               	movwf	4
  8088  0FE1  3098               	movlw	high ((_InitConfigRegs+31)| (0+32768))
  8089  0FE2  0085               	movwf	5
  8090  0FE3  0800               	movf	0,w	;code access
  8091  0FE4  0008               	return
  8092  0FE5                     __end_ofPL24:	
  8093  0FE5                     PL28:	
  8094  0FE5  3001               	movlw	1
  8095  0FE6  02E7               	subwf	_u16Tics^(0+128),f
  8096  0FE7  3000               	movlw	0
  8097  0FE8  3BE8               	subwfb	(_u16Tics+1)^(0+128),f
  8098  0FE9  0008               	return
  8099  0FEA                     __end_ofPL28:	
  8100  0FEA                     PL30:	
  8101  0FEA  0023               	movlb	3	; select bank3
  8102  0FEB  0822               	movf	(_RxPacket^(0+384)+2),w
  8103  0FEC  0021               	movlb	1	; select bank1
  8104  0FED  0661               	xorwf	(_RAM_TEMP_REGDATA^(0+128)+2),w
  8105  0FEE  0008               	return
  8106  0FEF                     __end_ofPL30:	
  8107  0FEF                     PL32:	
  8108  0FEF  00F6               	movwf	MRF89XAInit@input
  8109  0FF0  3802               	iorlw	2
  8110  0FF1  00F1               	movwf	MRF89XARegisterSet@value
  8111  0FF2  340E               	retlw	14
  8112  0FF3                     __end_ofPL32:	
  8113  0FF3                     __ptext63:	
  8114 ;; *************** function _Comm_TaskSlow *****************
  8115 ;; Defined at:
  8116 ;;		line 226 in file "../../LIBC/COM/svc_comm.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 1F/0
  8127 ;;		On exit  : 1F/1
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function _Comm_TaskSlow
  8146  0FF3                     _Comm_TaskSlow:	
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _Comm_TaskSlow: [wreg+status,2+status,0]
  8150  0FF3  303C               	movlw	60
  8151  0FF4  0021               	movlb	1	; select bank1
  8152  0FF5  0221               	subwf	(_ComData^(0+128)+1),w
  8153  0FF6  1803               	skipnc
  8154  0FF7  2FFA               	goto	l1277
  8155  0FF8  0AA1               	incf	(_ComData^(0+128)+1),f
  8156  0FF9  0008               	return
  8157  0FFA                     l1277:	
  8158  0FFA  1420               	bsf	_ComData^(0+128),0
  8159  0FFB  0008               	return
  8160  0FFC                     __end_of_Comm_TaskSlow:	
  8161  0FFC                     __ptext62:	
  8162 ;; *************** function _I2C_Init *****************
  8163 ;; Defined at:
  8164 ;;		line 10 in file "../drv_I2C.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		None
  8173 ;; Tracked objects:
  8174 ;;		On entry : B1F/0
  8175 ;;		On exit  : B1F/1
  8176 ;;		Unchanged: B00/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    1
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _I2C_Init
  8194  0FFC                     _I2C_Init:	
  8195                           
  8196                           ;incstack = 0
  8197                           ; Regs used in _I2C_Init: []
  8198  0FFC  0021               	movlb	1	; select bank1
  8199  0FFD  158C               	bsf	12,3	;volatile
  8200  0FFE  150C               	bsf	12,2	;volatile
  8201  0FFF  0008               	return
  8202  1000                     __end_of_I2C_Init:	
  8203                           
  8204                           	psect	swtext1
  8205  133E                     __pswtext1:	
  8206  133E                     S7614:	
  8207  133E  318B  2BBD         	ljmp	l7548
  8208  1340  318B  2BC1         	ljmp	l7550
  8209  1342  318B  2BC5         	ljmp	l7552
  8210  1344  318B  2BC9         	ljmp	l7554
  8211  1346  318B  2BCD         	ljmp	l7556
  8212                           
  8213                           	psect	text1
  8214  146F                     __ptext1:	
  8215 ;; *************** function _WIN_TaskSlow *****************
  8216 ;; Defined at:
  8217 ;;		line 18 in file "../app_win_sens.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0
  8226 ;; Tracked objects:
  8227 ;;		On entry : 1F/1
  8228 ;;		On exit  : 1F/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;Total ram usage:        0 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_main
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           
  8246                           ;psect for function _WIN_TaskSlow
  8247  146F                     _WIN_TaskSlow:	
  8248                           
  8249                           ;incstack = 0
  8250                           ; Regs used in _WIN_TaskSlow: [wreg+status,2+status,0]
  8251  146F  0020               	movlb	0	; select bank0
  8252  1470  3004               	movlw	4
  8253  1471  0AB4               	incf	_cntr,f
  8254  1472  0234               	subwf	_cntr,w
  8255  1473  1C03               	skipc
  8256  1474  0008               	return
  8257  1475  01B4               	clrf	_cntr
  8258  1476  0824               	movf	_uSc,w
  8259  1477  1D03               	btfss	3,2
  8260  1478  03A4               	decf	_uSc,f
  8261  1479  0825               	movf	_uSc+1,w
  8262  147A  1D03               	btfss	3,2
  8263  147B  03A5               	decf	_uSc+1,f
  8264  147C  0008               	return
  8265  147D                     __end_of_WIN_TaskSlow:	
  8266                           
  8267                           	psect	text2
  8268  07FA                     __ptext2:	
  8269 ;; *************** function _WIN_Init *****************
  8270 ;; Defined at:
  8271 ;;		line 12 in file "../app_win_sens.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		status,2
  8280 ;; Tracked objects:
  8281 ;;		On entry : 1F/2
  8282 ;;		On exit  : 1F/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;Total ram usage:        0 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    1
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_main
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           
  8300                           ;psect for function _WIN_Init
  8301  07FA                     _WIN_Init:	
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in _WIN_Init: [status,2]
  8305  07FA  0020               	movlb	0	; select bank0
  8306  07FB  01A4               	clrf	_uSc
  8307  07FC  01A5               	clrf	_uSc+1
  8308  07FD  01B4               	clrf	_cntr
  8309  07FE  0008               	return
  8310  07FF                     __end_of_WIN_Init:	
  8311                           
  8312                           	psect	text3
  8313  1461                     __ptext3:	
  8314 ;; *************** function _SPI_HF_Init *****************
  8315 ;; Defined at:
  8316 ;;		line 6 in file "../drv_spi.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, status,2
  8325 ;; Tracked objects:
  8326 ;;		On entry : B1F/1
  8327 ;;		On exit  : B1F/2
  8328 ;;		Unchanged: B00/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    1
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_main
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _SPI_HF_Init
  8346  1461                     _SPI_HF_Init:	
  8347                           
  8348                           ;incstack = 0
  8349                           ; Regs used in _SPI_HF_Init: [wreg+status,2]
  8350  1461  0024               	movlb	4	; select bank4
  8351  1462  0195               	clrf	21	;volatile
  8352  1463  0196               	clrf	22	;volatile
  8353  1464  0197               	clrf	23	;volatile
  8354  1465  3040               	movlw	64
  8355  1466  0094               	movwf	20	;volatile
  8356  1467  0021               	movlb	1	; select bank1
  8357  1468  1191               	bcf	17,3	;volatile
  8358  1469  0024               	movlb	4	; select bank4
  8359  146A  1695               	bsf	21,5	;volatile
  8360  146B  0022               	movlb	2	; select bank2
  8361  146C  160C               	bsf	12,4	;volatile
  8362  146D  158D               	bsf	13,3	;volatile
  8363  146E  0008               	return
  8364  146F                     __end_of_SPI_HF_Init:	
  8365                           
  8366                           	psect	text4
  8367  14E1                     __ptext4:	
  8368 ;; *************** function _RTC_TaskSlow *****************
  8369 ;; Defined at:
  8370 ;;		line 24 in file "../../LIBC/RTC/app_RTC.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0, pclath, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 1F/0
  8381 ;;		On exit  : 1E/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    2
  8391 ;; This function calls:
  8392 ;;		_RequestReset
  8393 ;; This function is called by:
  8394 ;;		_main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _RTC_TaskSlow
  8400  14E1                     _RTC_TaskSlow:	
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in _RTC_TaskSlow: [wreg+status,2+status,0+pclath+cstack]
  8404  14E1  0021               	movlb	1	; select bank1
  8405  14E2  0FBC               	incfsz	_DateTime^(0+128),f
  8406  14E3  2CE6               	goto	l5970
  8407  14E4  0020               	movlb	0	; select bank0
  8408  14E5  01D1               	clrf	_RTC_Status
  8409  14E6                     l5970:	
  8410  14E6  0020               	movlb	0	; select bank0
  8411  14E7  0851               	movf	_RTC_Status,w
  8412  14E8  1903               	btfsc	3,2
  8413  14E9  0008               	return
  8414  14EA  3023               	movlw	35
  8415  14EB  0021               	movlb	1	; select bank1
  8416  14EC  063E               	xorwf	(_DateTime^(0+128)+2),w
  8417  14ED  1D03               	btfss	3,2
  8418  14EE  0008               	return
  8419  14EF  3059               	movlw	89
  8420  14F0  063D               	xorwf	(_DateTime^(0+128)+1),w
  8421  14F1  1D03               	btfss	3,2
  8422  14F2  0008               	return
  8423  14F3  3028               	movlw	40
  8424  14F4  063C               	xorwf	_DateTime^(0+128),w
  8425  14F5  1D03               	btfss	3,2
  8426  14F6  0008               	return
  8427  14F7  2CF8               	ljmp	l4600
  8428  14F8                     __end_of_RTC_TaskSlow:	
  8429  14F8                     __ptext91:	
  8430 ;; *************** function _RequestReset *****************
  8431 ;; Defined at:
  8432 ;;		line 112 in file "../main.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg
  8441 ;; Tracked objects:
  8442 ;;		On entry : 1F/1
  8443 ;;		On exit  : 1F/1
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    1
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_RTC_TaskSlow
  8457 ;;		_Comm_RxProcess
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           
  8462                           ;psect for function _RequestReset
  8463  14F8                     _RequestReset:	
  8464  14F8                     l4600:	
  8465                           ;incstack = 0
  8466                           ; Regs used in _RequestReset: [wreg]
  8467                           
  8468  14F8  305A               	movlw	90
  8469  14F9  00D3               	movwf	_u16Reset^(0+128)
  8470  14FA  30A5               	movlw	165
  8471  14FB  00D4               	movwf	(_u16Reset^(0+128)+1)
  8472  14FC  0008               	return
  8473  14FD                     __end_of_RequestReset:	
  8474                           
  8475                           	psect	text5
  8476  1449                     __ptext5:	
  8477 ;; *************** function _RTC_Init *****************
  8478 ;; Defined at:
  8479 ;;		line 10 in file "../../LIBC/RTC/app_RTC.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		status,2
  8488 ;; Tracked objects:
  8489 ;;		On entry : 1E/1
  8490 ;;		On exit  : 1F/1
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    1
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_main
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function _RTC_Init
  8509  1449                     _RTC_Init:	
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _RTC_Init: [status,2]
  8513  1449  0020               	movlb	0	; select bank0
  8514  144A  01D1               	clrf	_RTC_Status
  8515  144B  0021               	movlb	1	; select bank1
  8516  144C  01C2               	clrf	(_DateTime^(0+128)+6)
  8517  144D  01C1               	clrf	(_DateTime^(0+128)+5)
  8518  144E  01C0               	clrf	(_DateTime^(0+128)+4)
  8519  144F  01BF               	clrf	(_DateTime^(0+128)+3)
  8520  1450  01BE               	clrf	(_DateTime^(0+128)+2)
  8521  1451  01BD               	clrf	(_DateTime^(0+128)+1)
  8522  1452  01BC               	clrf	_DateTime^(0+128)
  8523  1453  0008               	return
  8524  1454                     __end_of_RTC_Init:	
  8525                           
  8526                           	psect	text6
  8527  08A9                     __ptext6:	
  8528 ;; *************** function _REG_TaskSlow *****************
  8529 ;; Defined at:
  8530 ;;		line 158 in file "../app_TempReg.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;		None
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  1    wreg      void 
  8537 ;; Registers used:
  8538 ;;		wreg, status,2, status,0, pclath, cstack
  8539 ;; Tracked objects:
  8540 ;;		On entry : 1F/0
  8541 ;;		On exit  : 1E/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;Total ram usage:        1 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; Hardware stack levels required when called:    2
  8551 ;; This function calls:
  8552 ;;		_REG_FZLogic
  8553 ;;		_WIN_IsOpen
  8554 ;; This function is called by:
  8555 ;;		_main
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           
  8560                           ;psect for function _REG_TaskSlow
  8561  08A9                     _REG_TaskSlow:	
  8562                           
  8563                           ;incstack = 0
  8564                           ; Regs used in _REG_TaskSlow: [wreg+status,2+status,0+pclath+cstack]
  8565  08A9  0021               	movlb	1	; select bank1
  8566  08AA  084D               	movf	_startTime^(0+128),w
  8567  08AB  044E               	iorwf	(_startTime+1)^(0+128),w
  8568  08AC  1903               	btfsc	3,2
  8569  08AD  28D4               	goto	l6034
  8570  08AE  3001               	movlw	1
  8571  08AF  02CD               	subwf	_startTime^(0+128),f
  8572  08B0  3000               	movlw	0
  8573  08B1  3BCE               	subwfb	(_startTime+1)^(0+128),f
  8574  08B2  0020               	movlb	0	; select bank0
  8575  08B3  082D               	movf	_currtemp+1,w
  8576  08B4  00AB               	movwf	_Delta+1
  8577  08B5  082C               	movf	_currtemp,w
  8578  08B6  00AA               	movwf	_Delta
  8579  08B7  0021               	movlb	1	; select bank1
  8580  08B8  084B               	movf	_startTemp^(0+128),w
  8581  08B9  0020               	movlb	0	; select bank0
  8582  08BA  02AA               	subwf	_Delta,f
  8583  08BB  0021               	movlb	1	; select bank1
  8584  08BC  084C               	movf	(_startTemp+1)^(0+128),w
  8585  08BD  0020               	movlb	0	; select bank0
  8586  08BE  3BAB               	subwfb	_Delta+1,f
  8587  08BF  1FAB               	btfss	_Delta+1,7
  8588  08C0  28C6               	goto	l6026
  8589  08C1  09AA               	comf	_Delta,f
  8590  08C2  09AB               	comf	_Delta+1,f
  8591  08C3  0AAA               	incf	_Delta,f
  8592  08C4  1903               	skipnz
  8593  08C5  0AAB               	incf	_Delta+1,f
  8594  08C6                     l6026:	
  8595  08C6  082B               	movf	_Delta+1,w
  8596  08C7  3A80               	xorlw	128
  8597  08C8  00F1               	movwf	??_REG_TaskSlow
  8598  08C9  3080               	movlw	128
  8599  08CA  0271               	subwf	??_REG_TaskSlow,w
  8600  08CB  1D03               	skipz
  8601  08CC  28CF               	goto	u4595
  8602  08CD  3003               	movlw	3
  8603  08CE  022A               	subwf	_Delta,w
  8604  08CF                     u4595:	
  8605  08CF  1C03               	skipc
  8606  08D0  28D4               	goto	l6034
  8607  08D1  0021               	movlb	1	; select bank1
  8608  08D2  01CD               	clrf	_startTime^(0+128)
  8609  08D3  01CE               	clrf	(_startTime+1)^(0+128)
  8610  08D4                     l6034:	
  8611  08D4  0020               	movlb	0	; select bank0
  8612  08D5  082F               	movf	_ProgSetTemp+1,w
  8613  08D6  0021               	movlb	1	; select bank1
  8614  08D7  064A               	xorwf	(_oldSetTemp+1)^(0+128),w
  8615  08D8  1D03               	skipz
  8616  08D9  28DE               	goto	u4605
  8617  08DA  0020               	movlb	0	; select bank0
  8618  08DB  082E               	movf	_ProgSetTemp,w
  8619  08DC  0021               	movlb	1	; select bank1
  8620  08DD  0649               	xorwf	_oldSetTemp^(0+128),w
  8621  08DE                     u4605:	
  8622  08DE  1903               	skipnz
  8623  08DF  28F5               	goto	l6044
  8624  08E0  3002               	movlw	2
  8625  08E1  0020               	movlb	0	; select bank0
  8626  08E2  024E               	subwf	_evalCntr,w
  8627  08E3  1C03               	skipc
  8628  08E4  28F5               	goto	l6044
  8629  08E5  01CE               	clrf	_evalCntr
  8630  08E6  0ACE               	incf	_evalCntr,f
  8631  08E7  082F               	movf	_ProgSetTemp+1,w
  8632  08E8  3A80               	xorlw	128
  8633  08E9  00F1               	movwf	??_REG_TaskSlow
  8634  08EA  082D               	movf	_currtemp+1,w
  8635  08EB  3A80               	xorlw	128
  8636  08EC  0271               	subwf	??_REG_TaskSlow,w
  8637  08ED  1D03               	skipz
  8638  08EE  28F1               	goto	u4625
  8639  08EF  082C               	movf	_currtemp,w
  8640  08F0  022E               	subwf	_ProgSetTemp,w
  8641  08F1                     u4625:	
  8642  08F1  1803               	skipnc
  8643  08F2  28F5               	goto	l6044
  8644  08F3  0020               	movlb	0	; select bank0
  8645  08F4  01D0               	clrf	_newPWM
  8646  08F5                     l6044:	
  8647  08F5  0020               	movlb	0	; select bank0
  8648  08F6  082F               	movf	_ProgSetTemp+1,w
  8649  08F7  0021               	movlb	1	; select bank1
  8650  08F8  00CA               	movwf	(_oldSetTemp+1)^(0+128)
  8651  08F9  0020               	movlb	0	; select bank0
  8652  08FA  082E               	movf	_ProgSetTemp,w
  8653  08FB  0021               	movlb	1	; select bank1
  8654  08FC  00C9               	movwf	_oldSetTemp^(0+128)
  8655  08FD  0020               	movlb	0	; select bank0
  8656  08FE  084E               	movf	_evalCntr,w
  8657  08FF  1D03               	btfss	3,2
  8658  0900  2920               	goto	l6068
  8659  0901  0021               	movlb	1	; select bank1
  8660  0902  0864               	movf	(_REG_PARAMS_RAM^(0+128)+1),w
  8661  0903  0020               	movlb	0	; select bank0
  8662  0904  00CE               	movwf	_evalCntr
  8663  0905  212C               	fcall	_REG_FZLogic
  8664  0906  184F               	btfsc	_sFlags,0
  8665  0907  01D0               	clrf	_newPWM
  8666  0908  3185  256E  3188   	fcall	_WIN_IsOpen
  8667  090B  3A00               	xorlw	0
  8668  090C  1D03               	btfss	3,2
  8669  090D  01D0               	clrf	_newPWM
  8670  090E  3006               	movlw	6
  8671  090F  0250               	subwf	_newPWM,w
  8672  0910  1803               	btfsc	3,0
  8673  0911  18CF               	btfsc	_sFlags,1
  8674  0912  2921               	goto	l6070
  8675  0913  14CF               	bsf	_sFlags,1
  8676  0914  082D               	movf	_currtemp+1,w
  8677  0915  0021               	movlb	1	; select bank1
  8678  0916  00CC               	movwf	(_startTemp+1)^(0+128)
  8679  0917  0020               	movlb	0	; select bank0
  8680  0918  082C               	movf	_currtemp,w
  8681  0919  0021               	movlb	1	; select bank1
  8682  091A  00CB               	movwf	_startTemp^(0+128)
  8683  091B  30E0               	movlw	224
  8684  091C  00CD               	movwf	_startTime^(0+128)
  8685  091D  3015               	movlw	21
  8686  091E  00CE               	movwf	(_startTime^(0+128)+1)
  8687  091F  2921               	goto	l6070
  8688  0920                     l6068:	
  8689  0920  03CE               	decf	_evalCntr,f
  8690  0921                     l6070:	
  8691  0921  0021               	movlb	1	; select bank1
  8692  0922  083B               	movf	(_ComTxData^(0+128)+8),w
  8693  0923  0020               	movlb	0	; select bank0
  8694  0924  0650               	xorwf	_newPWM,w
  8695  0925  1903               	skipnz
  8696  0926  0008               	return
  8697  0927  0850               	movf	_newPWM,w
  8698  0928  0021               	movlb	1	; select bank1
  8699  0929  00BB               	movwf	(_ComTxData^(0+128)+8)
  8700  092A  1420               	bsf	_ComData^(0+128),0
  8701  092B  0008               	return
  8702  092C                     __end_of_REG_TaskSlow:	
  8703  092C                     __ptext7:	
  8704 ;; *************** function _REG_FZLogic *****************
  8705 ;; Defined at:
  8706 ;;		line 104 in file "../app_TempReg.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  oldPwm          1    0        unsigned char 
  8711 ;;  NewDelta        1    0        char 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2, status,0
  8716 ;; Tracked objects:
  8717 ;;		On entry : 1F/0
  8718 ;;		On exit  : 1F/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;Total ram usage:        1 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:    1
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_REG_TaskSlow
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _REG_FZLogic
  8737  092C                     _REG_FZLogic:	
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _REG_FZLogic: [wreg+status,2+status,0]
  8741  092C  0851               	movf	_RTC_Status,w
  8742  092D  1903               	btfsc	3,2
  8743  092E  293C               	goto	l5120
  8744  092F  3006               	movlw	6
  8745  0930  0021               	movlb	1	; select bank1
  8746  0931  0241               	subwf	(_DateTime^(0+128)+5),w
  8747  0932  1C03               	skipc
  8748  0933  293C               	goto	l5120
  8749  0934  300A               	movlw	10
  8750  0935  0241               	subwf	(_DateTime^(0+128)+5),w
  8751  0936  1803               	skipnc
  8752  0937  293C               	goto	l5120
  8753  0938  0020               	movlb	0	; select bank0
  8754  0939  01AA               	clrf	_Delta
  8755  093A  01AB               	clrf	_Delta+1
  8756  093B  2945               	goto	l525
  8757  093C                     l5120:	
  8758  093C  0020               	movlb	0	; select bank0
  8759  093D  082F               	movf	_ProgSetTemp+1,w
  8760  093E  00AB               	movwf	_Delta+1
  8761  093F  082E               	movf	_ProgSetTemp,w
  8762  0940  00AA               	movwf	_Delta
  8763  0941  082C               	movf	_currtemp,w
  8764  0942  02AA               	subwf	_Delta,f
  8765  0943  082D               	movf	_currtemp+1,w
  8766  0944  3BAB               	subwfb	_Delta+1,f
  8767  0945                     l525:	
  8768  0945  082B               	movf	_Delta+1,w
  8769  0946  3A80               	xorlw	128
  8770  0947  00F0               	movwf	??_REG_FZLogic
  8771  0948  3080               	movlw	128
  8772  0949  0270               	subwf	??_REG_FZLogic,w
  8773  094A  1D03               	skipz
  8774  094B  294E               	goto	u3295
  8775  094C  3001               	movlw	1
  8776  094D  022A               	subwf	_Delta,w
  8777  094E                     u3295:	
  8778  094E  1C03               	skipc
  8779  094F  2954               	goto	l526
  8780  0950  3064               	movlw	100
  8781  0951  0020               	movlb	0	; select bank0
  8782  0952  00D0               	movwf	_newPWM
  8783  0953  0008               	return
  8784  0954                     l526:	
  8785  0954  0020               	movlb	0	; select bank0
  8786  0955  1BAB               	btfsc	_Delta+1,7
  8787  0956  01D0               	clrf	_newPWM
  8788  0957  0008               	return
  8789  0958                     __end_of_REG_FZLogic:	
  8790                           
  8791                           	psect	text8
  8792  1454                     __ptext8:	
  8793 ;; *************** function _REG_Init *****************
  8794 ;; Defined at:
  8795 ;;		line 52 in file "../app_TempReg.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2
  8804 ;; Tracked objects:
  8805 ;;		On entry : 1F/0
  8806 ;;		On exit  : 1F/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    1
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_main
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function _REG_Init
  8825  1454                     _REG_Init:	
  8826                           
  8827                           ;incstack = 0
  8828                           ; Regs used in _REG_Init: [wreg+status,2]
  8829  1454  300A               	movlw	10
  8830  1455  00CE               	movwf	_evalCntr
  8831  1456  0021               	movlb	1	; select bank1
  8832  1457  01C9               	clrf	_oldSetTemp^(0+128)
  8833  1458  01CA               	clrf	(_oldSetTemp+1)^(0+128)
  8834  1459  01CD               	clrf	_startTime^(0+128)
  8835  145A  01CE               	clrf	(_startTime+1)^(0+128)
  8836  145B  0020               	movlb	0	; select bank0
  8837  145C  104F               	bcf	_sFlags,0
  8838  145D  10CF               	bcf	_sFlags,1
  8839  145E  11CF               	bcf	_sFlags,3
  8840  145F  01D0               	clrf	_newPWM
  8841  1460  0008               	return
  8842  1461                     __end_of_REG_Init:	
  8843                           
  8844                           	psect	text9
  8845  14B2                     __ptext9:	
  8846 ;; *************** function _Ports_Init *****************
  8847 ;; Defined at:
  8848 ;;		line 75 in file "../main.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2
  8857 ;; Tracked objects:
  8858 ;;		On entry : B1F/0
  8859 ;;		On exit  : B1F/4
  8860 ;;		Unchanged: B00/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;Total ram usage:        0 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_main
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _Ports_Init
  8878  14B2                     _Ports_Init:	
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _Ports_Init: [wreg+status,2]
  8882  14B2  3040               	movlw	64
  8883  14B3  0022               	movlb	2	; select bank2
  8884  14B4  009D               	movwf	29	;volatile
  8885  14B5  3001               	movlw	1
  8886  14B6  0023               	movlb	3	; select bank3
  8887  14B7  008C               	movwf	12	;volatile
  8888  14B8  018D               	clrf	13	;volatile
  8889  14B9  30E3               	movlw	227
  8890  14BA  0021               	movlb	1	; select bank1
  8891  14BB  008D               	movwf	13	;volatile
  8892  14BC  302D               	movlw	45
  8893  14BD  008C               	movwf	12	;volatile
  8894  14BE  3048               	movlw	72
  8895  14BF  0095               	movwf	21	;volatile
  8896  14C0  3092               	movlw	146
  8897  14C1  0022               	movlb	2	; select bank2
  8898  14C2  008C               	movwf	12	;volatile
  8899  14C3  3008               	movlw	8
  8900  14C4  008D               	movwf	13	;volatile
  8901  14C5  30C0               	movlw	192
  8902  14C6  0024               	movlb	4	; select bank4
  8903  14C7  008D               	movwf	13	;volatile
  8904  14C8  0008               	return
  8905  14C9                     __end_of_Ports_Init:	
  8906                           
  8907                           	psect	text10
  8908  147D                     __ptext10:	
  8909 ;; *************** function _PRS_Task1s *****************
  8910 ;; Defined at:
  8911 ;;		line 120 in file "../../LIBC/PRESENCE/app_Presence.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 1F/0
  8922 ;;		On exit  : 1C/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    1
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_main
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           
  8940                           ;psect for function _PRS_Task1s
  8941  147D                     _PRS_Task1s:	
  8942                           
  8943                           ;incstack = 0
  8944                           ; Regs used in _PRS_Task1s: [wreg+status,2+status,0]
  8945  147D  0022               	movlb	2	; select bank2
  8946  147E  1C5D               	btfss	_RAM_PIRDATA^(0+256),0
  8947  147F  0008               	return
  8948  1480  0020               	movlb	0	; select bank0
  8949  1481  0828               	movf	_PresenceTime,w
  8950  1482  0429               	iorwf	_PresenceTime+1,w
  8951  1483  1903               	btfsc	3,2
  8952  1484  2C8A               	goto	l5924
  8953  1485  3001               	movlw	1
  8954  1486  02A8               	subwf	_PresenceTime,f
  8955  1487  3000               	movlw	0
  8956  1488  3BA9               	subwfb	_PresenceTime+1,f
  8957  1489  0008               	return
  8958  148A                     l5924:	
  8959  148A  0021               	movlb	1	; select bank1
  8960  148B  01B9               	clrf	(_ComTxData^(0+128)+6)
  8961  148C  0008               	return
  8962  148D                     __end_of_PRS_Task1s:	
  8963                           
  8964                           	psect	text11
  8965  16E0                     __ptext11:	
  8966 ;; *************** function _PRS_Task *****************
  8967 ;; Defined at:
  8968 ;;		line 59 in file "../../LIBC/PRESENCE/app_Presence.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 1F/0
  8979 ;;		On exit  : 1F/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    3
  8989 ;; This function calls:
  8990 ;;		_GetRIRLevel
  8991 ;;		_ReloadTime
  8992 ;; This function is called by:
  8993 ;;		_main
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           
  8998                           ;psect for function _PRS_Task
  8999  16E0                     _PRS_Task:	
  9000                           
  9001                           ;incstack = 0
  9002                           ; Regs used in _PRS_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9003  16E0  0022               	movlb	2	; select bank2
  9004  16E1  185D               	btfsc	_RAM_PIRDATA^(0+256),0
  9005  16E2  2F29               	goto	l5878
  9006  16E3  2EF3               	goto	l5844
  9007  16E4                     l5836:	
  9008  16E4  0828               	movf	_PresenceTime,w
  9009  16E5  0429               	iorwf	_PresenceTime+1,w
  9010  16E6  1D03               	btfss	3,2
  9011  16E7  0008               	return
  9012  16E8                     l5838:	
  9013  16E8  0020               	movlb	0	; select bank0
  9014  16E9  01B8               	clrf	_ePrs
  9015  16EA  0AB8               	incf	_ePrs,f
  9016  16EB  0008               	return
  9017  16EC                     l5840:	
  9018  16EC  2735  3196         	fcall	_GetRIRLevel
  9019  16EE  3A00               	xorlw	0
  9020  16EF  1903               	skipnz
  9021  16F0  2EF7               	goto	l1356
  9022  16F1  3001               	movlw	1
  9023  16F2                     L1:	
  9024  16F2  273E               	fcall	_ReloadTime
  9025  16F3                     l5844:	
  9026  16F3  3002               	movlw	2
  9027  16F4  0020               	movlb	0	; select bank0
  9028  16F5  00B8               	movwf	_ePrs
  9029  16F6  0008               	return
  9030  16F7                     l1356:	
  9031  16F7  0020               	movlb	0	; select bank0
  9032  16F8  1C39               	btfss	_pflags,0
  9033  16F9  0008               	return
  9034  16FA  3000               	movlw	0
  9035  16FB  1039               	bcf	_pflags,0
  9036  16FC  2EF2               	goto	L1
  9037  16FD                     l5852:	
  9038  16FD  2735  3196         	fcall	_GetRIRLevel
  9039  16FF  3A00               	xorlw	0
  9040  1700  1903               	skipnz
  9041  1701  2F04               	goto	l1360
  9042  1702  3001               	movlw	1
  9043  1703  2F09               	goto	L2
  9044  1704                     l1360:	
  9045  1704  0020               	movlb	0	; select bank0
  9046  1705  1C39               	btfss	_pflags,0
  9047  1706  2F0B               	goto	l5860
  9048  1707  3000               	movlw	0
  9049  1708  1039               	bcf	_pflags,0
  9050  1709                     L2:	
  9051  1709  273E  3196         	fcall	_ReloadTime
  9052  170B                     l5860:	
  9053  170B  0020               	movlb	0	; select bank0
  9054  170C  0828               	movf	_PresenceTime,w
  9055  170D  0429               	iorwf	_PresenceTime+1,w
  9056  170E  1D03               	btfss	3,2
  9057  170F  0008               	return
  9058  1710  300F               	movlw	15
  9059  1711  00B7               	movwf	_PresenceOff
  9060  1712  3003               	movlw	3
  9061  1713  00B8               	movwf	_ePrs
  9062  1714  0008               	return
  9063  1715                     l5864:	
  9064  1715  0837               	movf	_PresenceOff,w
  9065  1716  1903               	btfsc	3,2
  9066  1717  2F1A               	goto	l5868
  9067  1718                     l5866:	
  9068  1718  03B7               	decf	_PresenceOff,f
  9069  1719  0008               	return
  9070  171A                     l5868:	
  9071  171A  2735  3196         	fcall	_GetRIRLevel
  9072  171C  3A00               	xorlw	0
  9073  171D  1903               	skipnz
  9074  171E  2EE8               	goto	l5838
  9075  171F  309B               	movlw	155
  9076  1720  0020               	movlb	0	; select bank0
  9077  1721  00B7               	movwf	_PresenceOff
  9078  1722  3004               	movlw	4
  9079  1723  00B8               	movwf	_ePrs
  9080  1724  0008               	return
  9081  1725                     l5872:	
  9082  1725  0837               	movf	_PresenceOff,w
  9083  1726  1D03               	btfss	3,2
  9084  1727  2F18               	goto	l5866
  9085  1728  2EE8               	goto	l5838
  9086  1729                     l5878:	
  9087  1729  0020               	movlb	0	; select bank0
  9088  172A  0838               	movf	_ePrs,w
  9089                           
  9090                           ; Switch size 1, requested type "space"
  9091                           ; Number of cases is 5, Range of values is 0 to 4
  9092                           ; switch strategies available:
  9093                           ; Name         Instructions Cycles
  9094                           ; direct_byte           16     6 (fixed)
  9095                           ; simple_byte           16     9 (average)
  9096                           ; jumptable            260     6 (fixed)
  9097                           ;	Chosen strategy is direct_byte
  9098  172B  0084               	movwf	4
  9099  172C  3005               	movlw	5
  9100  172D  0204               	subwf	4,w
  9101  172E  1803               	skipnc
  9102  172F  2EE8               	goto	l5838
  9103  1730  3193               	movlp	high S7616
  9104  1731  3504               	lslf	4,w
  9105  1732  3E48               	addlw	low S7616
  9106  1733  0082               	movwf	2
  9107  1734  0008               	return
  9108  1735                     __end_of_PRS_Task:	
  9109  1735                     __ptext13:	
  9110 ;; *************** function _GetRIRLevel *****************
  9111 ;; Defined at:
  9112 ;;		line 51 in file "../../LIBC/PRESENCE/app_Presence.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;		None
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      unsigned char 
  9119 ;; Registers used:
  9120 ;;		wreg, pclath, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : 1F/0
  9123 ;;		On exit  : 1D/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;Total ram usage:        0 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    2
  9133 ;; This function calls:
  9134 ;;		_IO_GetPIRLevel
  9135 ;; This function is called by:
  9136 ;;		_PRS_Task
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           
  9141                           ;psect for function _GetRIRLevel
  9142  1735                     _GetRIRLevel:	
  9143                           
  9144                           ;incstack = 0
  9145                           ; Regs used in _GetRIRLevel: [wreg+pclath+cstack]
  9146  1735  0022               	movlb	2	; select bank2
  9147  1736  1CDD               	btfss	_RAM_PIRDATA^(0+256),1
  9148  1737  3400               	retlw	0
  9149  1738  2760  3196         	fcall	_IO_GetPIRLevel
  9150  173A  3A00               	xorlw	0
  9151  173B  1D03               	btfss	3,2
  9152  173C  3401               	retlw	1
  9153  173D  3400               	retlw	0
  9154  173E                     __end_of_GetRIRLevel:	
  9155  173E                     __ptext12:	
  9156 ;; *************** function _ReloadTime *****************
  9157 ;; Defined at:
  9158 ;;		line 38 in file "../../LIBC/PRESENCE/app_Presence.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  bLocal          1    wreg     unsigned char 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;  bLocal          1    0[COMMON] unsigned char 
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0
  9167 ;; Tracked objects:
  9168 ;;		On entry : 1D/0
  9169 ;;		On exit  : 1C/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;Total ram usage:        1 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_PRS_Task
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function _ReloadTime
  9188  173E                     _ReloadTime:	
  9189                           
  9190                           ;incstack = 0
  9191                           ; Regs used in _ReloadTime: [wreg+status,2+status,0]
  9192  173E  00F0               	movwf	ReloadTime@bLocal
  9193  173F  3020               	movlw	32
  9194  1740  0021               	movlb	1	; select bank1
  9195  1741  023E               	subwf	(_DateTime^(0+128)+2),w
  9196  1742  1803               	skipnc
  9197  1743  2F4B               	goto	l5468
  9198  1744  0022               	movlb	2	; select bank2
  9199  1745  0863               	movf	((_RAM_PIRDATA+1)^(0+256)+5),w
  9200  1746  0020               	movlb	0	; select bank0
  9201  1747  00A9               	movwf	_PresenceTime+1
  9202  1748  0022               	movlb	2	; select bank2
  9203  1749  0862               	movf	(_RAM_PIRDATA^(0+256)+5),w
  9204  174A  2F51               	goto	L3
  9205  174B                     l5468:	
  9206  174B  0022               	movlb	2	; select bank2
  9207  174C  0865               	movf	((_RAM_PIRDATA+1)^(0+256)+7),w
  9208  174D  0020               	movlb	0	; select bank0
  9209  174E  00A9               	movwf	_PresenceTime+1
  9210  174F  0022               	movlb	2	; select bank2
  9211  1750  0864               	movf	(_RAM_PIRDATA^(0+256)+7),w
  9212  1751                     L3:	
  9213  1751  0020               	movlb	0	; select bank0
  9214  1752  00A8               	movwf	_PresenceTime
  9215  1753  1C70               	btfss	ReloadTime@bLocal,0
  9216  1754  0008               	return
  9217  1755  0022               	movlb	2	; select bank2
  9218  1756  1CDD               	btfss	_RAM_PIRDATA^(0+256),1
  9219  1757  0008               	return
  9220  1758  0021               	movlb	1	; select bank1
  9221  1759  0339               	decf	(_ComTxData^(0+128)+6),w
  9222  175A  1903               	btfsc	3,2
  9223  175B  0008               	return
  9224  175C  01B9               	clrf	(_ComTxData^(0+128)+6)
  9225  175D  0AB9               	incf	(_ComTxData^(0+128)+6),f
  9226  175E  1420               	bsf	_ComData^(0+128),0
  9227  175F  0008               	return
  9228  1760                     __end_of_ReloadTime:	
  9229  1760                     __ptext14:	
  9230 ;; *************** function _IO_GetPIRLevel *****************
  9231 ;; Defined at:
  9232 ;;		line 53 in file "../drv_io.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      unsigned char 
  9239 ;; Registers used:
  9240 ;;		wreg
  9241 ;; Tracked objects:
  9242 ;;		On entry : 1F/2
  9243 ;;		On exit  : 1F/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_GetRIRLevel
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           
  9261                           ;psect for function _IO_GetPIRLevel
  9262  1760                     _IO_GetPIRLevel:	
  9263                           
  9264                           ;incstack = 0
  9265                           ; Regs used in _IO_GetPIRLevel: [wreg]
  9266  1760  0020               	movlb	0	; select bank0
  9267  1761  1C30               	btfss	_PIRFlags,0
  9268  1762  3400               	retlw	0
  9269  1763  3001               	movlw	1
  9270  1764  1030               	bcf	_PIRFlags,0
  9271  1765  0008               	return
  9272  1766                     __end_of_IO_GetPIRLevel:	
  9273                           
  9274                           	psect	swtext2
  9275  1348                     __pswtext2:	
  9276  1348                     S7616:	
  9277  1348  3196  2EE4         	ljmp	l5836
  9278  134A  3196  2EEC         	ljmp	l5840
  9279  134C  3196  2EFD         	ljmp	l5852
  9280  134E  3197  2F15         	ljmp	l5864
  9281  1350  3197  2F25         	ljmp	l5872
  9282                           
  9283                           	psect	text15
  9284  0800                     __ptext15:	
  9285 ;; *************** function _PRS_Init *****************
  9286 ;; Defined at:
  9287 ;;		line 27 in file "../../LIBC/PRESENCE/app_Presence.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;		None
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;		None
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      void 
  9294 ;; Registers used:
  9295 ;;		wreg, status,2
  9296 ;; Tracked objects:
  9297 ;;		On entry : 1F/0
  9298 ;;		On exit  : 1F/1
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;Total ram usage:        0 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; Hardware stack levels required when called:    1
  9308 ;; This function calls:
  9309 ;;		Nothing
  9310 ;; This function is called by:
  9311 ;;		_main
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           
  9316                           ;psect for function _PRS_Init
  9317  0800                     _PRS_Init:	
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in _PRS_Init: [wreg+status,2]
  9321  0800  3014               	movlw	20
  9322  0801  00A8               	movwf	_PresenceTime
  9323  0802  01A9               	clrf	_PresenceTime+1
  9324  0803  1039               	bcf	_pflags,0
  9325  0804  01B8               	clrf	_ePrs
  9326  0805  0021               	movlb	1	; select bank1
  9327  0806  01B9               	clrf	(_ComTxData^(0+128)+6)
  9328  0807  0008               	return
  9329  0808                     __end_of_PRS_Init:	
  9330                           
  9331                           	psect	text21
  9332  1678                     __ptext21:	
  9333 ;; *************** function _NVM_Init *****************
  9334 ;; Defined at:
  9335 ;;		line 104 in file "../../LIBC/NVM/svc_nvm.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 1F/2
  9346 ;;		On exit  : 1F/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    3
  9356 ;; This function calls:
  9357 ;;		_PrepBlockData
  9358 ;;		_ReadBlock
  9359 ;; This function is called by:
  9360 ;;		_main
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           
  9365                           ;psect for function _NVM_Init
  9366  1678                     _NVM_Init:	
  9367                           
  9368                           ;incstack = 0
  9369                           ; Regs used in _NVM_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9370  1678  0020               	movlb	0	; select bank0
  9371  1679  01BF               	clrf	_CurrentBlock
  9372  167A                     l7276:	
  9373  167A  3009               	movlw	9
  9374  167B  023F               	subwf	_CurrentBlock,w
  9375  167C  1803               	btfsc	3,0
  9376  167D  2E83               	goto	l7286
  9377  167E  2688  3196         	fcall	_ReadBlock
  9378  1680  0020               	movlb	0	; select bank0
  9379  1681  0ABF               	incf	_CurrentBlock,f
  9380  1682  2E7A               	goto	l7276
  9381  1683                     l7286:	
  9382  1683  01BF               	clrf	_CurrentBlock
  9383  1684  318E  26D8         	fcall	_PrepBlockData
  9384  1686  01BC               	clrf	_NVMState
  9385  1687  0008               	return
  9386  1688                     __end_of_NVM_Init:	
  9387  1688                     __ptext75:	
  9388 ;; *************** function _ReadBlock *****************
  9389 ;; Defined at:
  9390 ;;		line 79 in file "../../LIBC/NVM/svc_nvm.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 1F/0
  9401 ;;		On exit  : 1E/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;Total ram usage:        1 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    2
  9411 ;; This function calls:
  9412 ;;		_PrepBlockData
  9413 ;;		_Read_Eep
  9414 ;; This function is called by:
  9415 ;;		_NVM_Init
  9416 ;;		_NVM_Task
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           
  9421                           ;psect for function _ReadBlock
  9422  1688                     _ReadBlock:	
  9423  1688                     l6330:	
  9424                           ;incstack = 0
  9425                           ; Regs used in _ReadBlock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9426                           
  9427  1688  318E  26D8  3196   	fcall	_PrepBlockData
  9428  168B  2E9F               	goto	l6340
  9429  168C                     l6332:	
  9430  168C  083D               	movf	_addr,w
  9431  168D  318D  250C  3196   	fcall	_Read_Eep
  9432  1690  00F3               	movwf	??_ReadBlock
  9433  1691  26DA  3196         	fcall	PL10	;call to abstracted procedure
  9434  1693  0873               	movf	??_ReadBlock,w
  9435  1694  0081               	movwf	1
  9436  1695  0826               	movf	_pRam,w
  9437  1696  0086               	movwf	6
  9438  1697  0827               	movf	_pRam+1,w
  9439  1698  0087               	movwf	7
  9440  1699  0801               	movf	1,w
  9441  169A  07C0               	addwf	_CSm,f
  9442  169B  0ABD               	incf	_addr,f
  9443  169C  0AA6               	incf	_pRam,f
  9444  169D  1903               	skipnz
  9445  169E  0AA7               	incf	_pRam+1,f
  9446  169F                     l6340:	
  9447  169F  03BE               	decf	_ByteCount,f
  9448  16A0  0F3E               	incfsz	_ByteCount,w
  9449  16A1  2E8C               	goto	l6332
  9450  16A2  083D               	movf	_addr,w
  9451  16A3  318D  250C  3196   	fcall	_Read_Eep
  9452  16A6  0020               	movlb	0	; select bank0
  9453  16A7  0640               	xorwf	_CSm,w
  9454  16A8  1D03               	skipz
  9455  16A9  2EAE               	goto	l6346
  9456  16AA  26D4               	fcall	PL8	;call to abstracted procedure
  9457  16AB  0181               	clrf	1
  9458  16AC  0A81               	incf	1,f
  9459  16AD  0008               	return
  9460  16AE                     l6346:	
  9461  16AE  26D4               	fcall	PL8	;call to abstracted procedure
  9462  16AF  3002               	movlw	2
  9463  16B0  0081               	movwf	1
  9464  16B1  318E  26D8  3196   	fcall	_PrepBlockData
  9465  16B4  0021               	movlb	1	; select bank1
  9466  16B5  0847               	movf	_pRom^(0+128),w
  9467  16B6  0448               	iorwf	(_pRom+1)^(0+128),w
  9468  16B7  1903               	btfsc	3,2
  9469  16B8  0008               	return
  9470  16B9  2ECC               	goto	l6360
  9471  16BA                     l6354:	
  9472  16BA  0021               	movlb	1	; select bank1
  9473  16BB  0847               	movf	_pRom^(0+128),w
  9474  16BC  0084               	movwf	4
  9475  16BD  0848               	movf	(_pRom+1)^(0+128),w
  9476  16BE  0085               	movwf	5
  9477  16BF  0800               	movf	0,w	;code access
  9478  16C0  00F3               	movwf	??_ReadBlock
  9479  16C1  26DA  3196         	fcall	PL10	;call to abstracted procedure
  9480  16C3  0873               	movf	??_ReadBlock,w
  9481  16C4  0081               	movwf	1
  9482  16C5  0AA6               	incf	_pRam,f
  9483  16C6  1903               	skipnz
  9484  16C7  0AA7               	incf	_pRam+1,f
  9485  16C8  0021               	movlb	1	; select bank1
  9486  16C9  0AC7               	incf	_pRom^(0+128),f
  9487  16CA  1903               	skipnz
  9488  16CB  0AC8               	incf	(_pRom+1)^(0+128),f
  9489  16CC                     l6360:	
  9490  16CC  0020               	movlb	0	; select bank0
  9491  16CD  03BE               	decf	_ByteCount,f
  9492  16CE  0F3E               	incfsz	_ByteCount,w
  9493  16CF  2EBA               	goto	l6354
  9494  16D0  26D4               	fcall	PL8	;call to abstracted procedure
  9495  16D1  3003               	movlw	3
  9496  16D2  0081               	movwf	1
  9497  16D3  0008               	return
  9498  16D4                     __end_of_ReadBlock:	
  9499  16D4                     PL8:	
  9500  16D4  083F               	movf	_CurrentBlock,w
  9501  16D5  3E20               	addlw	(low (_NVM_BlockStatus| (0+256)))& (0+255)
  9502  16D6  0086               	movwf	6
  9503  16D7  3001               	movlw	1	; select bank2/3
  9504  16D8  0087               	movwf	7
  9505  16D9  0008               	return
  9506  16DA                     __end_ofPL8:	
  9507  16DA                     PL10:	
  9508  16DA  0020               	movlb	0	; select bank0
  9509  16DB  0826               	movf	_pRam,w
  9510  16DC  0086               	movwf	6
  9511  16DD  0827               	movf	_pRam+1,w
  9512  16DE  0087               	movwf	7
  9513  16DF  0008               	return
  9514  16E0                     __end_ofPL10:	
  9515                           
  9516                           	psect	text44
  9517  038E                     __ptext44:	
  9518 ;; *************** function _LCD_LargeDot *****************
  9519 ;; Defined at:
  9520 ;;		line 238 in file "../drv_lcd.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;		None
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;		None
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      void 
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0, pclath, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 1F/2
  9531 ;;		On exit  : 1F/2
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    2
  9541 ;; This function calls:
  9542 ;;		_SPI_HF_Put
  9543 ;; This function is called by:
  9544 ;;		_DrawLargeTemp
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           
  9549                           ;psect for function _LCD_LargeDot
  9550  038E                     _LCD_LargeDot:	
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _LCD_LargeDot: [wreg+status,2+status,0+pclath+cstack]
  9554  038E  138C               	bcf	12,7	;volatile
  9555  038F  30E0               	movlw	224
  9556  0390  26DA  3183         	fcall	_SPI_HF_Put
  9557  0392  30E0               	movlw	224
  9558  0393  26DA  3183         	fcall	_SPI_HF_Put
  9559  0395  30E0               	movlw	224
  9560  0396  26DA               	fcall	_SPI_HF_Put
  9561  0397  0022               	movlb	2	; select bank2
  9562  0398  178C               	bsf	12,7	;volatile
  9563  0399  0008               	return
  9564  039A                     __end_of_LCD_LargeDot:	
  9565  039A                     __ptext26:	
  9566 ;; *************** function _MNU_Task *****************
  9567 ;; Defined at:
  9568 ;;		line 273 in file "../app_Menu.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;		None
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;		None
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 1F/0
  9579 ;;		On exit  : 1F/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;Total ram usage:        0 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:    6
  9589 ;; This function calls:
  9590 ;;		_DrawClrLastLines
  9591 ;;		_DrawLargeHum
  9592 ;;		_DrawLargeTemp
  9593 ;;		_DrawLargeTime
  9594 ;;		_DrawRegPower
  9595 ;;		_DrawSetTempText
  9596 ;;		_DrawTimeDate
  9597 ;; This function is called by:
  9598 ;;		_main
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           
  9603                           ;psect for function _MNU_Task
  9604  039A                     _MNU_Task:	
  9605                           
  9606                           ;incstack = 0
  9607                           ; Regs used in _MNU_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9608  039A  2C00               	goto	l7472
  9609  039B                     l7410:	
  9610  039B  2419  3183         	fcall	_DrawTimeDate
  9611  039D  2C08               	goto	l7474
  9612  039E                     l7412:	
  9613  039E  0845               	movf	_u8editmode,w
  9614  039F  1903               	btfsc	3,2
  9615  03A0  2BA8               	goto	l741
  9616  03A1  082F               	movf	_ProgSetTemp+1,w
  9617  03A2  00FB               	movwf	DrawLargeTemp@t+1
  9618  03A3  082E               	movf	_ProgSetTemp,w
  9619  03A4  00FA               	movwf	DrawLargeTemp@t
  9620  03A5  25F5  3183         	fcall	_DrawLargeTemp
  9621  03A7  2C08               	goto	l7474
  9622  03A8                     l741:	
  9623  03A8  1842               	btfsc	_TempHumFlag,0
  9624  03A9  2BAC               	goto	l7418
  9625  03AA  0F49               	incfsz	_currhum,w
  9626  03AB  2BB3               	goto	l7420
  9627  03AC                     l7418:	
  9628  03AC  082D               	movf	_currtemp+1,w
  9629  03AD  00FB               	movwf	DrawLargeTemp@t+1
  9630  03AE  082C               	movf	_currtemp,w
  9631  03AF  00FA               	movwf	DrawLargeTemp@t
  9632  03B0  25F5  3183         	fcall	_DrawLargeTemp
  9633  03B2  2C08               	goto	l7474
  9634  03B3                     l7420:	
  9635  03B3  258C  3183         	fcall	_DrawLargeHum
  9636  03B5  2C08               	goto	l7474
  9637  03B6                     l747:	
  9638  03B6  1842               	btfsc	_TempHumFlag,0
  9639  03B7  2BBD               	goto	l7426
  9640  03B8  0845               	movf	_u8editmode,w
  9641  03B9  1D03               	btfss	3,2
  9642  03BA  2BBD               	goto	l7426
  9643  03BB  0F49               	incfsz	_currhum,w
  9644  03BC  2C08               	goto	l7474
  9645  03BD                     l7426:	
  9646  03BD  24EE  3183         	fcall	_DrawRegPower
  9647  03BF  2C08               	goto	l7474
  9648  03C0                     l7428:	
  9649  03C0  24DA  3183         	fcall	_DrawSetTempText
  9650  03C2  0020               	movlb	0	; select bank0
  9651  03C3  0845               	movf	_u8editmode,w
  9652  03C4  1903               	btfsc	3,2
  9653  03C5  2BC9               	goto	l7434
  9654  03C6  01C4               	clrf	_u8menuswitch
  9655  03C7  0AC4               	incf	_u8menuswitch,f
  9656  03C8  2C08               	goto	l7474
  9657  03C9                     l7434:	
  9658  03C9  0BC4               	decfsz	_u8menuswitch,f
  9659  03CA  2C08               	goto	l7474
  9660  03CB  3041               	movlw	65
  9661  03CC  00C4               	movwf	_u8menuswitch
  9662  03CD  240F  3183         	fcall	_DrawClrLastLines
  9663  03CF  24DA  3183         	fcall	_DrawSetTempText
  9664  03D1  0020               	movlb	0	; select bank0
  9665  03D2  01C8               	clrf	_Menu
  9666  03D3  0AC8               	incf	_Menu,f
  9667  03D4  2C08               	goto	l7474
  9668  03D5                     l7448:	
  9669  03D5  0847               	movf	_Line,w
  9670                           
  9671                           ; Switch size 1, requested type "space"
  9672                           ; Number of cases is 4, Range of values is 0 to 3
  9673                           ; switch strategies available:
  9674                           ; Name         Instructions Cycles
  9675                           ; simple_byte           13     7 (average)
  9676                           ; direct_byte           14     6 (fixed)
  9677                           ; jumptable            260     6 (fixed)
  9678                           ;	Chosen strategy is simple_byte
  9679  03D6  3A00               	xorlw	0	; case 0
  9680  03D7  1903               	skipnz
  9681  03D8  2B9B               	goto	l7410
  9682  03D9  3A01               	xorlw	1	; case 1
  9683  03DA  1903               	skipnz
  9684  03DB  2B9E               	goto	l7412
  9685  03DC  3A03               	xorlw	3	; case 2
  9686  03DD  1903               	skipnz
  9687  03DE  2BB6               	goto	l747
  9688  03DF  3A01               	xorlw	1	; case 3
  9689  03E0  1903               	skipnz
  9690  03E1  2BC0               	goto	l7428
  9691  03E2  2C08               	goto	l7474
  9692  03E3  2C08               	goto	l7474
  9693  03E4                     l7452:	
  9694  03E4  25B6  3183         	fcall	_DrawLargeTime
  9695  03E6  2C08               	goto	l7474
  9696  03E7                     l7454:	
  9697  03E7  0BC4               	decfsz	_u8menuswitch,f
  9698  03E8  2C08               	goto	l7474
  9699  03E9  3023               	movlw	35
  9700  03EA  00C4               	movwf	_u8menuswitch
  9701  03EB  240F  3183         	fcall	_DrawClrLastLines
  9702  03ED  0020               	movlb	0	; select bank0
  9703  03EE  3001               	movlw	1
  9704  03EF  01C8               	clrf	_Menu
  9705  03F0  06C2               	xorwf	_TempHumFlag,f
  9706  03F1  2C08               	goto	l7474
  9707  03F2                     l7468:	
  9708  03F2  0847               	movf	_Line,w
  9709                           
  9710                           ; Switch size 1, requested type "space"
  9711                           ; Number of cases is 4, Range of values is 0 to 3
  9712                           ; switch strategies available:
  9713                           ; Name         Instructions Cycles
  9714                           ; simple_byte           13     7 (average)
  9715                           ; direct_byte           14     6 (fixed)
  9716                           ; jumptable            260     6 (fixed)
  9717                           ;	Chosen strategy is simple_byte
  9718  03F3  3A00               	xorlw	0	; case 0
  9719  03F4  1903               	skipnz
  9720  03F5  2B9B               	goto	l7410
  9721  03F6  3A01               	xorlw	1	; case 1
  9722  03F7  1903               	skipnz
  9723  03F8  2BE4               	goto	l7452
  9724  03F9  3A03               	xorlw	3	; case 2
  9725  03FA  1903               	skipnz
  9726  03FB  2C08               	goto	l7474
  9727  03FC  3A01               	xorlw	1	; case 3
  9728  03FD  1903               	skipnz
  9729  03FE  2BE7               	goto	l7454
  9730  03FF  2C08               	goto	l7474
  9731  0400                     l7472:	
  9732  0400  0848               	movf	_Menu,w
  9733                           
  9734                           ; Switch size 1, requested type "space"
  9735                           ; Number of cases is 2, Range of values is 0 to 1
  9736                           ; switch strategies available:
  9737                           ; Name         Instructions Cycles
  9738                           ; simple_byte            7     4 (average)
  9739                           ; direct_byte           10     6 (fixed)
  9740                           ; jumptable            260     6 (fixed)
  9741                           ;	Chosen strategy is simple_byte
  9742  0401  3A00               	xorlw	0	; case 0
  9743  0402  1903               	skipnz
  9744  0403  2BD5               	goto	l7448
  9745  0404  3A01               	xorlw	1	; case 1
  9746  0405  1903               	skipnz
  9747  0406  2BF2               	goto	l7468
  9748  0407  2C08               	goto	l7474
  9749  0408                     l7474:	
  9750  0408  0020               	movlb	0	; select bank0
  9751  0409  3004               	movlw	4
  9752  040A  0AC7               	incf	_Line,f
  9753  040B  0247               	subwf	_Line,w
  9754  040C  1803               	btfsc	3,0
  9755  040D  01C7               	clrf	_Line
  9756  040E  0008               	return
  9757  040F                     __end_of_MNU_Task:	
  9758  040F                     __ptext37:	
  9759 ;; *************** function _DrawClrLastLines *****************
  9760 ;; Defined at:
  9761 ;;		line 45 in file "../app_Menu.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 1F/0
  9772 ;;		On exit  : 1F/2
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    4
  9782 ;; This function calls:
  9783 ;;		_LCD_ClearLine
  9784 ;;		_LCD_XY
  9785 ;; This function is called by:
  9786 ;;		_DrawLargeTime
  9787 ;;		_MNU_Task
  9788 ;;		_MNU_TaskButton
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _DrawClrLastLines
  9794  040F                     _DrawClrLastLines:	
  9795  040F                     l6782:	
  9796                           ;incstack = 0
  9797                           ; Regs used in _DrawClrLastLines: [wreg+status,2+status,0+pclath+cstack]
  9798                           
  9799  040F  3003               	movlw	3
  9800  0410  00F2               	movwf	LCD_XY@y
  9801  0411  3000               	movlw	0
  9802  0412  264B  3183         	fcall	_LCD_XY
  9803  0414  24CC  3183         	fcall	_LCD_ClearLine
  9804  0416  24CC  3183         	fcall	_LCD_ClearLine
  9805  0418  2CCC               	ljmp	l6496
  9806  0419                     __end_of_DrawClrLastLines:	
  9807  0419                     __ptext27:	
  9808 ;; *************** function _DrawTimeDate *****************
  9809 ;; Defined at:
  9810 ;;		line 52 in file "../app_Menu.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9819 ;; Tracked objects:
  9820 ;;		On entry : 1F/0
  9821 ;;		On exit  : 1C/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    4
  9831 ;; This function calls:
  9832 ;;		_LCD_BCDNumber
  9833 ;;		_LCD_Char
  9834 ;;		_LCD_ClearLine
  9835 ;;		_LCD_String
  9836 ;;		_LCD_XY
  9837 ;; This function is called by:
  9838 ;;		_MNU_Task
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           
  9843                           ;psect for function _DrawTimeDate
  9844  0419                     _DrawTimeDate:	
  9845                           
  9846                           ;incstack = 0
  9847                           ; Regs used in _DrawTimeDate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9848  0419  3000               	movlw	0
  9849  041A  01F2               	clrf	LCD_XY@y
  9850  041B  264B  3183         	fcall	_LCD_XY
  9851  041D  0020               	movlb	0	; select bank0
  9852  041E  0851               	movf	_RTC_Status,w
  9853  041F  1903               	btfsc	3,2
  9854  0420  2CA0               	goto	l7002
  9855  0421  01FA               	clrf	LCD_BCDNumber@bLzero
  9856  0422  0021               	movlb	1	; select bank1
  9857  0423  083E               	movf	(_DateTime^(0+128)+2),w
  9858  0424  24B4  3183         	fcall	_LCD_BCDNumber
  9859  0426  303A               	movlw	58
  9860  0427  26E6  3183         	fcall	_LCD_Char
  9861  0429  01FA               	clrf	LCD_BCDNumber@bLzero
  9862  042A  0AFA               	incf	LCD_BCDNumber@bLzero,f
  9863  042B  0021               	movlb	1	; select bank1
  9864  042C  083D               	movf	(_DateTime^(0+128)+1),w
  9865  042D  24B4  3183         	fcall	_LCD_BCDNumber
  9866  042F  30A5               	movlw	low (STR_1| (0+32768))
  9867  0430  00FA               	movwf	LCD_String@characters
  9868  0431  3098               	movlw	high (STR_1| (0+32768))
  9869  0432  00FB               	movwf	LCD_String@characters+1
  9870  0433  24A2  3183         	fcall	_LCD_String
  9871  0435  01FA               	clrf	LCD_BCDNumber@bLzero
  9872  0436  0021               	movlb	1	; select bank1
  9873  0437  0840               	movf	(_DateTime^(0+128)+4),w
  9874  0438  24B4  3183         	fcall	_LCD_BCDNumber
  9875  043A  3020               	movlw	32
  9876  043B  26E6  3183         	fcall	_LCD_Char
  9877  043D  0021               	movlb	1	; select bank1
  9878  043E  0841               	movf	(_DateTime^(0+128)+5),w
  9879                           
  9880                           ; Switch size 1, requested type "space"
  9881                           ; Number of cases is 12, Range of values is 1 to 18
  9882                           ; switch strategies available:
  9883                           ; Name         Instructions Cycles
  9884                           ; simple_byte           37    19 (average)
  9885                           ; direct_byte           45     9 (fixed)
  9886                           ; jumptable            263     9 (fixed)
  9887                           ;	Chosen strategy is simple_byte
  9888  043F  3A01               	xorlw	1	; case 1
  9889  0440  1903               	skipnz
  9890  0441  2C64               	goto	l6974
  9891  0442  3A03               	xorlw	3	; case 2
  9892  0443  1903               	skipnz
  9893  0444  2C69               	goto	l6976
  9894  0445  3A01               	xorlw	1	; case 3
  9895  0446  1903               	skipnz
  9896  0447  2C6E               	goto	l6978
  9897  0448  3A07               	xorlw	7	; case 4
  9898  0449  1903               	skipnz
  9899  044A  2C73               	goto	l6980
  9900  044B  3A01               	xorlw	1	; case 5
  9901  044C  1903               	skipnz
  9902  044D  2C78               	goto	l6982
  9903  044E  3A03               	xorlw	3	; case 6
  9904  044F  1903               	skipnz
  9905  0450  2C7D               	goto	l6984
  9906  0451  3A01               	xorlw	1	; case 7
  9907  0452  1903               	skipnz
  9908  0453  2C82               	goto	l6986
  9909  0454  3A0F               	xorlw	15	; case 8
  9910  0455  1903               	skipnz
  9911  0456  2C87               	goto	l6988
  9912  0457  3A01               	xorlw	1	; case 9
  9913  0458  1903               	skipnz
  9914  0459  2C8C               	goto	l6990
  9915  045A  3A19               	xorlw	25	; case 16
  9916  045B  1903               	skipnz
  9917  045C  2C91               	goto	l6992
  9918  045D  3A01               	xorlw	1	; case 17
  9919  045E  1903               	skipnz
  9920  045F  2C96               	goto	l6994
  9921  0460  3A03               	xorlw	3	; case 18
  9922  0461  1903               	skipnz
  9923  0462  2C9B               	goto	l6996
  9924  0463  2CA1               	goto	l691
  9925  0464                     l6974:	
  9926  0464  30B9               	movlw	low (STR_2| (0+32768))
  9927  0465  00FA               	movwf	LCD_String@characters
  9928  0466  3098               	movlw	high (STR_2| (0+32768))
  9929  0467  00FB               	movwf	LCD_String@characters+1
  9930  0468  2CA2               	ljmp	l6758
  9931  0469                     l6976:	
  9932  0469  30A9               	movlw	low (STR_3| (0+32768))
  9933  046A  00FA               	movwf	LCD_String@characters
  9934  046B  3098               	movlw	high (STR_3| (0+32768))
  9935  046C  00FB               	movwf	LCD_String@characters+1
  9936  046D  2CA2               	ljmp	l6758
  9937  046E                     l6978:	
  9938  046E  30C5               	movlw	low (STR_4| (0+32768))
  9939  046F  00FA               	movwf	LCD_String@characters
  9940  0470  3098               	movlw	high (STR_4| (0+32768))
  9941  0471  00FB               	movwf	LCD_String@characters+1
  9942  0472  2CA2               	ljmp	l6758
  9943  0473                     l6980:	
  9944  0473  30C9               	movlw	low (STR_5| (0+32768))
  9945  0474  00FA               	movwf	LCD_String@characters
  9946  0475  3098               	movlw	high (STR_5| (0+32768))
  9947  0476  00FB               	movwf	LCD_String@characters+1
  9948  0477  2CA2               	ljmp	l6758
  9949  0478                     l6982:	
  9950  0478  30D5               	movlw	low (STR_6| (0+32768))
  9951  0479  00FA               	movwf	LCD_String@characters
  9952  047A  3098               	movlw	high (STR_6| (0+32768))
  9953  047B  00FB               	movwf	LCD_String@characters+1
  9954  047C  2CA2               	ljmp	l6758
  9955  047D                     l6984:	
  9956  047D  30BD               	movlw	low (STR_7| (0+32768))
  9957  047E  00FA               	movwf	LCD_String@characters
  9958  047F  3098               	movlw	high (STR_7| (0+32768))
  9959  0480  00FB               	movwf	LCD_String@characters+1
  9960  0481  2CA2               	ljmp	l6758
  9961  0482                     l6986:	
  9962  0482  30B5               	movlw	low (STR_8| (0+32768))
  9963  0483  00FA               	movwf	LCD_String@characters
  9964  0484  3098               	movlw	high (STR_8| (0+32768))
  9965  0485  00FB               	movwf	LCD_String@characters+1
  9966  0486  2CA2               	ljmp	l6758
  9967  0487                     l6988:	
  9968  0487  30B1               	movlw	low (STR_9| (0+32768))
  9969  0488  00FA               	movwf	LCD_String@characters
  9970  0489  3098               	movlw	high (STR_9| (0+32768))
  9971  048A  00FB               	movwf	LCD_String@characters+1
  9972  048B  2CA2               	ljmp	l6758
  9973  048C                     l6990:	
  9974  048C  30C1               	movlw	low (STR_10| (0+32768))
  9975  048D  00FA               	movwf	LCD_String@characters
  9976  048E  3098               	movlw	high (STR_10| (0+32768))
  9977  048F  00FB               	movwf	LCD_String@characters+1
  9978  0490  2CA2               	ljmp	l6758
  9979  0491                     l6992:	
  9980  0491  30CD               	movlw	low (STR_11| (0+32768))
  9981  0492  00FA               	movwf	LCD_String@characters
  9982  0493  3098               	movlw	high (STR_11| (0+32768))
  9983  0494  00FB               	movwf	LCD_String@characters+1
  9984  0495  2CA2               	ljmp	l6758
  9985  0496                     l6994:	
  9986  0496  30D1               	movlw	low (STR_12| (0+32768))
  9987  0497  00FA               	movwf	LCD_String@characters
  9988  0498  3098               	movlw	high (STR_12| (0+32768))
  9989  0499  00FB               	movwf	LCD_String@characters+1
  9990  049A  2CA2               	ljmp	l6758
  9991  049B                     l6996:	
  9992  049B  30AD               	movlw	low (STR_13| (0+32768))
  9993  049C  00FA               	movwf	LCD_String@characters
  9994  049D  3098               	movlw	high (STR_13| (0+32768))
  9995  049E  00FB               	movwf	LCD_String@characters+1
  9996  049F  2CA2               	ljmp	l6758
  9997  04A0                     l7002:	
  9998  04A0  24CC               	fcall	_LCD_ClearLine
  9999  04A1                     l691:	
 10000  04A1  0008               	return
 10001  04A2                     __end_of_DrawTimeDate:	
 10002  04A2                     __ptext30:	
 10003 ;; *************** function _LCD_String *****************
 10004 ;; Defined at:
 10005 ;;		line 331 in file "../drv_lcd.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  characters      2   10[COMMON] PTR const unsigned char 
 10008 ;;		 -> STR_14(10), STR_13(4), STR_12(4), STR_11(4), 
 10009 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 10010 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 10011 ;;		 -> STR_2(4), STR_1(4), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 1C/2
 10020 ;;		On exit  : 1C/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;Total ram usage:        3 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    3
 10030 ;; This function calls:
 10031 ;;		_LCD_Char
 10032 ;; This function is called by:
 10033 ;;		_DrawTimeDate
 10034 ;;		_DrawSetTempText
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           
 10039                           ;psect for function _LCD_String
 10040  04A2                     _LCD_String:	
 10041  04A2                     l6758:	
 10042                           ;incstack = 0
 10043                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10044                           
 10045  04A2  087A               	movf	LCD_String@characters,w
 10046  04A3  0084               	movwf	4
 10047  04A4  087B               	movf	LCD_String@characters+1,w
 10048  04A5  0085               	movwf	5
 10049  04A6  0012               	moviw fsr0++
 10050  04A7  1903               	btfsc	3,2
 10051  04A8  0008               	return
 10052  04A9  087A               	movf	LCD_String@characters,w
 10053  04AA  0084               	movwf	4
 10054  04AB  087B               	movf	LCD_String@characters+1,w
 10055  04AC  0085               	movwf	5
 10056  04AD  0800               	movf	0,w	;code access
 10057  04AE  26E6  3183         	fcall	_LCD_Char
 10058  04B0  0AFA               	incf	LCD_String@characters,f
 10059  04B1  1903               	skipnz
 10060  04B2  0AFB               	incf	LCD_String@characters+1,f
 10061  04B3  2CA2               	goto	l6758
 10062  04B4                     __end_of_LCD_String:	
 10063  04B4                     __ptext28:	
 10064 ;; *************** function _LCD_BCDNumber *****************
 10065 ;; Defined at:
 10066 ;;		line 289 in file "../drv_lcd.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;  digit           1    wreg     unsigned char 
 10069 ;;  bLzero          1   10[COMMON] unsigned char 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  digit           1   11[COMMON] unsigned char 
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 1F/1
 10078 ;;		On exit  : 1F/2
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;Total ram usage:        2 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    3
 10088 ;; This function calls:
 10089 ;;		_LCD_Char
 10090 ;; This function is called by:
 10091 ;;		_DrawTimeDate
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function _LCD_BCDNumber
 10097  04B4                     _LCD_BCDNumber:	
 10098                           
 10099                           ;incstack = 0
 10100                           ; Regs used in _LCD_BCDNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10101  04B4  00FB               	movwf	LCD_BCDNumber@digit
 10102  04B5  0E7B               	swapf	LCD_BCDNumber@digit,w
 10103  04B6  390F               	andlw	15
 10104  04B7  0020               	movlb	0	; select bank0
 10105  04B8  00D9               	movwf	_u8temp
 10106  04B9  0859               	movf	_u8temp,w
 10107  04BA  1903               	btfsc	3,2
 10108  04BB  087A               	movf	LCD_BCDNumber@bLzero,w
 10109  04BC  1903               	btfsc	3,2
 10110  04BD  2CC1               	goto	l6738
 10111  04BE  0859               	movf	_u8temp,w
 10112  04BF  3830               	iorlw	48
 10113  04C0  2CC2               	goto	L7
 10114  04C1                     l6738:	
 10115  04C1  3020               	movlw	32
 10116  04C2                     L7:	
 10117  04C2  26E6  3183         	fcall	_LCD_Char
 10118  04C4  087B               	movf	LCD_BCDNumber@digit,w
 10119  04C5  0020               	movlb	0	; select bank0
 10120  04C6  00D9               	movwf	_u8temp
 10121  04C7  300F               	movlw	15
 10122  04C8  05D9               	andwf	_u8temp,f
 10123  04C9  0859               	movf	_u8temp,w
 10124  04CA  3830               	iorlw	48
 10125  04CB  2EE6               	ljmp	_LCD_Char
 10126  04CC                     __end_of_LCD_BCDNumber:	
 10127  04CC                     __ptext38:	
 10128 ;; *************** function _LCD_ClearLine *****************
 10129 ;; Defined at:
 10130 ;;		line 191 in file "../drv_lcd.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  i               1    1[COMMON] unsigned char 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0, pclath, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 1D/0
 10141 ;;		On exit  : 1F/2
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;Total ram usage:        1 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    2
 10151 ;; This function calls:
 10152 ;;		_SPI_HF_Put
 10153 ;; This function is called by:
 10154 ;;		_DrawClrLastLines
 10155 ;;		_DrawTimeDate
 10156 ;;		_DrawSetTempText
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           
 10161                           ;psect for function _LCD_ClearLine
 10162  04CC                     _LCD_ClearLine:	
 10163  04CC                     l6496:	
 10164                           ;incstack = 0
 10165                           ; Regs used in _LCD_ClearLine: [wreg+status,2+status,0+pclath+cstack]
 10166                           
 10167  04CC  0022               	movlb	2	; select bank2
 10168  04CD  138C               	bcf	12,7	;volatile
 10169  04CE  01F1               	clrf	LCD_ClearLine@i
 10170  04CF                     l6504:	
 10171  04CF  3000               	movlw	0
 10172  04D0  26DA  3183         	fcall	_SPI_HF_Put
 10173  04D2  3054               	movlw	84
 10174  04D3  0AF1               	incf	LCD_ClearLine@i,f
 10175  04D4  0271               	subwf	LCD_ClearLine@i,w
 10176  04D5  1C03               	skipc
 10177  04D6  2CCF               	goto	l6504
 10178  04D7  0022               	movlb	2	; select bank2
 10179  04D8  178C               	bsf	12,7	;volatile
 10180  04D9  0008               	return
 10181  04DA                     __end_of_LCD_ClearLine:	
 10182  04DA                     __ptext29:	
 10183 ;; *************** function _DrawSetTempText *****************
 10184 ;; Defined at:
 10185 ;;		line 250 in file "../app_Menu.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;		None
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10194 ;; Tracked objects:
 10195 ;;		On entry : 1D/0
 10196 ;;		On exit  : 1C/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;Total ram usage:        0 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; Hardware stack levels required when called:    4
 10206 ;; This function calls:
 10207 ;;		_LCD_ClearLine
 10208 ;;		_LCD_String
 10209 ;;		_LCD_XY
 10210 ;; This function is called by:
 10211 ;;		_MNU_Task
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           
 10216                           ;psect for function _DrawSetTempText
 10217  04DA                     _DrawSetTempText:	
 10218                           
 10219                           ;incstack = 0
 10220                           ; Regs used in _DrawSetTempText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10221  04DA  3002               	movlw	2
 10222  04DB  00F2               	movwf	LCD_XY@y
 10223  04DC  3000               	movlw	0
 10224  04DD  264B  3183         	fcall	_LCD_XY
 10225  04DF  0020               	movlb	0	; select bank0
 10226  04E0  0845               	movf	_u8editmode,w
 10227  04E1  1903               	btfsc	3,2
 10228  04E2  2CED               	goto	l7120
 10229  04E3  3019               	movlw	25
 10230  04E4  03C5               	decf	_u8editmode,f
 10231  04E5  0243               	subwf	_dotctr,w
 10232  04E6  1803               	skipnc
 10233  04E7  2CED               	goto	l7120
 10234  04E8  306E               	movlw	low (STR_14| (0+32768))
 10235  04E9  00FA               	movwf	LCD_String@characters
 10236  04EA  3098               	movlw	high (STR_14| (0+32768))
 10237  04EB  00FB               	movwf	LCD_String@characters+1
 10238  04EC  2CA2               	ljmp	l6758
 10239  04ED                     l7120:	
 10240  04ED  2CCC               	ljmp	l6496
 10241  04EE                     __end_of_DrawSetTempText:	
 10242  04EE                     __ptext31:	
 10243 ;; *************** function _DrawRegPower *****************
 10244 ;; Defined at:
 10245 ;;		line 194 in file "../app_Menu.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  1    wreg      void 
 10252 ;; Registers used:
 10253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10254 ;; Tracked objects:
 10255 ;;		On entry : 1F/0
 10256 ;;		On exit  : 1F/2
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;Total ram usage:        0 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:    4
 10266 ;; This function calls:
 10267 ;;		_LCD_BitmapV
 10268 ;;		_LCD_Char
 10269 ;;		_LCD_XY
 10270 ;;		_PRS_RoomPresence
 10271 ;;		_REG_GetLevel
 10272 ;;		_WIN_IsOpen
 10273 ;; This function is called by:
 10274 ;;		_MNU_Task
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function _DrawRegPower
 10280  04EE                     _DrawRegPower:	
 10281                           
 10282                           ;incstack = 0
 10283                           ; Regs used in _DrawRegPower: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10284  04EE  2564  3183         	fcall	_REG_GetLevel
 10285  04F0  00C6               	movwf	app_Menu@u8temp
 10286  04F1  3005               	movlw	5
 10287  04F2  00F2               	movwf	LCD_XY@y
 10288  04F3  3043               	movlw	67
 10289  04F4  264B  3183         	fcall	_LCD_XY
 10290  04F6  0020               	movlb	0	; select bank0
 10291  04F7  0F46               	incfsz	app_Menu@u8temp,w
 10292  04F8  2D00               	goto	l7078
 10293  04F9  3046               	movlw	70
 10294  04FA  26E6  3183         	fcall	_LCD_Char
 10295  04FC  3020               	movlw	32
 10296  04FD  26E6  3183         	fcall	_LCD_Char
 10297  04FF  2D47               	goto	l709
 10298  0500                     l7078:	
 10299  0500  0846               	movf	app_Menu@u8temp,w
 10300  0501  1903               	btfsc	3,2
 10301  0502  2D08               	goto	l7082
 10302  0503  30C0               	movlw	192
 10303  0504  255C  3183         	fcall	_LCD_BitmapV
 10304  0506  30C0               	movlw	192
 10305  0507  2D0C               	goto	L8
 10306  0508                     l7082:	
 10307  0508  3000               	movlw	0
 10308  0509  255C  3183         	fcall	_LCD_BitmapV
 10309  050B  3000               	movlw	0
 10310  050C                     L8:	
 10311  050C  255C  3183         	fcall	_LCD_BitmapV
 10312  050E  3000               	movlw	0
 10313  050F  255C  3183         	fcall	_LCD_BitmapV
 10314  0511  301A               	movlw	26
 10315  0512  0020               	movlb	0	; select bank0
 10316  0513  0246               	subwf	app_Menu@u8temp,w
 10317  0514  1C03               	skipc
 10318  0515  2D1B               	goto	l7088
 10319  0516  30F0               	movlw	240
 10320  0517  255C  3183         	fcall	_LCD_BitmapV
 10321  0519  30F0               	movlw	240
 10322  051A  2D1F               	goto	L9
 10323  051B                     l7088:	
 10324  051B  3000               	movlw	0
 10325  051C  255C  3183         	fcall	_LCD_BitmapV
 10326  051E  3000               	movlw	0
 10327  051F                     L9:	
 10328  051F  255C  3183         	fcall	_LCD_BitmapV
 10329  0521  3000               	movlw	0
 10330  0522  255C  3183         	fcall	_LCD_BitmapV
 10331  0524  3033               	movlw	51
 10332  0525  0020               	movlb	0	; select bank0
 10333  0526  0246               	subwf	app_Menu@u8temp,w
 10334  0527  1C03               	skipc
 10335  0528  2D2E               	goto	l7094
 10336  0529  30FC               	movlw	252
 10337  052A  255C  3183         	fcall	_LCD_BitmapV
 10338  052C  30FC               	movlw	252
 10339  052D  2D32               	goto	L10
 10340  052E                     l7094:	
 10341  052E  3000               	movlw	0
 10342  052F  255C  3183         	fcall	_LCD_BitmapV
 10343  0531  3000               	movlw	0
 10344  0532                     L10:	
 10345  0532  255C  3183         	fcall	_LCD_BitmapV
 10346  0534  3000               	movlw	0
 10347  0535  255C  3183         	fcall	_LCD_BitmapV
 10348  0537  304C               	movlw	76
 10349  0538  0020               	movlb	0	; select bank0
 10350  0539  0246               	subwf	app_Menu@u8temp,w
 10351  053A  1C03               	skipc
 10352  053B  2D41               	goto	l7100
 10353  053C  30FF               	movlw	255
 10354  053D  255C  3183         	fcall	_LCD_BitmapV
 10355  053F  30FF               	movlw	255
 10356  0540  2D45               	goto	L11
 10357  0541                     l7100:	
 10358  0541  3000               	movlw	0
 10359  0542  255C  3183         	fcall	_LCD_BitmapV
 10360  0544  3000               	movlw	0
 10361  0545                     L11:	
 10362  0545  255C  3183         	fcall	_LCD_BitmapV
 10363  0547                     l709:	
 10364  0547  3003               	movlw	3
 10365  0548  00F2               	movwf	LCD_XY@y
 10366  0549  304F               	movlw	79
 10367  054A  264B  3183         	fcall	_LCD_XY
 10368  054C  256E  3183         	fcall	_WIN_IsOpen
 10369  054E  3A00               	xorlw	0
 10370  054F  1903               	skipnz
 10371  0550  2D53               	goto	l7104
 10372  0551  3057               	movlw	87
 10373  0552  2EE6               	ljmp	_LCD_Char
 10374  0553                     l7104:	
 10375  0553  2569  3183         	fcall	_PRS_RoomPresence
 10376  0555  3A00               	xorlw	0
 10377  0556  1903               	skipnz
 10378  0557  2D5A               	goto	l7108
 10379  0558  3050               	movlw	80
 10380  0559  2EE6               	ljmp	_LCD_Char
 10381  055A                     l7108:	
 10382  055A  3020               	movlw	32
 10383  055B  2EE6               	ljmp	_LCD_Char
 10384  055C                     __end_of_DrawRegPower:	
 10385  055C                     __ptext34:	
 10386 ;; *************** function _LCD_BitmapV *****************
 10387 ;; Defined at:
 10388 ;;		line 313 in file "../drv_lcd.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  bmp             1    wreg     unsigned char 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;  bmp             1    1[COMMON] unsigned char 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0, pclath, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 1D/0
 10399 ;;		On exit  : 1F/2
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;Total ram usage:        1 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    2
 10409 ;; This function calls:
 10410 ;;		_SPI_HF_Put
 10411 ;; This function is called by:
 10412 ;;		_DrawRegPower
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           
 10417                           ;psect for function _LCD_BitmapV
 10418  055C                     _LCD_BitmapV:	
 10419                           
 10420                           ;incstack = 0
 10421                           ; Regs used in _LCD_BitmapV: [wreg+status,2+status,0+pclath+cstack]
 10422  055C  00F1               	movwf	LCD_BitmapV@bmp
 10423  055D  0022               	movlb	2	; select bank2
 10424  055E  138C               	bcf	12,7	;volatile
 10425  055F  0871               	movf	LCD_BitmapV@bmp,w
 10426  0560  26DA               	fcall	_SPI_HF_Put
 10427  0561  0022               	movlb	2	; select bank2
 10428  0562  178C               	bsf	12,7	;volatile
 10429  0563  0008               	return
 10430  0564                     __end_of_LCD_BitmapV:	
 10431  0564                     __ptext80:	
 10432 ;; *************** function _REG_GetLevel *****************
 10433 ;; Defined at:
 10434 ;;		line 214 in file "../app_TempReg.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      unsigned char 
 10441 ;; Registers used:
 10442 ;;		wreg
 10443 ;; Tracked objects:
 10444 ;;		On entry : 1B/0
 10445 ;;		On exit  : 1F/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;Total ram usage:        0 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    1
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_DrawRegPower
 10459 ;;		_UDS_RDBID
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           
 10464                           ;psect for function _REG_GetLevel
 10465  0564                     _REG_GetLevel:	
 10466                           
 10467                           ;incstack = 0
 10468                           ; Regs used in _REG_GetLevel: [wreg]
 10469  0564  0020               	movlb	0	; select bank0
 10470  0565  184F               	btfsc	_sFlags,0
 10471  0566  34FF               	retlw	255
 10472  0567  0850               	movf	_newPWM,w
 10473  0568  0008               	return
 10474  0569                     __end_of_REG_GetLevel:	
 10475  0569                     __ptext33:	
 10476 ;; *************** function _PRS_RoomPresence *****************
 10477 ;; Defined at:
 10478 ;;		line 34 in file "../../LIBC/PRESENCE/app_Presence.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;		None
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      unsigned char 
 10485 ;; Registers used:
 10486 ;;		wreg, status,2, status,0
 10487 ;; Tracked objects:
 10488 ;;		On entry : 1F/0
 10489 ;;		On exit  : 1F/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;Total ram usage:        0 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    1
 10499 ;; This function calls:
 10500 ;;		Nothing
 10501 ;; This function is called by:
 10502 ;;		_DetermineMode
 10503 ;;		_DrawRegPower
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function _PRS_RoomPresence
 10509  0569                     _PRS_RoomPresence:	
 10510                           
 10511                           ;incstack = 0
 10512                           ; Regs used in _PRS_RoomPresence: [wreg+status,2+status,0]
 10513  0569  3002               	movlw	2
 10514  056A  0638               	xorwf	_ePrs,w
 10515  056B  1903               	btfsc	3,2
 10516  056C  3401               	retlw	1
 10517  056D  3400               	retlw	0
 10518  056E                     __end_of_PRS_RoomPresence:	
 10519  056E                     __ptext32:	
 10520 ;; *************** function _WIN_IsOpen *****************
 10521 ;; Defined at:
 10522 ;;		line 32 in file "../app_win_sens.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;		None
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      unsigned char 
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0
 10531 ;; Tracked objects:
 10532 ;;		On entry : 1D/0
 10533 ;;		On exit  : 1F/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:        1 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    1
 10543 ;; This function calls:
 10544 ;;		Nothing
 10545 ;; This function is called by:
 10546 ;;		_REG_TaskSlow
 10547 ;;		_DrawRegPower
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           
 10552                           ;psect for function _WIN_IsOpen
 10553  056E                     _WIN_IsOpen:	
 10554                           
 10555                           ;incstack = 0
 10556                           ; Regs used in _WIN_IsOpen: [wreg+status,2+status,0]
 10557  056E  01F0               	clrf	_WIN_IsOpen$1753
 10558  056F  0AF0               	incf	_WIN_IsOpen$1753,f
 10559  0570  0020               	movlb	0	; select bank0
 10560  0571  0824               	movf	_uSc,w
 10561  0572  1D03               	btfss	3,2
 10562  0573  2D78               	goto	l4738
 10563  0574  0825               	movf	_uSc+1,w
 10564  0575  1D03               	btfss	3,2
 10565  0576  2D78               	goto	l4738
 10566  0577  01F0               	clrf	_WIN_IsOpen$1753
 10567  0578                     l4738:	
 10568  0578  0870               	movf	_WIN_IsOpen$1753,w
 10569  0579  0008               	return
 10570  057A                     __end_of_WIN_IsOpen:	
 10571  057A                     __ptext42:	
 10572 ;; *************** function _LCD_LargePlus *****************
 10573 ;; Defined at:
 10574 ;;		line 269 in file "../drv_lcd.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;		None
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, status,2, status,0, pclath, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 1F/2
 10585 ;;		On exit  : 1F/2
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;Total ram usage:        0 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    2
 10595 ;; This function calls:
 10596 ;;		_SPI_HF_Put
 10597 ;; This function is called by:
 10598 ;;		_DrawLargeTemp
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _LCD_LargePlus
 10604  057A                     _LCD_LargePlus:	
 10605                           
 10606                           ;incstack = 0
 10607                           ; Regs used in _LCD_LargePlus: [wreg+status,2+status,0+pclath+cstack]
 10608  057A  138C               	bcf	12,7	;volatile
 10609  057B  3000               	movlw	0
 10610  057C  26DA  3183         	fcall	_SPI_HF_Put
 10611  057E  3000               	movlw	0
 10612  057F  26DA  3183         	fcall	_SPI_HF_Put
 10613  0581  3000               	movlw	0
 10614  0582  26DA  3183         	fcall	_SPI_HF_Put
 10615  0584  3000               	movlw	0
 10616  0585  26DA  3183         	fcall	_SPI_HF_Put
 10617  0587  3000               	movlw	0
 10618  0588  26DA               	fcall	_SPI_HF_Put
 10619  0589  0022               	movlb	2	; select bank2
 10620  058A  178C               	bsf	12,7	;volatile
 10621  058B  0008               	return
 10622  058C                     __end_of_LCD_LargePlus:	
 10623  058C                     __ptext45:	
 10624 ;; *************** function _DrawLargeHum *****************
 10625 ;; Defined at:
 10626 ;;		line 151 in file "../app_Menu.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 1F/0
 10637 ;;		On exit  : 1F/2
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    5
 10647 ;; This function calls:
 10648 ;;		_LCD_Char
 10649 ;;		_LCD_LargeDigit
 10650 ;;		_LCD_XY
 10651 ;;		___lbdiv
 10652 ;;		___lbmod
 10653 ;; This function is called by:
 10654 ;;		_MNU_Task
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           
 10659                           ;psect for function _DrawLargeHum
 10660  058C                     _DrawLargeHum:	
 10661                           
 10662                           ;incstack = 0
 10663                           ; Regs used in _DrawLargeHum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10664  058C  3003               	movlw	3
 10665  058D  00F2               	movwf	LCD_XY@y
 10666  058E  3014               	movlw	20
 10667  058F  264B  3183         	fcall	_LCD_XY
 10668  0591  300A               	movlw	10
 10669  0592  00F5               	movwf	___lbdiv@divisor
 10670  0593  0020               	movlb	0	; select bank0
 10671  0594  0849               	movf	_currhum,w
 10672  0595  27C0  3183         	fcall	___lbdiv
 10673  0597  0020               	movlb	0	; select bank0
 10674  0598  00C6               	movwf	app_Menu@u8temp
 10675  0599  2657  3183         	fcall	_LCD_LargeDigit
 10676  059B  3003               	movlw	3
 10677  059C  00F2               	movwf	LCD_XY@y
 10678  059D  3023               	movlw	35
 10679  059E  264B               	fcall	_LCD_XY
 10680  059F  300A               	movlw	10
 10681  05A0  00F0               	movwf	___lbmod@divisor
 10682  05A1  0020               	movlb	0	; select bank0
 10683  05A2  0849               	movf	_currhum,w
 10684  05A3  3194  24C9  3183   	fcall	___lbmod
 10685  05A6  00C6               	movwf	app_Menu@u8temp
 10686  05A7  2657  3183         	fcall	_LCD_LargeDigit
 10687  05A9  3003               	movlw	3
 10688  05AA  00F2               	movwf	LCD_XY@y
 10689  05AB  3036               	movlw	54
 10690  05AC  264B  3183         	fcall	_LCD_XY
 10691  05AE  3025               	movlw	37
 10692  05AF  26E6  3183         	fcall	_LCD_Char
 10693  05B1  3052               	movlw	82
 10694  05B2  26E6  3183         	fcall	_LCD_Char
 10695  05B4  3068               	movlw	104
 10696  05B5  2EE6               	ljmp	_LCD_Char
 10697  05B6                     __end_of_DrawLargeHum:	
 10698  05B6                     __ptext35:	
 10699 ;; *************** function _DrawLargeTime *****************
 10700 ;; Defined at:
 10701 ;;		line 166 in file "../app_Menu.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 1F/0
 10712 ;;		On exit  : 1F/2
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    5
 10722 ;; This function calls:
 10723 ;;		_DrawClrLastLines
 10724 ;;		_LCD_Large2Dots
 10725 ;;		_LCD_LargeDigit
 10726 ;;		_LCD_XY
 10727 ;; This function is called by:
 10728 ;;		_MNU_Task
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _DrawLargeTime
 10734  05B6                     _DrawLargeTime:	
 10735                           
 10736                           ;incstack = 0
 10737                           ; Regs used in _DrawLargeTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10738  05B6  3003               	movlw	3
 10739  05B7  00F2               	movwf	LCD_XY@y
 10740  05B8  300A               	movlw	10
 10741  05B9  264B  3183         	fcall	_LCD_XY
 10742  05BB  0020               	movlb	0	; select bank0
 10743  05BC  0851               	movf	_RTC_Status,w
 10744  05BD  1903               	btfsc	3,2
 10745  05BE  2DF4               	goto	l7068
 10746  05BF  0021               	movlb	1	; select bank1
 10747  05C0  083E               	movf	(_DateTime^(0+128)+2),w
 10748  05C1  39F0               	andlw	240
 10749  05C2  1903               	btfsc	3,2
 10750  05C3  2DC8               	goto	l7060
 10751  05C4  0E3E               	swapf	(_DateTime^(0+128)+2),w
 10752  05C5  390F               	andlw	15
 10753  05C6  2657  3183         	fcall	_LCD_LargeDigit
 10754  05C8                     l7060:	
 10755  05C8  3003               	movlw	3
 10756  05C9  00F2               	movwf	LCD_XY@y
 10757  05CA  3018               	movlw	24
 10758  05CB  264B  3183         	fcall	_LCD_XY
 10759  05CD  0021               	movlb	1	; select bank1
 10760  05CE  083E               	movf	(_DateTime^(0+128)+2),w
 10761  05CF  390F               	andlw	15
 10762  05D0  2657  3183         	fcall	_LCD_LargeDigit
 10763  05D2  3003               	movlw	3
 10764  05D3  00F2               	movwf	LCD_XY@y
 10765  05D4  3028               	movlw	40
 10766  05D5  264B  3183         	fcall	_LCD_XY
 10767  05D7  3019               	movlw	25
 10768  05D8  0020               	movlb	0	; select bank0
 10769  05D9  0243               	subwf	_dotctr,w
 10770  05DA  1803               	btfsc	3,0
 10771  05DB  2DDE               	goto	u5420
 10772  05DC  3001               	movlw	1
 10773  05DD  2DDF               	goto	u5430
 10774  05DE                     u5420:	
 10775  05DE  3000               	movlw	0
 10776  05DF                     u5430:	
 10777  05DF  26AF  3183         	fcall	_LCD_Large2Dots
 10778  05E1  3003               	movlw	3
 10779  05E2  00F2               	movwf	LCD_XY@y
 10780  05E3  302F               	movlw	47
 10781  05E4  264B  3183         	fcall	_LCD_XY
 10782  05E6  0021               	movlb	1	; select bank1
 10783  05E7  0E3D               	swapf	(_DateTime^(0+128)+1),w
 10784  05E8  390F               	andlw	15
 10785  05E9  2657  3183         	fcall	_LCD_LargeDigit
 10786  05EB  3003               	movlw	3
 10787  05EC  00F2               	movwf	LCD_XY@y
 10788  05ED  303D               	movlw	61
 10789  05EE  264B  3183         	fcall	_LCD_XY
 10790  05F0  0021               	movlb	1	; select bank1
 10791  05F1  083D               	movf	(_DateTime^(0+128)+1),w
 10792  05F2  390F               	andlw	15
 10793  05F3  2E57               	ljmp	_LCD_LargeDigit
 10794  05F4                     l7068:	
 10795  05F4  2C0F               	ljmp	l6782
 10796  05F5                     __end_of_DrawLargeTime:	
 10797  05F5                     __ptext39:	
 10798 ;; *************** function _DrawLargeTemp *****************
 10799 ;; Defined at:
 10800 ;;		line 113 in file "../app_Menu.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  t               2   10[COMMON] short 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10809 ;; Tracked objects:
 10810 ;;		On entry : 1F/0
 10811 ;;		On exit  : 1F/2
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        2 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    5
 10821 ;; This function calls:
 10822 ;;		_LCD_Char
 10823 ;;		_LCD_LargeDigit
 10824 ;;		_LCD_LargeDot
 10825 ;;		_LCD_LargeMinus
 10826 ;;		_LCD_LargePlus
 10827 ;;		_LCD_XY
 10828 ;;		___awdiv
 10829 ;;		___awmod
 10830 ;; This function is called by:
 10831 ;;		_MNU_Task
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           
 10836                           ;psect for function _DrawLargeTemp
 10837  05F5                     _DrawLargeTemp:	
 10838                           
 10839                           ;incstack = 0
 10840                           ; Regs used in _DrawLargeTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10841  05F5  3004               	movlw	4
 10842  05F6  00F2               	movwf	LCD_XY@y
 10843  05F7  3001               	movlw	1
 10844  05F8  264B  3183         	fcall	_LCD_XY
 10845  05FA  1FFB               	btfss	DrawLargeTemp@t+1,7
 10846  05FB  2E04               	goto	l7012
 10847  05FC  09FA               	comf	DrawLargeTemp@t,f
 10848  05FD  09FB               	comf	DrawLargeTemp@t+1,f
 10849  05FE  0AFA               	incf	DrawLargeTemp@t,f
 10850  05FF  1903               	skipnz
 10851  0600  0AFB               	incf	DrawLargeTemp@t+1,f
 10852  0601  269D  3183         	fcall	_LCD_LargeMinus
 10853  0603  2E06               	goto	l695
 10854  0604                     l7012:	
 10855  0604  257A  3183         	fcall	_LCD_LargePlus
 10856  0606                     l695:	
 10857  0606  3003               	movlw	3
 10858  0607  00F2               	movwf	LCD_XY@y
 10859  0608  302B               	movlw	43
 10860  0609  264B  3183         	fcall	_LCD_XY
 10861  060B  27E2  3183         	fcall	PL12	;call to abstracted procedure
 10862  060D  2768  3183         	fcall	___awmod
 10863  060F  0870               	movf	?___awmod,w
 10864  0610  0020               	movlb	0	; select bank0
 10865  0611  00C6               	movwf	app_Menu@u8temp
 10866  0612  2657  3183         	fcall	_LCD_LargeDigit
 10867  0614  3003               	movlw	3
 10868  0615  00F2               	movwf	LCD_XY@y
 10869  0616  3018               	movlw	24
 10870  0617  264B  3183         	fcall	_LCD_XY
 10871  0619  27F2  3183         	fcall	PL16	;call to abstracted procedure
 10872  061B  2728  3183         	fcall	___awdiv
 10873  061D  0871               	movf	?___awdiv+1,w
 10874  061E  00FB               	movwf	DrawLargeTemp@t+1
 10875  061F  0870               	movf	?___awdiv,w
 10876  0620  00FA               	movwf	DrawLargeTemp@t
 10877  0621  27E2  3183         	fcall	PL12	;call to abstracted procedure
 10878  0623  2768  3183         	fcall	___awmod
 10879  0625  0870               	movf	?___awmod,w
 10880  0626  0020               	movlb	0	; select bank0
 10881  0627  00C6               	movwf	app_Menu@u8temp
 10882  0628  2657  3183         	fcall	_LCD_LargeDigit
 10883  062A  3003               	movlw	3
 10884  062B  00F2               	movwf	LCD_XY@y
 10885  062C  3009               	movlw	9
 10886  062D  264B  3183         	fcall	_LCD_XY
 10887  062F  27F2  3183         	fcall	PL16	;call to abstracted procedure
 10888  0631  2728  3183         	fcall	___awdiv
 10889  0633  0871               	movf	?___awdiv+1,w
 10890  0634  00FB               	movwf	DrawLargeTemp@t+1
 10891  0635  0870               	movf	?___awdiv,w
 10892  0636  00FA               	movwf	DrawLargeTemp@t
 10893  0637  087A               	movf	DrawLargeTemp@t,w
 10894  0638  2657  3183         	fcall	_LCD_LargeDigit
 10895  063A  3005               	movlw	5
 10896  063B  00F2               	movwf	LCD_XY@y
 10897  063C  3026               	movlw	38
 10898  063D  264B  3183         	fcall	_LCD_XY
 10899  063F  238E  3183         	fcall	_LCD_LargeDot
 10900  0641  3003               	movlw	3
 10901  0642  00F2               	movwf	LCD_XY@y
 10902  0643  3039               	movlw	57
 10903  0644  264B  3183         	fcall	_LCD_XY
 10904  0646  3040               	movlw	64
 10905  0647  26E6  3183         	fcall	_LCD_Char
 10906  0649  3043               	movlw	67
 10907  064A  2EE6               	ljmp	_LCD_Char
 10908  064B                     __end_of_DrawLargeTemp:	
 10909  064B                     __ptext49:	
 10910 ;; *************** function _LCD_XY *****************
 10911 ;; Defined at:
 10912 ;;		line 184 in file "../drv_lcd.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  x               1    wreg     unsigned char 
 10915 ;;  y               1    2[COMMON] unsigned char 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  x               1    3[COMMON] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, status,2, status,0, pclath, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 1C/0
 10924 ;;		On exit  : 1F/2
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10927 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;Total ram usage:        2 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    3
 10934 ;; This function calls:
 10935 ;;		_LCDWriteCMD
 10936 ;; This function is called by:
 10937 ;;		_LCD_LargeDigit
 10938 ;;		_LCD_Large2Dots
 10939 ;;		_DrawClrLastLines
 10940 ;;		_DrawTimeDate
 10941 ;;		_DrawLargeTemp
 10942 ;;		_DrawLargeHum
 10943 ;;		_DrawLargeTime
 10944 ;;		_DrawRegPower
 10945 ;;		_DrawSetTempText
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           
 10950                           ;psect for function _LCD_XY
 10951  064B                     _LCD_XY:	
 10952                           
 10953                           ;incstack = 0
 10954                           ; Regs used in _LCD_XY: [wreg+status,2+status,0+pclath+cstack]
 10955  064B  00F3               	movwf	LCD_XY@x
 10956  064C  0020               	movlb	0	; select bank0
 10957  064D  00DB               	movwf	_xp
 10958  064E  0872               	movf	LCD_XY@y,w
 10959  064F  00DA               	movwf	_yp
 10960  0650  0873               	movf	LCD_XY@x,w
 10961  0651  3880               	iorlw	128
 10962  0652  27B6  3183         	fcall	_LCDWriteCMD
 10963  0654  0872               	movf	LCD_XY@y,w
 10964  0655  3840               	iorlw	64
 10965  0656  2FB6               	ljmp	_LCDWriteCMD
 10966  0657                     __end_of_LCD_XY:	
 10967  0657                     __ptext48:	
 10968 ;; *************** function _LCD_LargeDigit *****************
 10969 ;; Defined at:
 10970 ;;		line 211 in file "../drv_lcd.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  dig             1    wreg     unsigned char 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  dig             1    6[COMMON] unsigned char 
 10975 ;;  offs            2    8[COMMON] unsigned short 
 10976 ;;  i               1    7[COMMON] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      void 
 10979 ;; Registers used:
 10980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 1C/1
 10983 ;;		On exit  : 1F/2
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        4 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    4
 10993 ;; This function calls:
 10994 ;;		_LCD_XY
 10995 ;;		_SPI_HF_Put
 10996 ;;		___wmul
 10997 ;; This function is called by:
 10998 ;;		_DrawLargeTemp
 10999 ;;		_DrawLargeHum
 11000 ;;		_DrawLargeTime
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           
 11005                           ;psect for function _LCD_LargeDigit
 11006  0657                     _LCD_LargeDigit:	
 11007                           
 11008                           ;incstack = 0
 11009                           ; Regs used in _LCD_LargeDigit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11010  0657  00F6               	movwf	LCD_LargeDigit@dig
 11011  0658  00F8               	movwf	LCD_LargeDigit@offs
 11012  0659  3024               	movlw	36
 11013  065A  01F9               	clrf	LCD_LargeDigit@offs+1
 11014  065B  00F0               	movwf	___wmul@multiplier
 11015  065C  01F1               	clrf	___wmul@multiplier+1
 11016  065D  0879               	movf	LCD_LargeDigit@offs+1,w
 11017  065E  00F3               	movwf	___wmul@multiplicand+1
 11018  065F  0878               	movf	LCD_LargeDigit@offs,w
 11019  0660  00F2               	movwf	___wmul@multiplicand
 11020  0661  2713  3183         	fcall	___wmul
 11021  0663  0871               	movf	?___wmul+1,w
 11022  0664  00F9               	movwf	LCD_LargeDigit@offs+1
 11023  0665  0870               	movf	?___wmul,w
 11024  0666  00F8               	movwf	LCD_LargeDigit@offs
 11025  0667  0022               	movlb	2	; select bank2
 11026  0668  138C               	bcf	12,7	;volatile
 11027  0669  300C               	movlw	12
 11028  066A  00F7               	movwf	LCD_LargeDigit@i
 11029  066B  2E73               	goto	l6658
 11030  066C                     l6654:	
 11031  066C  27D8  3183         	fcall	PL2	;call to abstracted procedure
 11032  066E  26DA  3183         	fcall	_SPI_HF_Put
 11033  0670  0AF8               	incf	LCD_LargeDigit@offs,f
 11034  0671  1903               	skipnz
 11035  0672  0AF9               	incf	LCD_LargeDigit@offs+1,f
 11036  0673                     l6658:	
 11037  0673  03F7               	decf	LCD_LargeDigit@i,f
 11038  0674  0F77               	incfsz	LCD_LargeDigit@i,w
 11039  0675  2E6C               	goto	l6654
 11040  0676  27EA  3183         	fcall	PL14	;call to abstracted procedure
 11041  0678  264B  3183         	fcall	_LCD_XY
 11042  067A  138C               	bcf	12,7	;volatile
 11043  067B  300C               	movlw	12
 11044  067C  00F7               	movwf	LCD_LargeDigit@i
 11045  067D  2E85               	goto	l6670
 11046  067E                     l6666:	
 11047  067E  27D8  3183         	fcall	PL2	;call to abstracted procedure
 11048  0680  26DA  3183         	fcall	_SPI_HF_Put
 11049  0682  0AF8               	incf	LCD_LargeDigit@offs,f
 11050  0683  1903               	skipnz
 11051  0684  0AF9               	incf	LCD_LargeDigit@offs+1,f
 11052  0685                     l6670:	
 11053  0685  03F7               	decf	LCD_LargeDigit@i,f
 11054  0686  0F77               	incfsz	LCD_LargeDigit@i,w
 11055  0687  2E7E               	goto	l6666
 11056  0688  27EA  3183         	fcall	PL14	;call to abstracted procedure
 11057  068A  264B  3183         	fcall	_LCD_XY
 11058  068C  138C               	bcf	12,7	;volatile
 11059  068D  300C               	movlw	12
 11060  068E  00F7               	movwf	LCD_LargeDigit@i
 11061  068F  2E97               	goto	l6682
 11062  0690                     l6678:	
 11063  0690  27D8  3183         	fcall	PL2	;call to abstracted procedure
 11064  0692  26DA  3183         	fcall	_SPI_HF_Put
 11065  0694  0AF8               	incf	LCD_LargeDigit@offs,f
 11066  0695  1903               	skipnz
 11067  0696  0AF9               	incf	LCD_LargeDigit@offs+1,f
 11068  0697                     l6682:	
 11069  0697  03F7               	decf	LCD_LargeDigit@i,f
 11070  0698  0F77               	incfsz	LCD_LargeDigit@i,w
 11071  0699  2E90               	goto	l6678
 11072  069A  0022               	movlb	2	; select bank2
 11073  069B  178C               	bsf	12,7	;volatile
 11074  069C  0008               	return
 11075  069D                     __end_of_LCD_LargeDigit:	
 11076  069D                     __ptext43:	
 11077 ;; *************** function _LCD_LargeMinus *****************
 11078 ;; Defined at:
 11079 ;;		line 279 in file "../drv_lcd.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;		None
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1    wreg      void 
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, status,0, pclath, cstack
 11088 ;; Tracked objects:
 11089 ;;		On entry : 1F/2
 11090 ;;		On exit  : 1F/2
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        0 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:    2
 11100 ;; This function calls:
 11101 ;;		_SPI_HF_Put
 11102 ;; This function is called by:
 11103 ;;		_DrawLargeTemp
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function _LCD_LargeMinus
 11109  069D                     _LCD_LargeMinus:	
 11110                           
 11111                           ;incstack = 0
 11112                           ; Regs used in _LCD_LargeMinus: [wreg+status,2+status,0+pclath+cstack]
 11113  069D  138C               	bcf	12,7	;volatile
 11114  069E  3070               	movlw	112
 11115  069F  26DA  3183         	fcall	_SPI_HF_Put
 11116  06A1  3070               	movlw	112
 11117  06A2  26DA  3183         	fcall	_SPI_HF_Put
 11118  06A4  3070               	movlw	112
 11119  06A5  26DA  3183         	fcall	_SPI_HF_Put
 11120  06A7  3070               	movlw	112
 11121  06A8  26DA  3183         	fcall	_SPI_HF_Put
 11122  06AA  3070               	movlw	112
 11123  06AB  26DA               	fcall	_SPI_HF_Put
 11124  06AC  0022               	movlb	2	; select bank2
 11125  06AD  178C               	bsf	12,7	;volatile
 11126  06AE  0008               	return
 11127  06AF                     __end_of_LCD_LargeMinus:	
 11128  06AF                     __ptext36:	
 11129 ;; *************** function _LCD_Large2Dots *****************
 11130 ;; Defined at:
 11131 ;;		line 246 in file "../drv_lcd.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;  bON             1    wreg     unsigned char 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  bON             1    4[COMMON] unsigned char 
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		wreg, status,2, status,0, pclath, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 1F/0
 11142 ;;		On exit  : 1F/2
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;Total ram usage:        1 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:    4
 11152 ;; This function calls:
 11153 ;;		_LCD_XY
 11154 ;;		_SPI_HF_Put
 11155 ;; This function is called by:
 11156 ;;		_DrawLargeTime
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           
 11161                           ;psect for function _LCD_Large2Dots
 11162  06AF                     _LCD_Large2Dots:	
 11163                           
 11164                           ;incstack = 0
 11165                           ; Regs used in _LCD_Large2Dots: [wreg+status,2+status,0+pclath+cstack]
 11166  06AF  00F4               	movwf	LCD_Large2Dots@bON
 11167  06B0  0022               	movlb	2	; select bank2
 11168  06B1  138C               	bcf	12,7	;volatile
 11169  06B2  0874               	movf	LCD_Large2Dots@bON,w
 11170  06B3  1903               	btfsc	3,2
 11171  06B4  2EB7               	goto	l6696
 11172  06B5  30E0               	movlw	224
 11173  06B6  00F4               	movwf	LCD_Large2Dots@bON
 11174  06B7                     l6696:	
 11175  06B7  0874               	movf	LCD_Large2Dots@bON,w
 11176  06B8  26DA  3183         	fcall	_SPI_HF_Put
 11177  06BA  0874               	movf	LCD_Large2Dots@bON,w
 11178  06BB  26DA  3183         	fcall	_SPI_HF_Put
 11179  06BD  0874               	movf	LCD_Large2Dots@bON,w
 11180  06BE  26DA  3183         	fcall	_SPI_HF_Put
 11181  06C0  0022               	movlb	2	; select bank2
 11182  06C1  178C               	bsf	12,7	;volatile
 11183  06C2  0020               	movlb	0	; select bank0
 11184  06C3  085A               	movf	_yp,w
 11185  06C4  3E02               	addlw	2
 11186  06C5  00F2               	movwf	LCD_XY@y
 11187  06C6  085B               	movf	_xp,w
 11188  06C7  264B  3183         	fcall	_LCD_XY
 11189  06C9  138C               	bcf	12,7	;volatile
 11190  06CA  0874               	movf	LCD_Large2Dots@bON,w
 11191  06CB  1903               	btfsc	3,2
 11192  06CC  2ECF               	goto	l6712
 11193  06CD  3007               	movlw	7
 11194  06CE  00F4               	movwf	LCD_Large2Dots@bON
 11195  06CF                     l6712:	
 11196  06CF  0874               	movf	LCD_Large2Dots@bON,w
 11197  06D0  26DA  3183         	fcall	_SPI_HF_Put
 11198  06D2  0874               	movf	LCD_Large2Dots@bON,w
 11199  06D3  26DA  3183         	fcall	_SPI_HF_Put
 11200  06D5  0874               	movf	LCD_Large2Dots@bON,w
 11201  06D6  26DA               	fcall	_SPI_HF_Put
 11202  06D7  0022               	movlb	2	; select bank2
 11203  06D8  178C               	bsf	12,7	;volatile
 11204  06D9  0008               	return
 11205  06DA                     __end_of_LCD_Large2Dots:	
 11206  06DA                     __ptext111:	
 11207 ;; *************** function _SPI_HF_Put *****************
 11208 ;; Defined at:
 11209 ;;		line 26 in file "../drv_spi.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  v               1    wreg     unsigned char 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  v               1    0[COMMON] unsigned char 
 11214 ;;  i               1    0        unsigned char 
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      void 
 11217 ;; Registers used:
 11218 ;;		wreg
 11219 ;; Tracked objects:
 11220 ;;		On entry : 1C/2
 11221 ;;		On exit  : 1F/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11228 ;;Total ram usage:        1 bytes
 11229 ;; Hardware stack levels used:    1
 11230 ;; Hardware stack levels required when called:    1
 11231 ;; This function calls:
 11232 ;;		Nothing
 11233 ;; This function is called by:
 11234 ;;		_LCDWriteCMD
 11235 ;;		_LCD_ClearLine
 11236 ;;		_LCD_ClearLCD
 11237 ;;		_LCD_LargeDigit
 11238 ;;		_LCD_LargeDot
 11239 ;;		_LCD_Large2Dots
 11240 ;;		_LCD_LargePlus
 11241 ;;		_LCD_LargeMinus
 11242 ;;		_LCD_BitmapV
 11243 ;;		_LCD_Char
 11244 ;;		_MRF89XARegisterSet
 11245 ;;		_MRF89XARegisterRead
 11246 ;;		_WriteFIFO
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function _SPI_HF_Put
 11252  06DA                     _SPI_HF_Put:	
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _SPI_HF_Put: [wreg]
 11256  06DA  00F0               	movwf	SPI_HF_Put@v
 11257  06DB  0024               	movlb	4	; select bank4
 11258  06DC  0811               	movf	17,w	;volatile
 11259  06DD  0020               	movlb	0	; select bank0
 11260  06DE  1191               	bcf	17,3	;volatile
 11261  06DF  0870               	movf	SPI_HF_Put@v,w
 11262  06E0  0024               	movlb	4	; select bank4
 11263  06E1  0091               	movwf	17	;volatile
 11264  06E2                     l467:	
 11265  06E2  0020               	movlb	0	; select bank0
 11266  06E3  1991               	btfsc	17,3	;volatile
 11267  06E4  0008               	return
 11268  06E5  2EE2               	goto	l467
 11269  06E6                     __end_of_SPI_HF_Put:	
 11270  06E6                     __ptext50:	
 11271 ;; *************** function _LCD_Char *****************
 11272 ;; Defined at:
 11273 ;;		line 319 in file "../drv_lcd.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;  character       1    wreg     unsigned char 
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;  character       1    6[COMMON] unsigned char 
 11278 ;;  j               1    7[COMMON] unsigned char 
 11279 ;;  index           2    8[COMMON] unsigned short 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 1C/2
 11286 ;;		On exit  : 1F/2
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;Total ram usage:        4 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    2
 11296 ;; This function calls:
 11297 ;;		_SPI_HF_Put
 11298 ;;		___wmul
 11299 ;; This function is called by:
 11300 ;;		_LCD_BCDNumber
 11301 ;;		_LCD_String
 11302 ;;		_DrawTimeDate
 11303 ;;		_DrawLargeTemp
 11304 ;;		_DrawLargeHum
 11305 ;;		_DrawRegPower
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           
 11310                           ;psect for function _LCD_Char
 11311  06E6                     _LCD_Char:	
 11312                           
 11313                           ;incstack = 0
 11314                           ; Regs used in _LCD_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11315  06E6  00F6               	movwf	LCD_Char@character
 11316  06E7  00F8               	movwf	LCD_Char@index
 11317  06E8  30E0               	movlw	-32
 11318  06E9  01F9               	clrf	LCD_Char@index+1
 11319  06EA  07F8               	addwf	LCD_Char@index,f
 11320  06EB  1C03               	skipc
 11321  06EC  03F9               	decf	LCD_Char@index+1,f
 11322  06ED  3005               	movlw	5
 11323  06EE  00F0               	movwf	___wmul@multiplier
 11324  06EF  01F1               	clrf	___wmul@multiplier+1
 11325  06F0  0879               	movf	LCD_Char@index+1,w
 11326  06F1  00F3               	movwf	___wmul@multiplicand+1
 11327  06F2  0878               	movf	LCD_Char@index,w
 11328  06F3  00F2               	movwf	___wmul@multiplicand
 11329  06F4  2713  3183         	fcall	___wmul
 11330  06F6  0871               	movf	?___wmul+1,w
 11331  06F7  00F9               	movwf	LCD_Char@index+1
 11332  06F8  0870               	movf	?___wmul,w
 11333  06F9  00F8               	movwf	LCD_Char@index
 11334  06FA  0022               	movlb	2	; select bank2
 11335  06FB  138C               	bcf	12,7	;volatile
 11336  06FC  3005               	movlw	5
 11337  06FD  00F7               	movwf	LCD_Char@j
 11338  06FE                     l6524:	
 11339  06FE  0879               	movf	LCD_Char@index+1,w
 11340  06FF  0085               	movwf	5
 11341  0700  0878               	movf	LCD_Char@index,w
 11342  0701  0084               	movwf	4
 11343  0702  3000               	movlw	low (_ASCII| (0+32768))
 11344  0703  0784               	addwf	4,f
 11345  0704  3090               	movlw	high (_ASCII| (0+32768))
 11346  0705  3D85               	addwfc	5,f
 11347  0706  0800               	movf	0,w	;code access
 11348  0707  26DA  3183         	fcall	_SPI_HF_Put
 11349  0709  0AF8               	incf	LCD_Char@index,f
 11350  070A  1903               	skipnz
 11351  070B  0AF9               	incf	LCD_Char@index+1,f
 11352  070C  0BF7               	decfsz	LCD_Char@j,f
 11353  070D  2EFE               	goto	l6524
 11354  070E  3000               	movlw	0
 11355  070F  26DA               	fcall	_SPI_HF_Put
 11356  0710  0022               	movlb	2	; select bank2
 11357  0711  178C               	bsf	12,7	;volatile
 11358  0712  0008               	return
 11359  0713                     __end_of_LCD_Char:	
 11360  0713                     __ptext51:	
 11361 ;; *************** function ___wmul *****************
 11362 ;; Defined at:
 11363 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  multiplier      2    0[COMMON] unsigned int 
 11366 ;;  multiplicand    2    2[COMMON] unsigned int 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  product         2    4[COMMON] unsigned int 
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  2    0[COMMON] unsigned int 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0
 11373 ;; Tracked objects:
 11374 ;;		On entry : 1C/1
 11375 ;;		On exit  : 1C/0
 11376 ;;		Unchanged: 1C/0
 11377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;Total ram usage:        6 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:    1
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_LCD_LargeDigit
 11389 ;;		_LCD_Char
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           
 11394                           ;psect for function ___wmul
 11395  0713                     ___wmul:	
 11396                           
 11397                           ;incstack = 0
 11398                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11399  0713  01F4               	clrf	___wmul@product
 11400  0714  01F5               	clrf	___wmul@product+1
 11401  0715                     l4356:	
 11402  0715  1C70               	btfss	___wmul@multiplier,0
 11403  0716  2F1B               	goto	l4360
 11404  0717  0872               	movf	___wmul@multiplicand,w
 11405  0718  07F4               	addwf	___wmul@product,f
 11406  0719  0873               	movf	___wmul@multiplicand+1,w
 11407  071A  3DF5               	addwfc	___wmul@product+1,f
 11408  071B                     l4360:	
 11409  071B  35F2               	lslf	___wmul@multiplicand,f
 11410  071C  0DF3               	rlf	___wmul@multiplicand+1,f
 11411  071D  36F1               	lsrf	___wmul@multiplier+1,f
 11412  071E  0CF0               	rrf	___wmul@multiplier,f
 11413  071F  0870               	movf	___wmul@multiplier,w
 11414  0720  0471               	iorwf	___wmul@multiplier+1,w
 11415  0721  1D03               	btfss	3,2
 11416  0722  2F15               	goto	l4356
 11417  0723  0875               	movf	___wmul@product+1,w
 11418  0724  00F1               	movwf	?___wmul+1
 11419  0725  0874               	movf	___wmul@product,w
 11420  0726  00F0               	movwf	?___wmul
 11421  0727  0008               	return
 11422  0728                     __end_of___wmul:	
 11423  0728                     __ptext41:	
 11424 ;; *************** function ___awdiv *****************
 11425 ;; Defined at:
 11426 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  divisor         2    0[COMMON] int 
 11429 ;;  dividend        2    2[COMMON] int 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;  quotient        2    6[COMMON] int 
 11432 ;;  sign            1    5[COMMON] unsigned char 
 11433 ;;  counter         1    4[COMMON] unsigned char 
 11434 ;; Return value:  Size  Location     Type
 11435 ;;                  2    0[COMMON] int 
 11436 ;; Registers used:
 11437 ;;		wreg, status,2, status,0
 11438 ;; Tracked objects:
 11439 ;;		On entry : 1F/2
 11440 ;;		On exit  : 1F/2
 11441 ;;		Unchanged: 1F/0
 11442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;Total ram usage:        8 bytes
 11448 ;; Hardware stack levels used:    1
 11449 ;; Hardware stack levels required when called:    1
 11450 ;; This function calls:
 11451 ;;		Nothing
 11452 ;; This function is called by:
 11453 ;;		_DrawLargeTemp
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           
 11458                           ;psect for function ___awdiv
 11459  0728                     ___awdiv:	
 11460                           
 11461                           ;incstack = 0
 11462                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11463  0728  01F5               	clrf	___awdiv@sign
 11464  0729  1FF1               	btfss	___awdiv@divisor+1,7
 11465  072A  2F32               	goto	l4996
 11466  072B  09F0               	comf	___awdiv@divisor,f
 11467  072C  09F1               	comf	___awdiv@divisor+1,f
 11468  072D  0AF0               	incf	___awdiv@divisor,f
 11469  072E  1903               	skipnz
 11470  072F  0AF1               	incf	___awdiv@divisor+1,f
 11471  0730  01F5               	clrf	___awdiv@sign
 11472  0731  0AF5               	incf	___awdiv@sign,f
 11473  0732                     l4996:	
 11474  0732  1FF3               	btfss	___awdiv@dividend+1,7
 11475  0733  2F3B               	goto	l5002
 11476  0734  09F2               	comf	___awdiv@dividend,f
 11477  0735  09F3               	comf	___awdiv@dividend+1,f
 11478  0736  0AF2               	incf	___awdiv@dividend,f
 11479  0737  1903               	skipnz
 11480  0738  0AF3               	incf	___awdiv@dividend+1,f
 11481  0739  3001               	movlw	1
 11482  073A  06F5               	xorwf	___awdiv@sign,f
 11483  073B                     l5002:	
 11484  073B  01F6               	clrf	___awdiv@quotient
 11485  073C  01F7               	clrf	___awdiv@quotient+1
 11486  073D  0870               	movf	___awdiv@divisor,w
 11487  073E  0471               	iorwf	___awdiv@divisor+1,w
 11488  073F  1903               	btfsc	3,2
 11489  0740  2F5B               	goto	l5024
 11490  0741  01F4               	clrf	___awdiv@counter
 11491  0742                     L13:	
 11492  0742  0AF4               	incf	___awdiv@counter,f
 11493  0743  1BF1               	btfsc	___awdiv@divisor+1,7
 11494  0744  2F48               	goto	l5012
 11495  0745  35F0               	lslf	___awdiv@divisor,f
 11496  0746  0DF1               	rlf	___awdiv@divisor+1,f
 11497  0747  2F42               	goto	L13
 11498  0748                     l5012:	
 11499  0748  35F6               	lslf	___awdiv@quotient,f
 11500  0749  0DF7               	rlf	___awdiv@quotient+1,f
 11501  074A  0871               	movf	___awdiv@divisor+1,w
 11502  074B  0273               	subwf	___awdiv@dividend+1,w
 11503  074C  1D03               	skipz
 11504  074D  2F50               	goto	u3155
 11505  074E  0870               	movf	___awdiv@divisor,w
 11506  074F  0272               	subwf	___awdiv@dividend,w
 11507  0750                     u3155:	
 11508  0750  1C03               	skipc
 11509  0751  2F57               	goto	l5020
 11510  0752  0870               	movf	___awdiv@divisor,w
 11511  0753  02F2               	subwf	___awdiv@dividend,f
 11512  0754  0871               	movf	___awdiv@divisor+1,w
 11513  0755  3BF3               	subwfb	___awdiv@dividend+1,f
 11514  0756  1476               	bsf	___awdiv@quotient,0
 11515  0757                     l5020:	
 11516  0757  36F1               	lsrf	___awdiv@divisor+1,f
 11517  0758  0CF0               	rrf	___awdiv@divisor,f
 11518  0759  0BF4               	decfsz	___awdiv@counter,f
 11519  075A  2F48               	goto	l5012
 11520  075B                     l5024:	
 11521  075B  0875               	movf	___awdiv@sign,w
 11522  075C  1903               	btfsc	3,2
 11523  075D  2F63               	goto	l5028
 11524  075E  09F6               	comf	___awdiv@quotient,f
 11525  075F  09F7               	comf	___awdiv@quotient+1,f
 11526  0760  0AF6               	incf	___awdiv@quotient,f
 11527  0761  1903               	skipnz
 11528  0762  0AF7               	incf	___awdiv@quotient+1,f
 11529  0763                     l5028:	
 11530  0763  0877               	movf	___awdiv@quotient+1,w
 11531  0764  00F1               	movwf	?___awdiv+1
 11532  0765  0876               	movf	___awdiv@quotient,w
 11533  0766  00F0               	movwf	?___awdiv
 11534  0767  0008               	return
 11535  0768                     __end_of___awdiv:	
 11536  0768                     __ptext40:	
 11537 ;; *************** function ___awmod *****************
 11538 ;; Defined at:
 11539 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  divisor         2    0[COMMON] int 
 11542 ;;  dividend        2    2[COMMON] int 
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;  sign            1    5[COMMON] unsigned char 
 11545 ;;  counter         1    4[COMMON] unsigned char 
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  2    0[COMMON] int 
 11548 ;; Registers used:
 11549 ;;		wreg, status,2, status,0
 11550 ;; Tracked objects:
 11551 ;;		On entry : 1F/2
 11552 ;;		On exit  : 1F/2
 11553 ;;		Unchanged: 1F/0
 11554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;Total ram usage:        6 bytes
 11560 ;; Hardware stack levels used:    1
 11561 ;; Hardware stack levels required when called:    1
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_DrawLargeTemp
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           
 11570                           ;psect for function ___awmod
 11571  0768                     ___awmod:	
 11572                           
 11573                           ;incstack = 0
 11574                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11575  0768  01F5               	clrf	___awmod@sign
 11576  0769  1FF3               	btfss	___awmod@dividend+1,7
 11577  076A  2F72               	goto	l5040
 11578  076B  09F2               	comf	___awmod@dividend,f
 11579  076C  09F3               	comf	___awmod@dividend+1,f
 11580  076D  0AF2               	incf	___awmod@dividend,f
 11581  076E  1903               	skipnz
 11582  076F  0AF3               	incf	___awmod@dividend+1,f
 11583  0770  01F5               	clrf	___awmod@sign
 11584  0771  0AF5               	incf	___awmod@sign,f
 11585  0772                     l5040:	
 11586  0772  1FF1               	btfss	___awmod@divisor+1,7
 11587  0773  2F79               	goto	l5044
 11588  0774  09F0               	comf	___awmod@divisor,f
 11589  0775  09F1               	comf	___awmod@divisor+1,f
 11590  0776  0AF0               	incf	___awmod@divisor,f
 11591  0777  1903               	skipnz
 11592  0778  0AF1               	incf	___awmod@divisor+1,f
 11593  0779                     l5044:	
 11594  0779  0870               	movf	___awmod@divisor,w
 11595  077A  0471               	iorwf	___awmod@divisor+1,w
 11596  077B  1903               	btfsc	3,2
 11597  077C  2F94               	goto	l5060
 11598  077D  01F4               	clrf	___awmod@counter
 11599  077E                     L12:	
 11600  077E  0AF4               	incf	___awmod@counter,f
 11601  077F  1BF1               	btfsc	___awmod@divisor+1,7
 11602  0780  2F84               	goto	l5052
 11603  0781  35F0               	lslf	___awmod@divisor,f
 11604  0782  0DF1               	rlf	___awmod@divisor+1,f
 11605  0783  2F7E               	goto	L12
 11606  0784                     l5052:	
 11607  0784  0871               	movf	___awmod@divisor+1,w
 11608  0785  0273               	subwf	___awmod@dividend+1,w
 11609  0786  1D03               	skipz
 11610  0787  2F8A               	goto	u3225
 11611  0788  0870               	movf	___awmod@divisor,w
 11612  0789  0272               	subwf	___awmod@dividend,w
 11613  078A                     u3225:	
 11614  078A  1C03               	skipc
 11615  078B  2F90               	goto	l5056
 11616  078C  0870               	movf	___awmod@divisor,w
 11617  078D  02F2               	subwf	___awmod@dividend,f
 11618  078E  0871               	movf	___awmod@divisor+1,w
 11619  078F  3BF3               	subwfb	___awmod@dividend+1,f
 11620  0790                     l5056:	
 11621  0790  36F1               	lsrf	___awmod@divisor+1,f
 11622  0791  0CF0               	rrf	___awmod@divisor,f
 11623  0792  0BF4               	decfsz	___awmod@counter,f
 11624  0793  2F84               	goto	l5052
 11625  0794                     l5060:	
 11626  0794  0875               	movf	___awmod@sign,w
 11627  0795  1903               	btfsc	3,2
 11628  0796  2F9C               	goto	l5064
 11629  0797  09F2               	comf	___awmod@dividend,f
 11630  0798  09F3               	comf	___awmod@dividend+1,f
 11631  0799  0AF2               	incf	___awmod@dividend,f
 11632  079A  1903               	skipnz
 11633  079B  0AF3               	incf	___awmod@dividend+1,f
 11634  079C                     l5064:	
 11635  079C  0873               	movf	___awmod@dividend+1,w
 11636  079D  00F1               	movwf	?___awmod+1
 11637  079E  0872               	movf	___awmod@dividend,w
 11638  079F  00F0               	movwf	?___awmod
 11639  07A0  0008               	return
 11640  07A1                     __end_of___awmod:	
 11641  07A1                     __ptext54:	
 11642 ;; *************** function _LCD_Init *****************
 11643 ;; Defined at:
 11644 ;;		line 336 in file "../drv_lcd.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;		None
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;		None
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		wreg, status,2, status,0, pclath, cstack
 11653 ;; Tracked objects:
 11654 ;;		On entry : B1F/0
 11655 ;;		On exit  : 1F/2
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;Total ram usage:        0 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    3
 11665 ;; This function calls:
 11666 ;;		_LCDWriteCMD
 11667 ;; This function is called by:
 11668 ;;		_main
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           
 11673                           ;psect for function _LCD_Init
 11674  07A1                     _LCD_Init:	
 11675                           
 11676                           ;incstack = 0
 11677                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 11678  07A1  0022               	movlb	2	; select bank2
 11679  07A2  178C               	bsf	12,7	;volatile
 11680  07A3  108C               	bcf	12,1	;volatile
 11681  07A4  148C               	bsf	12,1	;volatile
 11682  07A5  3021               	movlw	33
 11683  07A6  27B6  3183         	fcall	_LCDWriteCMD
 11684  07A8  30A5               	movlw	165
 11685  07A9  27B6  3183         	fcall	_LCDWriteCMD
 11686  07AB  3004               	movlw	4
 11687  07AC  27B6  3183         	fcall	_LCDWriteCMD
 11688  07AE  3013               	movlw	19
 11689  07AF  27B6  3183         	fcall	_LCDWriteCMD
 11690  07B1  3020               	movlw	32
 11691  07B2  27B6  3183         	fcall	_LCDWriteCMD
 11692  07B4  300C               	movlw	12
 11693  07B5  2FB6               	ljmp	_LCDWriteCMD
 11694  07B6                     __end_of_LCD_Init:	
 11695  07B6                     __ptext55:	
 11696 ;; *************** function _LCDWriteCMD *****************
 11697 ;; Defined at:
 11698 ;;		line 176 in file "../drv_lcd.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  data            1    wreg     unsigned char 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  data            1    1[COMMON] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0, pclath, cstack
 11707 ;; Tracked objects:
 11708 ;;		On entry : 1D/0
 11709 ;;		On exit  : 1F/2
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;Total ram usage:        1 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    2
 11719 ;; This function calls:
 11720 ;;		_SPI_HF_Put
 11721 ;; This function is called by:
 11722 ;;		_LCD_XY
 11723 ;;		_LCD_Init
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           
 11728                           ;psect for function _LCDWriteCMD
 11729  07B6                     _LCDWriteCMD:	
 11730                           
 11731                           ;incstack = 0
 11732                           ; Regs used in _LCDWriteCMD: [wreg+status,2+status,0+pclath+cstack]
 11733  07B6  00F1               	movwf	LCDWriteCMD@data
 11734  07B7  0022               	movlb	2	; select bank2
 11735  07B8  110D               	bcf	13,2	;volatile
 11736  07B9  138C               	bcf	12,7	;volatile
 11737  07BA  0871               	movf	LCDWriteCMD@data,w
 11738  07BB  26DA               	fcall	_SPI_HF_Put
 11739  07BC  0022               	movlb	2	; select bank2
 11740  07BD  178C               	bsf	12,7	;volatile
 11741  07BE  150D               	bsf	13,2	;volatile
 11742  07BF  0008               	return
 11743  07C0                     __end_of_LCDWriteCMD:	
 11744  07C0                     __ptext47:	
 11745 ;; *************** function ___lbdiv *****************
 11746 ;; Defined at:
 11747 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;  dividend        1    wreg     unsigned char 
 11750 ;;  divisor         1    5[COMMON] unsigned char 
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  dividend        1    6[COMMON] unsigned char 
 11753 ;;  quotient        1    8[COMMON] unsigned char 
 11754 ;;  counter         1    7[COMMON] unsigned char 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      unsigned char 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2, status,0
 11759 ;; Tracked objects:
 11760 ;;		On entry : 1E/1
 11761 ;;		On exit  : 1E/0
 11762 ;;		Unchanged: 1E/0
 11763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11764 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;Total ram usage:        4 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    1
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_RTC_TimeToNumber
 11775 ;;		_DrawLargeHum
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function ___lbdiv
 11781  07C0                     ___lbdiv:	
 11782                           
 11783                           ;incstack = 0
 11784                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 11785  07C0  00F6               	movwf	___lbdiv@dividend
 11786  07C1  01F8               	clrf	___lbdiv@quotient
 11787  07C2  0875               	movf	___lbdiv@divisor,w
 11788  07C3  1903               	btfsc	3,2
 11789  07C4  2FD6               	goto	l4390
 11790  07C5  01F7               	clrf	___lbdiv@counter
 11791  07C6                     l4376:	
 11792  07C6  0AF7               	incf	___lbdiv@counter,f
 11793  07C7  1BF5               	btfsc	___lbdiv@divisor,7
 11794  07C8  2FCB               	goto	l1858
 11795  07C9  35F5               	lslf	___lbdiv@divisor,f
 11796  07CA  2FC6               	goto	l4376
 11797  07CB                     l1858:	
 11798  07CB  35F8               	lslf	___lbdiv@quotient,f
 11799  07CC  0875               	movf	___lbdiv@divisor,w
 11800  07CD  0276               	subwf	___lbdiv@dividend,w
 11801  07CE  1C03               	skipc
 11802  07CF  2FD3               	goto	l4386
 11803  07D0  0875               	movf	___lbdiv@divisor,w
 11804  07D1  02F6               	subwf	___lbdiv@dividend,f
 11805  07D2  1478               	bsf	___lbdiv@quotient,0
 11806  07D3                     l4386:	
 11807  07D3  36F5               	lsrf	___lbdiv@divisor,f
 11808  07D4  0BF7               	decfsz	___lbdiv@counter,f
 11809  07D5  2FCB               	goto	l1858
 11810  07D6                     l4390:	
 11811  07D6  0878               	movf	___lbdiv@quotient,w
 11812  07D7  0008               	return
 11813  07D8                     __end_of___lbdiv:	
 11814  07D8                     PL2:	
 11815  07D8  0879               	movf	LCD_LargeDigit@offs+1,w
 11816  07D9  0085               	movwf	5
 11817  07DA  0878               	movf	LCD_LargeDigit@offs,w
 11818  07DB  0084               	movwf	4
 11819  07DC  30D6               	movlw	low (_LARGE| (0+32768))
 11820  07DD  0784               	addwf	4,f
 11821  07DE  3091               	movlw	high (_LARGE| (0+32768))
 11822  07DF  3D85               	addwfc	5,f
 11823  07E0  0800               	movf	0,w	;code access
 11824  07E1  0008               	return
 11825  07E2                     __end_ofPL2:	
 11826  07E2                     PL12:	
 11827  07E2  300A               	movlw	10
 11828  07E3  00F0               	movwf	___awmod@divisor
 11829  07E4  01F1               	clrf	___awmod@divisor+1
 11830  07E5  087B               	movf	DrawLargeTemp@t+1,w
 11831  07E6  00F3               	movwf	___awmod@dividend+1
 11832  07E7  087A               	movf	DrawLargeTemp@t,w
 11833  07E8  00F2               	movwf	___awmod@dividend
 11834  07E9  0008               	return
 11835  07EA                     __end_ofPL12:	
 11836  07EA                     PL14:	
 11837  07EA  0022               	movlb	2	; select bank2
 11838  07EB  178C               	bsf	12,7	;volatile
 11839  07EC  0020               	movlb	0	; select bank0
 11840  07ED  085A               	movf	_yp,w
 11841  07EE  3E01               	addlw	1
 11842  07EF  00F2               	movwf	LCD_XY@y
 11843  07F0  085B               	movf	_xp,w
 11844  07F1  0008               	return
 11845  07F2                     __end_ofPL14:	
 11846  07F2                     PL16:	
 11847  07F2  300A               	movlw	10
 11848  07F3  00F0               	movwf	___awdiv@divisor
 11849  07F4  01F1               	clrf	___awdiv@divisor+1
 11850  07F5  087B               	movf	DrawLargeTemp@t+1,w
 11851  07F6  00F3               	movwf	___awdiv@dividend+1
 11852  07F7  087A               	movf	DrawLargeTemp@t,w
 11853  07F8  00F2               	movwf	___awdiv@dividend
 11854  07F9  0008               	return
 11855  07FA                     __end_ofPL16:	
 11856                           
 11857                           	psect	text46
 11858  14C9                     __ptext46:	
 11859 ;; *************** function ___lbmod *****************
 11860 ;; Defined at:
 11861 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbmod.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  dividend        1    wreg     unsigned char 
 11864 ;;  divisor         1    0[COMMON] unsigned char 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  dividend        1    2[COMMON] unsigned char 
 11867 ;;  rem             1    4[COMMON] unsigned char 
 11868 ;;  counter         1    3[COMMON] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  1    wreg      unsigned char 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0
 11873 ;; Tracked objects:
 11874 ;;		On entry : 1F/0
 11875 ;;		On exit  : 1F/0
 11876 ;;		Unchanged: 1F/0
 11877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;Total ram usage:        5 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    1
 11885 ;; This function calls:
 11886 ;;		Nothing
 11887 ;; This function is called by:
 11888 ;;		_DrawLargeHum
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           
 11893                           ;psect for function ___lbmod
 11894  14C9                     ___lbmod:	
 11895                           
 11896                           ;incstack = 0
 11897                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 11898  14C9  00F2               	movwf	___lbmod@dividend
 11899  14CA  3008               	movlw	8
 11900  14CB  00F3               	movwf	___lbmod@counter
 11901  14CC  01F4               	clrf	___lbmod@rem
 11902  14CD                     l6912:	
 11903  14CD  0872               	movf	___lbmod@dividend,w
 11904  14CE  00F1               	movwf	??___lbmod
 11905  14CF  3007               	movlw	7
 11906  14D0                     u5325:	
 11907  14D0  36F1               	lsrf	??___lbmod,f
 11908  14D1  0B89               	decfsz	9,f
 11909  14D2  2CD0               	goto	u5325
 11910  14D3  3574               	lslf	___lbmod@rem,w
 11911  14D4  0471               	iorwf	??___lbmod,w
 11912  14D5  00F4               	movwf	___lbmod@rem
 11913  14D6  35F2               	lslf	___lbmod@dividend,f
 11914  14D7  0870               	movf	___lbmod@divisor,w
 11915  14D8  0274               	subwf	___lbmod@rem,w
 11916  14D9  1C03               	skipc
 11917  14DA  2CDD               	goto	l6920
 11918  14DB  0870               	movf	___lbmod@divisor,w
 11919  14DC  02F4               	subwf	___lbmod@rem,f
 11920  14DD                     l6920:	
 11921  14DD  0BF3               	decfsz	___lbmod@counter,f
 11922  14DE  2CCD               	goto	l6912
 11923  14DF  0874               	movf	___lbmod@rem,w
 11924  14E0  0008               	return
 11925  14E1                     __end_of___lbmod:	
 11926                           
 11927                           	psect	text52
 11928  14FD                     __ptext52:	
 11929 ;; *************** function _MNU_Init *****************
 11930 ;; Defined at:
 11931 ;;		line 266 in file "../app_Menu.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;		None
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      void 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 1F/1
 11942 ;;		On exit  : 1F/2
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        0 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    3
 11952 ;; This function calls:
 11953 ;;		_LCD_ClearLCD
 11954 ;; This function is called by:
 11955 ;;		_main
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           
 11960                           ;psect for function _MNU_Init
 11961  14FD                     _MNU_Init:	
 11962                           
 11963                           ;incstack = 0
 11964                           ; Regs used in _MNU_Init: [wreg+status,2+status,0+pclath+cstack]
 11965  14FD  0020               	movlb	0	; select bank0
 11966  14FE  30FF               	movlw	255
 11967  14FF  01C8               	clrf	_Menu
 11968  1500  01C5               	clrf	_u8editmode
 11969  1501  01C7               	clrf	_Line
 11970  1502  01C3               	clrf	_dotctr
 11971  1503  00C4               	movwf	_u8menuswitch
 11972  1504  2D05               	ljmp	l6926
 11973  1505                     __end_of_MNU_Init:	
 11974  1505                     __ptext53:	
 11975 ;; *************** function _LCD_ClearLCD *****************
 11976 ;; Defined at:
 11977 ;;		line 201 in file "../drv_lcd.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;		None
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;  index           2    1[COMMON] short 
 11982 ;; Return value:  Size  Location     Type
 11983 ;;                  1    wreg      void 
 11984 ;; Registers used:
 11985 ;;		wreg, status,2, status,0, pclath, cstack
 11986 ;; Tracked objects:
 11987 ;;		On entry : 1F/0
 11988 ;;		On exit  : 1F/2
 11989 ;;		Unchanged: 0/0
 11990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;Total ram usage:        2 bytes
 11996 ;; Hardware stack levels used:    1
 11997 ;; Hardware stack levels required when called:    2
 11998 ;; This function calls:
 11999 ;;		_SPI_HF_Put
 12000 ;; This function is called by:
 12001 ;;		_MNU_Init
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           
 12006                           ;psect for function _LCD_ClearLCD
 12007  1505                     _LCD_ClearLCD:	
 12008  1505                     l6926:	
 12009                           ;incstack = 0
 12010                           ; Regs used in _LCD_ClearLCD: [wreg+status,2+status,0+pclath+cstack]
 12011                           
 12012  1505  30F8               	movlw	248
 12013  1506  00F1               	movwf	LCD_ClearLCD@index
 12014  1507  3001               	movlw	1
 12015  1508  00F2               	movwf	LCD_ClearLCD@index+1
 12016  1509  0022               	movlb	2	; select bank2
 12017  150A  138C               	bcf	12,7	;volatile
 12018  150B                     l6932:	
 12019  150B  30FF               	movlw	-1
 12020  150C  07F1               	addwf	LCD_ClearLCD@index,f
 12021  150D  1C03               	skipc
 12022  150E  03F2               	decf	LCD_ClearLCD@index+1,f
 12023  150F  0F71               	incfsz	LCD_ClearLCD@index,w
 12024  1510  2D14               	goto	l6930
 12025  1511  0A72               	incf	LCD_ClearLCD@index+1,w
 12026  1512  1903               	btfsc	3,2
 12027  1513  2D19               	goto	l192
 12028  1514                     l6930:	
 12029  1514  3000               	movlw	0
 12030  1515  3186  26DA  3194   	fcall	_SPI_HF_Put
 12031  1518  2D0B               	goto	l6932
 12032  1519                     l192:	
 12033  1519  0022               	movlb	2	; select bank2
 12034  151A  178C               	bsf	12,7	;volatile
 12035  151B  0008               	return
 12036  151C                     __end_of_LCD_ClearLCD:	
 12037                           
 12038                           	psect	text56
 12039  0808                     __ptext56:	
 12040 ;; *************** function _IO_TaskSlow *****************
 12041 ;; Defined at:
 12042 ;;		line 159 in file "../drv_io.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2, status,0, pclath, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 1F/0
 12053 ;;		On exit  : 1F/1
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;Total ram usage:        0 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    2
 12063 ;; This function calls:
 12064 ;;		_IO_CalcTemp
 12065 ;;		_IO_StartTimer2
 12066 ;;		___lmul
 12067 ;; This function is called by:
 12068 ;;		_main
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           
 12073                           ;psect for function _IO_TaskSlow
 12074  0808                     _IO_TaskSlow:	
 12075                           
 12076                           ;incstack = 0
 12077                           ; Regs used in _IO_TaskSlow: [wreg+status,2+status,0+pclath+cstack]
 12078  0808  0021               	movlb	1	; select bank1
 12079  0809  149D               	bsf	29,1	;volatile
 12080  080A  3013               	movlw	19
 12081  080B  207A  3188         	fcall	_IO_StartTimer2
 12082  080D  0020               	movlb	0	; select bank0
 12083  080E  0831               	movf	_PIRFlags+1,w
 12084  080F  1D03               	btfss	3,2
 12085  0810  03B1               	decf	_PIRFlags+1,f
 12086  0811  0858               	movf	_AdcTempCnt,w
 12087  0812  1903               	btfsc	3,2
 12088  0813  2816               	goto	l5992
 12089  0814  03D8               	decf	_AdcTempCnt,f
 12090  0815  2843               	goto	l394
 12091  0816                     l5992:	
 12092  0816  0021               	movlb	1	; select bank1
 12093  0817  085B               	movf	(_RAM_PARAM^(0+128)+1),w
 12094  0818  00F0               	movwf	___lmul@multiplier
 12095  0819  085C               	movf	((_RAM_PARAM+1)^(0+128)+1),w
 12096  081A  00F1               	movwf	___lmul@multiplier+1
 12097  081B  01F2               	clrf	___lmul@multiplier+2
 12098  081C  01F3               	clrf	___lmul@multiplier+3
 12099  081D  0846               	movf	(_AdcTempFilt+3)^(0+128),w
 12100  081E  00F7               	movwf	___lmul@multiplicand+3
 12101  081F  0845               	movf	(_AdcTempFilt+2)^(0+128),w
 12102  0820  00F6               	movwf	___lmul@multiplicand+2
 12103  0821  0844               	movf	(_AdcTempFilt+1)^(0+128),w
 12104  0822  00F5               	movwf	___lmul@multiplicand+1
 12105  0823  0843               	movf	_AdcTempFilt^(0+128),w
 12106  0824  00F4               	movwf	___lmul@multiplicand
 12107  0825  2084  3188         	fcall	___lmul
 12108  0827  0873               	movf	?___lmul+3,w
 12109  0828  00C6               	movwf	(_AdcTempFilt+3)^(0+128)
 12110  0829  0872               	movf	?___lmul+2,w
 12111  082A  00C5               	movwf	(_AdcTempFilt+2)^(0+128)
 12112  082B  0871               	movf	?___lmul+1,w
 12113  082C  00C4               	movwf	(_AdcTempFilt+1)^(0+128)
 12114  082D  0870               	movf	?___lmul,w
 12115  082E  00C3               	movwf	_AdcTempFilt^(0+128)
 12116  082F  3000               	movlw	0
 12117  0830  07C3               	addwf	_AdcTempFilt^(0+128),f
 12118  0831  3080               	movlw	128
 12119  0832  3DC4               	addwfc	(_AdcTempFilt+1)^(0+128),f
 12120  0833  3000               	movlw	0
 12121  0834  3DC5               	addwfc	(_AdcTempFilt+2)^(0+128),f
 12122  0835  3DC6               	addwfc	(_AdcTempFilt+3)^(0+128),f
 12123  0836  0846               	movf	((_AdcTempFilt+1)^(0+128)+2),w
 12124  0837  00D2               	movwf	(_AdcTemp+1)^(0+128)
 12125  0838  0845               	movf	(_AdcTempFilt^(0+128)+2),w
 12126  0839  00D1               	movwf	_AdcTemp^(0+128)
 12127  083A  301F               	movlw	31
 12128  083B  01C3               	clrf	_AdcTempFilt^(0+128)
 12129  083C  01C4               	clrf	(_AdcTempFilt+1)^(0+128)
 12130  083D  01C5               	clrf	(_AdcTempFilt+2)^(0+128)
 12131  083E  01C6               	clrf	(_AdcTempFilt+3)^(0+128)
 12132  083F  0020               	movlb	0	; select bank0
 12133  0840  00D8               	movwf	_AdcTempCnt
 12134  0841  2067  3188         	fcall	_IO_CalcTemp
 12135  0843                     l394:	
 12136  0843  0021               	movlb	1	; select bank1
 12137  0844  189D               	btfsc	29,1	;volatile
 12138  0845  2843               	goto	l394
 12139  0846  081C               	movf	28,w	;volatile
 12140  0847  0020               	movlb	0	; select bank0
 12141  0848  00B3               	movwf	_AdcRaw+1
 12142  0849  01B2               	clrf	_AdcRaw
 12143  084A  0021               	movlb	1	; select bank1
 12144  084B  081B               	movf	27,w	;volatile
 12145  084C  0020               	movlb	0	; select bank0
 12146  084D  04B2               	iorwf	_AdcRaw,f
 12147  084E  0832               	movf	_AdcRaw,w
 12148  084F  0021               	movlb	1	; select bank1
 12149  0850  07C3               	addwf	_AdcTempFilt^(0+128),f
 12150  0851  0020               	movlb	0	; select bank0
 12151  0852  0833               	movf	_AdcRaw+1,w
 12152  0853  0021               	movlb	1	; select bank1
 12153  0854  3DC4               	addwfc	(_AdcTempFilt+1)^(0+128),f
 12154  0855  3000               	movlw	0
 12155  0856  3DC5               	addwfc	(_AdcTempFilt+2)^(0+128),f
 12156  0857  3DC6               	addwfc	(_AdcTempFilt+3)^(0+128),f
 12157  0858                     l397:	
 12158  0858  0020               	movlb	0	; select bank0
 12159  0859  1D93               	btfss	19,3	;volatile
 12160  085A  2858               	goto	l397
 12161  085B  0021               	movlb	1	; select bank1
 12162  085C  149D               	bsf	29,1	;volatile
 12163  085D                     l400:	
 12164  085D  189D               	btfsc	29,1	;volatile
 12165  085E  285D               	goto	l400
 12166  085F  081B               	movf	27,w	;volatile
 12167  0860  07C3               	addwf	_AdcTempFilt^(0+128),f
 12168  0861  081C               	movf	28,w	;volatile
 12169  0862  3DC4               	addwfc	(_AdcTempFilt+1)^(0+128),f
 12170  0863  3000               	movlw	0
 12171  0864  3DC5               	addwfc	(_AdcTempFilt+2)^(0+128),f
 12172  0865  3DC6               	addwfc	(_AdcTempFilt+3)^(0+128),f
 12173  0866  0008               	return
 12174  0867                     __end_of_IO_TaskSlow:	
 12175  0867                     __ptext59:	
 12176 ;; *************** function _IO_CalcTemp *****************
 12177 ;; Defined at:
 12178 ;;		line 42 in file "../drv_io.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;		None
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;  offs8           2    0[COMMON] unsigned short 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		wreg, status,2, status,0
 12187 ;; Tracked objects:
 12188 ;;		On entry : 1F/0
 12189 ;;		On exit  : 1F/1
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;Total ram usage:        2 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:    1
 12199 ;; This function calls:
 12200 ;;		Nothing
 12201 ;; This function is called by:
 12202 ;;		_IO_TaskSlow
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           
 12207                           ;psect for function _IO_CalcTemp
 12208  0867                     _IO_CalcTemp:	
 12209                           
 12210                           ;incstack = 0
 12211                           ; Regs used in _IO_CalcTemp: [wreg+status,2+status,0]
 12212  0867  0021               	movlb	1	; select bank1
 12213  0868  085A               	movf	_RAM_PARAM^(0+128),w
 12214  0869  00F0               	movwf	IO_CalcTemp@offs8
 12215  086A  302C               	movlw	44
 12216  086B  01F1               	clrf	IO_CalcTemp@offs8+1
 12217  086C  07F0               	addwf	IO_CalcTemp@offs8,f
 12218  086D  3001               	movlw	1
 12219  086E  3DF1               	addwfc	IO_CalcTemp@offs8+1,f
 12220  086F  0852               	movf	(_AdcTemp+1)^(0+128),w
 12221  0870  00D0               	movwf	(_sTemp+1)^(0+128)
 12222  0871  0851               	movf	_AdcTemp^(0+128),w
 12223  0872  00CF               	movwf	_sTemp^(0+128)
 12224  0873  0870               	movf	IO_CalcTemp@offs8,w
 12225  0874  024F               	subwf	_sTemp^(0+128),w
 12226  0875  00CF               	movwf	_sTemp^(0+128)
 12227  0876  0871               	movf	IO_CalcTemp@offs8+1,w
 12228  0877  3B50               	subwfb	(_sTemp+1)^(0+128),w
 12229  0878  00D0               	movwf	(_sTemp+1)^(0+128)
 12230  0879  0008               	return
 12231  087A                     __end_of_IO_CalcTemp:	
 12232  087A                     __ptext58:	
 12233 ;; *************** function _IO_StartTimer2 *****************
 12234 ;; Defined at:
 12235 ;;		line 235 in file "../drv_io.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  Time            1    wreg     unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;  Time            1    0[COMMON] unsigned char 
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      void 
 12242 ;; Registers used:
 12243 ;;		wreg
 12244 ;; Tracked objects:
 12245 ;;		On entry : 1F/1
 12246 ;;		On exit  : 1F/8
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12253 ;;Total ram usage:        1 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    1
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		_IO_TaskSlow
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _IO_StartTimer2
 12265  087A                     _IO_StartTimer2:	
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _IO_StartTimer2: [wreg]
 12269  087A  00F0               	movwf	IO_StartTimer2@Time
 12270  087B  0028               	movlb	8	; select bank8
 12271  087C  111E               	bcf	30,2	;volatile
 12272  087D  0870               	movf	IO_StartTimer2@Time,w
 12273  087E  009D               	movwf	29	;volatile
 12274  087F  0020               	movlb	0	; select bank0
 12275  0880  1193               	bcf	19,3	;volatile
 12276  0881  0028               	movlb	8	; select bank8
 12277  0882  151E               	bsf	30,2	;volatile
 12278  0883  0008               	return
 12279  0884                     __end_of_IO_StartTimer2:	
 12280  0884                     __ptext57:	
 12281 ;; *************** function ___lmul *****************
 12282 ;; Defined at:
 12283 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  multiplier      4    0[COMMON] unsigned long 
 12286 ;;  multiplicand    4    4[COMMON] unsigned long 
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;  product         4    8[COMMON] unsigned long 
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  4    0[COMMON] unsigned long 
 12291 ;; Registers used:
 12292 ;;		wreg, status,2, status,0
 12293 ;; Tracked objects:
 12294 ;;		On entry : 1F/1
 12295 ;;		On exit  : 1F/1
 12296 ;;		Unchanged: 1F/0
 12297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;Total ram usage:       12 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    1
 12305 ;; This function calls:
 12306 ;;		Nothing
 12307 ;; This function is called by:
 12308 ;;		_IO_TaskSlow
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           
 12313                           ;psect for function ___lmul
 12314  0884                     ___lmul:	
 12315                           
 12316                           ;incstack = 0
 12317                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12318  0884  01F8               	clrf	___lmul@product
 12319  0885  01F9               	clrf	___lmul@product+1
 12320  0886  01FA               	clrf	___lmul@product+2
 12321  0887  01FB               	clrf	___lmul@product+3
 12322  0888                     l1607:	
 12323  0888  1C70               	btfss	___lmul@multiplier,0
 12324  0889  2892               	goto	l5494
 12325  088A  0874               	movf	___lmul@multiplicand,w
 12326  088B  07F8               	addwf	___lmul@product,f
 12327  088C  0875               	movf	___lmul@multiplicand+1,w
 12328  088D  3DF9               	addwfc	___lmul@product+1,f
 12329  088E  0876               	movf	___lmul@multiplicand+2,w
 12330  088F  3DFA               	addwfc	___lmul@product+2,f
 12331  0890  0877               	movf	___lmul@multiplicand+3,w
 12332  0891  3DFB               	addwfc	___lmul@product+3,f
 12333  0892                     l5494:	
 12334  0892  35F4               	lslf	___lmul@multiplicand,f
 12335  0893  0DF5               	rlf	___lmul@multiplicand+1,f
 12336  0894  0DF6               	rlf	___lmul@multiplicand+2,f
 12337  0895  0DF7               	rlf	___lmul@multiplicand+3,f
 12338  0896  36F3               	lsrf	___lmul@multiplier+3,f
 12339  0897  0CF2               	rrf	___lmul@multiplier+2,f
 12340  0898  0CF1               	rrf	___lmul@multiplier+1,f
 12341  0899  0CF0               	rrf	___lmul@multiplier,f
 12342  089A  0873               	movf	___lmul@multiplier+3,w
 12343  089B  0472               	iorwf	___lmul@multiplier+2,w
 12344  089C  0471               	iorwf	___lmul@multiplier+1,w
 12345  089D  0470               	iorwf	___lmul@multiplier,w
 12346  089E  1D03               	skipz
 12347  089F  2888               	goto	l1607
 12348  08A0  087B               	movf	___lmul@product+3,w
 12349  08A1  00F3               	movwf	?___lmul+3
 12350  08A2  087A               	movf	___lmul@product+2,w
 12351  08A3  00F2               	movwf	?___lmul+2
 12352  08A4  0879               	movf	___lmul@product+1,w
 12353  08A5  00F1               	movwf	?___lmul+1
 12354  08A6  0878               	movf	___lmul@product,w
 12355  08A7  00F0               	movwf	?___lmul
 12356  08A8  0008               	return
 12357  08A9                     __end_of___lmul:	
 12358                           
 12359                           	psect	text60
 12360  1618                     __ptext60:	
 12361 ;; *************** function _IO_TaskFast *****************
 12362 ;; Defined at:
 12363 ;;		line 81 in file "../drv_io.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;		None
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  bUV             1    1[COMMON] unsigned char 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg, status,2, status,0
 12372 ;; Tracked objects:
 12373 ;;		On entry : 1F/1
 12374 ;;		On exit  : 1F/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;Total ram usage:        2 bytes
 12382 ;; Hardware stack levels used:    1
 12383 ;; Hardware stack levels required when called:    1
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_main
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           
 12391                           
 12392                           ;psect for function _IO_TaskFast
 12393  1618                     _IO_TaskFast:	
 12394                           
 12395                           ;incstack = 0
 12396                           ; Regs used in _IO_TaskFast: [wreg+status,2+status,0]
 12397  1618  01F1               	clrf	IO_TaskFast@bUV
 12398  1619  0020               	movlb	0	; select bank0
 12399  161A  1E8D               	btfss	13,5	;volatile
 12400  161B  2E26               	goto	l367
 12401  161C  18B0               	btfsc	_PIRFlags,1
 12402  161D  2E27               	goto	l5730
 12403  161E  14B0               	bsf	_PIRFlags,1
 12404  161F  0831               	movf	_PIRFlags+1,w
 12405  1620  1D03               	btfss	3,2
 12406  1621  2E24               	goto	l370
 12407  1622  1430               	bsf	_PIRFlags,0
 12408  1623  2E27               	goto	l5730
 12409  1624                     l370:	
 12410  1624  1030               	bcf	_PIRFlags,0
 12411  1625  2E27               	goto	l5730
 12412  1626                     l367:	
 12413  1626  10B0               	bcf	_PIRFlags,1
 12414  1627                     l5730:	
 12415  1627  30C0               	movlw	192
 12416  1628  050D               	andwf	13,w	;volatile
 12417  1629  00F0               	movwf	??_IO_TaskFast
 12418  162A  3AC0               	xorlw	192
 12419  162B  1D03               	btfss	3,2
 12420  162C  2E2F               	goto	l373
 12421  162D  01F1               	clrf	IO_TaskFast@bUV
 12422  162E  0AF1               	incf	IO_TaskFast@bUV,f
 12423  162F                     l373:	
 12424  162F  35D7               	lslf	_SW1buf,f
 12425  1630  1B8D               	btfsc	13,7	;volatile
 12426  1631  2E36               	goto	l5738
 12427  1632  0871               	movf	IO_TaskFast@bUV,w
 12428  1633  1D03               	btfss	3,2
 12429  1634  2E36               	goto	l5738
 12430  1635  1457               	bsf	_SW1buf,0
 12431  1636                     l5738:	
 12432  1636  3007               	movlw	7
 12433  1637  0557               	andwf	_SW1buf,w
 12434  1638  00F0               	movwf	??_IO_TaskFast
 12435  1639  3A07               	xorlw	7
 12436  163A  1D03               	btfss	3,2
 12437  163B  2E4D               	goto	l5758
 12438  163C  1855               	btfsc	_SWdeb1,0
 12439  163D  2E42               	goto	L14
 12440  163E  3014               	movlw	20
 12441  163F  14D5               	bsf	_SWdeb1,1
 12442  1640  00D3               	movwf	_SWcnt1
 12443  1641  1455               	bsf	_SWdeb1,0
 12444  1642                     L14:	
 12445  1642  0853               	movf	_SWcnt1,w
 12446  1643  1903               	btfsc	3,2
 12447  1644  2E53               	goto	l5764
 12448  1645  03D3               	decf	_SWcnt1,f
 12449  1646  0853               	movf	_SWcnt1,w
 12450  1647  1D03               	btfss	3,2
 12451  1648  2E53               	goto	l5764
 12452  1649  3014               	movlw	20
 12453  164A  00D3               	movwf	_SWcnt1
 12454  164B  14D5               	bsf	_SWdeb1,1
 12455  164C  2E53               	goto	l5764
 12456  164D                     l5758:	
 12457  164D  0857               	movf	_SW1buf,w
 12458  164E  3907               	andlw	7
 12459  164F  1D03               	btfss	3,2
 12460  1650  2E53               	goto	l5764
 12461  1651  1055               	bcf	_SWdeb1,0
 12462  1652  01D3               	clrf	_SWcnt1
 12463  1653                     l5764:	
 12464  1653  35D6               	lslf	_SW2buf,f
 12465  1654  1B0D               	btfsc	13,6	;volatile
 12466  1655  2E5A               	goto	l5772
 12467  1656  0871               	movf	IO_TaskFast@bUV,w
 12468  1657  1D03               	btfss	3,2
 12469  1658  2E5A               	goto	l5772
 12470  1659  1456               	bsf	_SW2buf,0
 12471  165A                     l5772:	
 12472  165A  3007               	movlw	7
 12473  165B  0556               	andwf	_SW2buf,w
 12474  165C  00F0               	movwf	??_IO_TaskFast
 12475  165D  3A07               	xorlw	7
 12476  165E  1D03               	btfss	3,2
 12477  165F  2E71               	goto	l5792
 12478  1660  1854               	btfsc	_SWdeb2,0
 12479  1661  2E66               	goto	L15
 12480  1662  3014               	movlw	20
 12481  1663  14D4               	bsf	_SWdeb2,1
 12482  1664  00D2               	movwf	_SWcnt2
 12483  1665  1454               	bsf	_SWdeb2,0
 12484  1666                     L15:	
 12485  1666  0852               	movf	_SWcnt2,w
 12486  1667  1903               	btfsc	3,2
 12487  1668  0008               	return
 12488  1669  03D2               	decf	_SWcnt2,f
 12489  166A  0852               	movf	_SWcnt2,w
 12490  166B  1D03               	btfss	3,2
 12491  166C  0008               	return
 12492  166D  3014               	movlw	20
 12493  166E  00D2               	movwf	_SWcnt2
 12494  166F  14D4               	bsf	_SWdeb2,1
 12495  1670  0008               	return
 12496  1671                     l5792:	
 12497  1671  0856               	movf	_SW2buf,w
 12498  1672  3907               	andlw	7
 12499  1673  1D03               	btfss	3,2
 12500  1674  0008               	return
 12501  1675  1054               	bcf	_SWdeb2,0
 12502  1676  01D2               	clrf	_SWcnt2
 12503  1677  0008               	return
 12504  1678                     __end_of_IO_TaskFast:	
 12505                           
 12506                           	psect	text61
 12507  151C                     __ptext61:	
 12508 ;; *************** function _IO_Init *****************
 12509 ;; Defined at:
 12510 ;;		line 196 in file "../drv_io.c"
 12511 ;; Parameters:    Size  Location     Type
 12512 ;;		None
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;		None
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg, status,2
 12519 ;; Tracked objects:
 12520 ;;		On entry : B1F/2
 12521 ;;		On exit  : B1F/0
 12522 ;;		Unchanged: B00/0
 12523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;Total ram usage:        0 bytes
 12529 ;; Hardware stack levels used:    1
 12530 ;; Hardware stack levels required when called:    1
 12531 ;; This function calls:
 12532 ;;		Nothing
 12533 ;; This function is called by:
 12534 ;;		_main
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           
 12539                           ;psect for function _IO_Init
 12540  151C                     _IO_Init:	
 12541                           
 12542                           ;incstack = 0
 12543                           ; Regs used in _IO_Init: [wreg+status,2]
 12544  151C  0021               	movlb	1	; select bank1
 12545  151D  019D               	clrf	29	;volatile
 12546  151E  3080               	movlw	128
 12547  151F  009E               	movwf	30	;volatile
 12548  1520  141D               	bsf	29,0	;volatile
 12549  1521  303E               	movlw	62
 12550  1522  0020               	movlb	0	; select bank0
 12551  1523  00B1               	movwf	_PIRFlags+1
 12552  1524  301F               	movlw	31
 12553  1525  00D8               	movwf	_AdcTempCnt
 12554  1526  0021               	movlb	1	; select bank1
 12555  1527  149D               	bsf	29,1	;volatile
 12556  1528  301B               	movlw	27
 12557  1529  0028               	movlb	8	; select bank8
 12558  152A  0097               	movwf	23	;volatile
 12559  152B  0021               	movlb	1	; select bank1
 12560  152C  1093               	bcf	19,1	;volatile
 12561  152D  0028               	movlb	8	; select bank8
 12562  152E  009E               	movwf	30	;volatile
 12563  152F  0021               	movlb	1	; select bank1
 12564  1530  1193               	bcf	19,3	;volatile
 12565  1531  0020               	movlb	0	; select bank0
 12566  1532  01D4               	clrf	_SWdeb2
 12567  1533  01D5               	clrf	_SWdeb1
 12568  1534  01D6               	clrf	_SW2buf
 12569  1535  01D7               	clrf	_SW1buf
 12570  1536  01D2               	clrf	_SWcnt2
 12571  1537  01D3               	clrf	_SWcnt1
 12572  1538  0021               	movlb	1	; select bank1
 12573  1539  30C8               	movlw	200
 12574  153A  01C3               	clrf	_AdcTempFilt^(0+128)
 12575  153B  01C4               	clrf	(_AdcTempFilt+1)^(0+128)
 12576  153C  01C5               	clrf	(_AdcTempFilt+2)^(0+128)
 12577  153D  01C6               	clrf	(_AdcTempFilt+3)^(0+128)
 12578  153E  00CF               	movwf	_sTemp^(0+128)
 12579  153F  01D0               	clrf	(_sTemp+1)^(0+128)
 12580  1540  0020               	movlb	0	; select bank0
 12581  1541  1030               	bcf	_PIRFlags,0
 12582  1542  10B0               	bcf	_PIRFlags,1
 12583  1543  0008               	return
 12584  1544                     __end_of_IO_Init:	
 12585                           
 12586                           	psect	text64
 12587  1544                     __ptext64:	
 12588 ;; *************** function _Comm_Task *****************
 12589 ;; Defined at:
 12590 ;;		line 235 in file "../../LIBC/COM/svc_comm.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1    wreg      void 
 12597 ;; Registers used:
 12598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12599 ;; Tracked objects:
 12600 ;;		On entry : 1F/0
 12601 ;;		On exit  : 1F/1
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;Total ram usage:        1 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    3
 12611 ;; This function calls:
 12612 ;;		_Comm_PrepareTransmit
 12613 ;; This function is called by:
 12614 ;;		_main
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           
 12619                           ;psect for function _Comm_Task
 12620  1544                     _Comm_Task:	
 12621                           
 12622                           ;incstack = 0
 12623                           ; Regs used in _Comm_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12624  1544  0021               	movlb	1	; select bank1
 12625  1545  1820               	btfsc	_ComData^(0+128),0
 12626  1546  18A0               	btfsc	_ComData^(0+128),1
 12627  1547  2D66               	goto	l5906
 12628  1548  1D20               	btfss	_ComData^(0+128),2
 12629  1549  2D66               	goto	l5906
 12630  154A  0821               	movf	(_ComData^(0+128)+1),w
 12631  154B  1903               	btfsc	3,2
 12632  154C  2D66               	goto	l5906
 12633  154D  1020               	bcf	_ComData^(0+128),0
 12634  154E  01A1               	clrf	(_ComData^(0+128)+1)
 12635  154F  0024               	movlb	4	; select bank4
 12636  1550  3006               	movlw	6
 12637  1551  01A1               	clrf	(_TxPacket^(0+512)+1)
 12638  1552  00A4               	movwf	(_TxPacket^(0+512)+4)
 12639  1553  300D               	movlw	13
 12640  1554  00A0               	movwf	_TxPacket^(0+512)
 12641  1555  30B3               	movlw	low _ComTxData
 12642  1556  0086               	movwf	6
 12643  1557  3000               	movlw	high _ComTxData
 12644  1558  0087               	movwf	7
 12645  1559  3005               	movlw	5
 12646  155A  3E20               	addlw	(low (_TxPacket| (0+512)))& (0+255)
 12647  155B  0084               	movwf	4
 12648  155C  3002               	movlw	2	; select bank4/5
 12649  155D  0085               	movwf	5
 12650  155E  3009               	movlw	9
 12651  155F  00F1               	movwf	??_Comm_Task
 12652  1560                     u4330:	
 12653  1560  0016               	moviw fsr1++
 12654  1561  001A               	movwi fsr0++
 12655  1562  0BF1               	decfsz	??_Comm_Task,f
 12656  1563  2D60               	goto	u4330
 12657  1564  257D  3195         	fcall	_Comm_PrepareTransmit
 12658  1566                     l5906:	
 12659  1566  0021               	movlb	1	; select bank1
 12660  1567  01A2               	clrf	(_ComData^(0+128)+2)
 12661  1568                     l5916:	
 12662  1568  3004               	movlw	4
 12663  1569  0222               	subwf	(_ComData^(0+128)+2),w
 12664  156A  1803               	btfsc	3,0
 12665  156B  0008               	return
 12666  156C  0822               	movf	(_ComData^(0+128)+2),w
 12667  156D  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
 12668  156E  0086               	movwf	6
 12669  156F  0187               	clrf	7
 12670  1570  0801               	movf	1,w
 12671  1571  1903               	btfsc	3,2
 12672  1572  2D78               	goto	l5912
 12673  1573  0822               	movf	(_ComData^(0+128)+2),w
 12674  1574  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
 12675  1575  0086               	movwf	6
 12676  1576  0381               	decf	1,f
 12677  1577  2D7B               	goto	l5914
 12678  1578                     l5912:	
 12679  1578  318F  27D9  3195   	fcall	PL22	;call to abstracted procedure
 12680  157B                     l5914:	
 12681  157B  0AA2               	incf	(_ComData^(0+128)+2),f
 12682  157C  2D68               	goto	l5916
 12683  157D                     __end_of_Comm_Task:	
 12684  157D                     __ptext94:	
 12685 ;; *************** function _Comm_PrepareTransmit *****************
 12686 ;; Defined at:
 12687 ;;		line 44 in file "../../LIBC/COM/svc_comm.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;		None
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;		None
 12692 ;; Return value:  Size  Location     Type
 12693 ;;                  1    wreg      void 
 12694 ;; Registers used:
 12695 ;;		wreg, status,2, status,0, pclath, cstack
 12696 ;; Tracked objects:
 12697 ;;		On entry : 1F/4
 12698 ;;		On exit  : 1F/8
 12699 ;;		Unchanged: 0/0
 12700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;Total ram usage:        0 bytes
 12706 ;; Hardware stack levels used:    1
 12707 ;; Hardware stack levels required when called:    2
 12708 ;; This function calls:
 12709 ;;		_IO_StartTimer1
 12710 ;; This function is called by:
 12711 ;;		_Comm_RxProcess
 12712 ;;		_Comm_Task
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           
 12717                           ;psect for function _Comm_PrepareTransmit
 12718  157D                     _Comm_PrepareTransmit:	
 12719  157D                     l4898:	
 12720                           ;incstack = 0
 12721                           ; Regs used in _Comm_PrepareTransmit: [wreg+status,2+status,0+pclath+cstack]
 12722                           
 12723  157D  3005               	movlw	5
 12724  157E  0021               	movlb	1	; select bank1
 12725  157F  00A3               	movwf	(_ComData^(0+128)+3)
 12726  1580  3002               	movlw	2
 12727  1581  14A0               	bsf	_ComData^(0+128),1
 12728  1582  318E  2EB2         	ljmp	_IO_StartTimer1
 12729  1584                     __end_of_Comm_PrepareTransmit:	
 12730                           
 12731                           	psect	text85
 12732  0958                     __ptext85:	
 12733 ;; *************** function _UDS_GetSeed *****************
 12734 ;; Defined at:
 12735 ;;		line 69 in file "../svc_uds.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;		None
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;		None
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      void 
 12742 ;; Registers used:
 12743 ;;		wreg, status,2, status,0, pclath, cstack
 12744 ;; Tracked objects:
 12745 ;;		On entry : 1F/3
 12746 ;;		On exit  : 18/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;Total ram usage:        4 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    2
 12756 ;; This function calls:
 12757 ;;		_POS_RESP
 12758 ;; This function is called by:
 12759 ;;		_Comm_RxProcess
 12760 ;; This function uses a non-reentrant model
 12761 ;;
 12762                           
 12763                           
 12764                           ;psect for function _UDS_GetSeed
 12765  0958                     _UDS_GetSeed:	
 12766                           
 12767                           ;incstack = 0
 12768                           ; Regs used in _UDS_GetSeed: [wreg+status,2+status,0+pclath+cstack]
 12769  0958  0021               	movlb	1	; select bank1
 12770  0959  0867               	movf	_u16Tics^(0+128),w
 12771  095A  00F1               	movwf	??_UDS_GetSeed
 12772  095B  0868               	movf	(_u16Tics+1)^(0+128),w
 12773  095C  00F2               	movwf	??_UDS_GetSeed+1
 12774  095D  01F3               	clrf	??_UDS_GetSeed+2
 12775  095E  01F4               	clrf	??_UDS_GetSeed+3
 12776  095F  00F4               	movwf	??_UDS_GetSeed+3
 12777  0960  0871               	movf	??_UDS_GetSeed,w
 12778  0961  00F3               	movwf	??_UDS_GetSeed+2
 12779  0962  01F2               	clrf	??_UDS_GetSeed+1
 12780  0963  01F1               	clrf	??_UDS_GetSeed
 12781  0964  0874               	movf	??_UDS_GetSeed+3,w
 12782  0965  0020               	movlb	0	; select bank0
 12783  0966  00A3               	movwf	_seed+3
 12784  0967  0873               	movf	??_UDS_GetSeed+2,w
 12785  0968  00A2               	movwf	_seed+2
 12786  0969  0872               	movf	??_UDS_GetSeed+1,w
 12787  096A  00A1               	movwf	_seed+1
 12788  096B  0871               	movf	??_UDS_GetSeed,w
 12789  096C  00A0               	movwf	_seed
 12790  096D  082C               	movf	_currtemp,w
 12791  096E  00F1               	movwf	??_UDS_GetSeed
 12792  096F  082D               	movf	_currtemp+1,w
 12793  0970  00F2               	movwf	??_UDS_GetSeed+1
 12794  0971  01F3               	clrf	??_UDS_GetSeed+2
 12795  0972  01F4               	clrf	??_UDS_GetSeed+3
 12796  0973  0871               	movf	??_UDS_GetSeed,w
 12797  0974  04A0               	iorwf	_seed,f
 12798  0975  0872               	movf	??_UDS_GetSeed+1,w
 12799  0976  04A1               	iorwf	_seed+1,f
 12800  0977  0873               	movf	??_UDS_GetSeed+2,w
 12801  0978  04A2               	iorwf	_seed+2,f
 12802  0979  0874               	movf	??_UDS_GetSeed+3,w
 12803  097A  04A3               	iorwf	_seed+3,f
 12804  097B  0823               	movf	_seed+3,w
 12805  097C  0024               	movlb	4	; select bank4
 12806  097D  00A8               	movwf	(_TxPacket^(0+512)+8)
 12807  097E  0020               	movlb	0	; select bank0
 12808  097F  0822               	movf	_seed+2,w
 12809  0980  0024               	movlb	4	; select bank4
 12810  0981  00A7               	movwf	(_TxPacket^(0+512)+7)
 12811  0982  0020               	movlb	0	; select bank0
 12812  0983  0821               	movf	_seed+1,w
 12813  0984  0024               	movlb	4	; select bank4
 12814  0985  00A6               	movwf	(_TxPacket^(0+512)+6)
 12815  0986  0020               	movlb	0	; select bank0
 12816  0987  0820               	movf	_seed,w
 12817  0988  0024               	movlb	4	; select bank4
 12818  0989  00A5               	movwf	(_TxPacket^(0+512)+5)
 12819  098A  3004               	movlw	4
 12820  098B  2AB1               	ljmp	_POS_RESP
 12821  098C                     __end_of_UDS_GetSeed:	
 12822  098C                     __ptext16:	
 12823 ;; *************** function _PRG_TaskSlow *****************
 12824 ;; Defined at:
 12825 ;;		line 74 in file "../app_ProgTemp.c"
 12826 ;; Parameters:    Size  Location     Type
 12827 ;;		None
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;		None
 12830 ;; Return value:  Size  Location     Type
 12831 ;;                  1    wreg      void 
 12832 ;; Registers used:
 12833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12834 ;; Tracked objects:
 12835 ;;		On entry : 1F/0
 12836 ;;		On exit  : 1C/0
 12837 ;;		Unchanged: 0/0
 12838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;Total ram usage:        0 bytes
 12844 ;; Hardware stack levels used:    1
 12845 ;; Hardware stack levels required when called:    6
 12846 ;; This function calls:
 12847 ;;		_DetermineMode
 12848 ;;		_NVM_WriteBlock
 12849 ;; This function is called by:
 12850 ;;		_main
 12851 ;; This function uses a non-reentrant model
 12852 ;;
 12853                           
 12854                           
 12855                           ;psect for function _PRG_TaskSlow
 12856  098C                     _PRG_TaskSlow:	
 12857                           
 12858                           ;incstack = 0
 12859                           ; Regs used in _PRG_TaskSlow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12860  098C  2198  3189         	fcall	_DetermineMode
 12861  098E  0020               	movlb	0	; select bank0
 12862  098F  084A               	movf	_bWriteNvm,w
 12863  0990  1903               	btfsc	3,2
 12864  0991  0008               	return
 12865  0992  03CA               	decf	_bWriteNvm,f
 12866  0993  084A               	movf	_bWriteNvm,w
 12867  0994  1D03               	btfss	3,2
 12868  0995  0008               	return
 12869  0996  084D               	movf	_nvblock,w
 12870  0997  2B6A               	ljmp	_NVM_WriteBlock
 12871  0998                     __end_of_PRG_TaskSlow:	
 12872  0998                     __ptext17:	
 12873 ;; *************** function _DetermineMode *****************
 12874 ;; Defined at:
 12875 ;;		line 56 in file "../app_ProgTemp.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;		None
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      void 
 12882 ;; Registers used:
 12883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12884 ;; Tracked objects:
 12885 ;;		On entry : 1F/0
 12886 ;;		On exit  : 1C/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;Total ram usage:        0 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    5
 12896 ;; This function calls:
 12897 ;;		_DetermineProg
 12898 ;;		_PRS_RoomPresence
 12899 ;; This function is called by:
 12900 ;;		_PRG_TaskSlow
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           
 12905                           ;psect for function _DetermineMode
 12906  0998                     _DetermineMode:	
 12907                           
 12908                           ;incstack = 0
 12909                           ; Regs used in _DetermineMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12910  0998  3185  2569  3189   	fcall	_PRS_RoomPresence
 12911  099B  3A00               	xorlw	0
 12912  099C  1903               	skipnz
 12913  099D  29AE               	goto	l6948
 12914  099E  0851               	movf	_RTC_Status,w
 12915  099F  1903               	btfsc	3,2
 12916  09A0  29A4               	goto	l6942
 12917  09A1  3002               	movlw	2
 12918  09A2  00CB               	movwf	_c_mode
 12919  09A3  2ACA               	ljmp	l6760
 12920  09A4                     l6942:	
 12921  09A4  0021               	movlb	1	; select bank1
 12922  09A5  085D               	movf	(_RAM_PARAM^(0+128)+3),w
 12923  09A6  0020               	movlb	0	; select bank0
 12924  09A7  00AE               	movwf	_ProgSetTemp
 12925  09A8  01AF               	clrf	_ProgSetTemp+1
 12926  09A9  01CB               	clrf	_c_mode
 12927  09AA  0ACB               	incf	_c_mode,f
 12928  09AB                     l6946:	
 12929  09AB  01CD               	clrf	_nvblock
 12930  09AC  0ACD               	incf	_nvblock,f
 12931  09AD  0008               	return
 12932  09AE                     l6948:	
 12933  09AE  0021               	movlb	1	; select bank1
 12934  09AF  237D  3189         	fcall	PL20	;call to abstracted procedure
 12935  09B1  29AB               	goto	l6946
 12936  09B2                     __end_of_DetermineMode:	
 12937  09B2                     __ptext22:	
 12938 ;; *************** function _MNU_TaskButton *****************
 12939 ;; Defined at:
 12940 ;;		line 347 in file "../app_Menu.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;		None
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      void 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12949 ;; Tracked objects:
 12950 ;;		On entry : 1F/0
 12951 ;;		On exit  : 1F/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;Total ram usage:        0 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    5
 12961 ;; This function calls:
 12962 ;;		_DrawClrLastLines
 12963 ;;		_IO_GetSW1Press
 12964 ;;		_IO_GetSW2Press
 12965 ;;		_PRG_SetNewTemp
 12966 ;; This function is called by:
 12967 ;;		_main
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function _MNU_TaskButton
 12973  09B2                     _MNU_TaskButton:	
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in _MNU_TaskButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12977  09B2  21D6  3189         	fcall	_IO_GetSW1Press
 12978  09B4  3A00               	xorlw	0
 12979  09B5  1903               	skipnz
 12980  09B6  29C0               	goto	l7378
 12981  09B7  0845               	movf	_u8editmode,w
 12982  09B8  1903               	btfsc	3,2
 12983  09B9  29BC               	goto	l7370
 12984  09BA  3001               	movlw	1
 12985  09BB  29C9               	goto	L6
 12986  09BC                     l7370:	
 12987  09BC  3184  240F  3189   	fcall	_DrawClrLastLines
 12988  09BF  29CA               	goto	l7372
 12989  09C0                     l7378:	
 12990  09C0  21DD  3189         	fcall	_IO_GetSW2Press
 12991  09C2  3A00               	xorlw	0
 12992  09C3  1903               	skipnz
 12993  09C4  29D0               	goto	l7392
 12994  09C5  0845               	movf	_u8editmode,w
 12995  09C6  1903               	btfsc	3,2
 12996  09C7  29BC               	goto	l7370
 12997  09C8  30FF               	movlw	255
 12998  09C9                     L6:	
 12999  09C9  21E4               	fcall	_PRG_SetNewTemp
 13000  09CA                     l7372:	
 13001  09CA  3028               	movlw	40
 13002  09CB  0020               	movlb	0	; select bank0
 13003  09CC  00C4               	movwf	_u8menuswitch
 13004  09CD  303C               	movlw	60
 13005  09CE  01C8               	clrf	_Menu
 13006  09CF  00C5               	movwf	_u8editmode
 13007  09D0                     l7392:	
 13008  09D0  3033               	movlw	51
 13009  09D1  0AC3               	incf	_dotctr,f
 13010  09D2  0243               	subwf	_dotctr,w
 13011  09D3  1803               	btfsc	3,0
 13012  09D4  01C3               	clrf	_dotctr
 13013  09D5  0008               	return
 13014  09D6                     __end_of_MNU_TaskButton:	
 13015  09D6                     __ptext25:	
 13016 ;; *************** function _IO_GetSW1Press *****************
 13017 ;; Defined at:
 13018 ;;		line 67 in file "../drv_io.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;  b               1    0[COMMON] unsigned char 
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      unsigned char 
 13025 ;; Registers used:
 13026 ;;		wreg, status,2, status,0
 13027 ;; Tracked objects:
 13028 ;;		On entry : 1F/0
 13029 ;;		On exit  : 1F/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;Total ram usage:        1 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    1
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_MNU_TaskButton
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           
 13047                           ;psect for function _IO_GetSW1Press
 13048  09D6                     _IO_GetSW1Press:	
 13049                           
 13050                           ;incstack = 0
 13051                           ; Regs used in _IO_GetSW1Press: [wreg+status,2+status,0]
 13052  09D6  0855               	movf	_SWdeb1,w
 13053  09D7  00F0               	movwf	IO_GetSW1Press@b
 13054  09D8  3002               	movlw	2
 13055  09D9  05F0               	andwf	IO_GetSW1Press@b,f
 13056  09DA  10D5               	bcf	_SWdeb1,1
 13057  09DB  0870               	movf	IO_GetSW1Press@b,w
 13058  09DC  0008               	return
 13059  09DD                     __end_of_IO_GetSW1Press:	
 13060  09DD                     __ptext24:	
 13061 ;; *************** function _IO_GetSW2Press *****************
 13062 ;; Defined at:
 13063 ;;		line 74 in file "../drv_io.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;		None
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  b               1    0[COMMON] unsigned char 
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      unsigned char 
 13070 ;; Registers used:
 13071 ;;		wreg, status,2, status,0
 13072 ;; Tracked objects:
 13073 ;;		On entry : 1F/0
 13074 ;;		On exit  : 1F/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;Total ram usage:        1 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    1
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_MNU_TaskButton
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           
 13092                           ;psect for function _IO_GetSW2Press
 13093  09DD                     _IO_GetSW2Press:	
 13094                           
 13095                           ;incstack = 0
 13096                           ; Regs used in _IO_GetSW2Press: [wreg+status,2+status,0]
 13097  09DD  0854               	movf	_SWdeb2,w
 13098  09DE  00F0               	movwf	IO_GetSW2Press@b
 13099  09DF  3002               	movlw	2
 13100  09E0  05F0               	andwf	IO_GetSW2Press@b,f
 13101  09E1  10D4               	bcf	_SWdeb2,1
 13102  09E2  0870               	movf	IO_GetSW2Press@b,w
 13103  09E3  0008               	return
 13104  09E4                     __end_of_IO_GetSW2Press:	
 13105  09E4                     __ptext23:	
 13106 ;; *************** function _PRG_SetNewTemp *****************
 13107 ;; Defined at:
 13108 ;;		line 84 in file "../app_ProgTemp.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;  sIncrease       1    wreg     char 
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;  sIncrease       1   11[COMMON] char 
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  1    wreg      void 
 13115 ;; Registers used:
 13116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13117 ;; Tracked objects:
 13118 ;;		On entry : 1F/0
 13119 ;;		On exit  : 1F/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;Total ram usage:        3 bytes
 13127 ;; Hardware stack levels used:    1
 13128 ;; Hardware stack levels required when called:    2
 13129 ;; This function calls:
 13130 ;;		_NVM_WriteBlockData
 13131 ;; This function is called by:
 13132 ;;		_MNU_TaskButton
 13133 ;; This function uses a non-reentrant model
 13134 ;;
 13135                           
 13136                           
 13137                           ;psect for function _PRG_SetNewTemp
 13138  09E4                     _PRG_SetNewTemp:	
 13139                           
 13140                           ;incstack = 0
 13141                           ; Regs used in _PRG_SetNewTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13142  09E4  00FB               	movwf	PRG_SetNewTemp@sIncrease
 13143  09E5  00F9               	movwf	??_PRG_SetNewTemp
 13144  09E6  01FA               	clrf	??_PRG_SetNewTemp+1
 13145  09E7  1BF9               	btfsc	??_PRG_SetNewTemp,7
 13146  09E8  03FA               	decf	??_PRG_SetNewTemp+1,f
 13147  09E9  07AE               	addwf	_ProgSetTemp,f
 13148  09EA  087A               	movf	??_PRG_SetNewTemp+1,w
 13149  09EB  3DAF               	addwfc	_ProgSetTemp+1,f
 13150  09EC  29FD               	goto	l6964
 13151  09ED                     l6956:	
 13152  09ED  084C               	movf	_nvpos,w
 13153  09EE  00F0               	movwf	NVM_WriteBlockData@offset
 13154  09EF  082E               	movf	_ProgSetTemp,w
 13155  09F0  00F1               	movwf	NVM_WriteBlockData@data
 13156  09F1  084D               	movf	_nvblock,w
 13157  09F2  2333  3189         	fcall	_NVM_WriteBlockData
 13158  09F4  2A05               	goto	l6966
 13159  09F5                     l6958:	
 13160  09F5  082E               	movf	_ProgSetTemp,w
 13161  09F6  0021               	movlb	1	; select bank1
 13162  09F7  00DD               	movwf	(_RAM_PARAM^(0+128)+3)
 13163  09F8  2A05               	goto	l6966
 13164  09F9                     l6960:	
 13165  09F9  082E               	movf	_ProgSetTemp,w
 13166  09FA  0021               	movlb	1	; select bank1
 13167  09FB  00DE               	movwf	(_RAM_PARAM^(0+128)+4)
 13168  09FC  2A05               	goto	l6966
 13169  09FD                     l6964:	
 13170  09FD  084B               	movf	_c_mode,w
 13171                           
 13172                           ; Switch size 1, requested type "space"
 13173                           ; Number of cases is 2, Range of values is 1 to 2
 13174                           ; switch strategies available:
 13175                           ; Name         Instructions Cycles
 13176                           ; simple_byte            7     4 (average)
 13177                           ; direct_byte           13     9 (fixed)
 13178                           ; jumptable            263     9 (fixed)
 13179                           ;	Chosen strategy is simple_byte
 13180  09FE  3A01               	xorlw	1	; case 1
 13181  09FF  1903               	skipnz
 13182  0A00  29F5               	goto	l6958
 13183  0A01  3A03               	xorlw	3	; case 2
 13184  0A02  1903               	skipnz
 13185  0A03  29ED               	goto	l6956
 13186  0A04  29F9               	goto	l6960
 13187  0A05                     l6966:	
 13188  0A05  300A               	movlw	10
 13189  0A06  0020               	movlb	0	; select bank0
 13190  0A07  00CA               	movwf	_bWriteNvm
 13191  0A08  0008               	return
 13192  0A09                     __end_of_PRG_SetNewTemp:	
 13193  0A09                     __ptext70:	
 13194 ;; *************** function _UDS_WDBID *****************
 13195 ;; Defined at:
 13196 ;;		line 85 in file "../svc_uds.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;		None
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;  k               1   11[COMMON] unsigned char 
 13201 ;;  i               1   10[COMMON] unsigned char 
 13202 ;;  j               1    9[COMMON] unsigned char 
 13203 ;; Return value:  Size  Location     Type
 13204 ;;                  1    wreg      void 
 13205 ;; Registers used:
 13206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13207 ;; Tracked objects:
 13208 ;;		On entry : 1F/1
 13209 ;;		On exit  : 18/0
 13210 ;;		Unchanged: 0/0
 13211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;Total ram usage:        3 bytes
 13217 ;; Hardware stack levels used:    1
 13218 ;; Hardware stack levels required when called:    5
 13219 ;; This function calls:
 13220 ;;		_MRF89XARegisterSet
 13221 ;;		_NVM_WriteBlockData
 13222 ;;		_POS_RESP
 13223 ;;		_WriteNVMBlockSync
 13224 ;; This function is called by:
 13225 ;;		_Comm_RxProcess
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           
 13230                           ;psect for function _UDS_WDBID
 13231  0A09                     _UDS_WDBID:	
 13232                           
 13233                           ;incstack = 0
 13234                           ; Regs used in _UDS_WDBID: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13235  0A09  0023               	movlb	3	; select bank3
 13236  0A0A  0820               	movf	_RxPacket^(0+384),w
 13237  0A0B  3EFB               	addlw	251
 13238  0A0C  00FB               	movwf	UDS_WDBID@k
 13239  0A0D  0825               	movf	(_RxPacket^(0+384)+5),w
 13240                           
 13241                           ; Switch size 1, requested type "space"
 13242                           ; Number of cases is 2, Range of values is 2 to 240
 13243                           ; switch strategies available:
 13244                           ; Name         Instructions Cycles
 13245                           ; simple_byte            7     4 (average)
 13246                           ; jumptable            263     9 (fixed)
 13247                           ;	Chosen strategy is simple_byte
 13248  0A0E  3A02               	xorlw	2	; case 2
 13249  0A0F  1903               	skipnz
 13250  0A10  2A15               	goto	l6812
 13251  0A11  3AF2               	xorlw	242	; case 240
 13252  0A12  1903               	skipnz
 13253  0A13  2A33               	goto	l6830
 13254  0A14  2A3F               	goto	l866
 13255  0A15                     l6812:	
 13256  0A15  01FA               	clrf	UDS_WDBID@i
 13257  0A16  01F9               	clrf	UDS_WDBID@j
 13258  0A17                     l6814:	
 13259  0A17  03FB               	decf	UDS_WDBID@k,f
 13260  0A18  1903               	btfsc	3,2
 13261  0A19  2A2A               	goto	l6824
 13262  0A1A  087A               	movf	UDS_WDBID@i,w
 13263  0A1B  00F0               	movwf	NVM_WriteBlockData@offset
 13264  0A1C  087A               	movf	UDS_WDBID@i,w
 13265  0A1D  3EA7               	addlw	(low ((_RxPacket| (0+256)+7)))& (0+255)
 13266  0A1E  0086               	movwf	6
 13267  0A1F  3001               	movlw	1	; select bank3/4
 13268  0A20  0087               	movwf	7
 13269  0A21  0801               	movf	1,w
 13270  0A22  00F1               	movwf	NVM_WriteBlockData@data
 13271  0A23  0023               	movlb	3	; select bank3
 13272  0A24  0826               	movf	(_RxPacket^(0+384)+6),w
 13273  0A25  2333  3189         	fcall	_NVM_WriteBlockData
 13274  0A27  07F9               	addwf	UDS_WDBID@j,f
 13275  0A28  0AFA               	incf	UDS_WDBID@i,f
 13276  0A29  2A17               	goto	l6814
 13277  0A2A                     l6824:	
 13278  0A2A  0879               	movf	UDS_WDBID@j,w
 13279  0A2B  1D03               	btfss	3,2
 13280  0A2C  0008               	return
 13281  0A2D  0023               	movlb	3	; select bank3
 13282  0A2E  0826               	movf	(_RxPacket^(0+384)+6),w
 13283  0A2F  235C  3189         	fcall	_WriteNVMBlockSync
 13284  0A31  3000               	movlw	0
 13285  0A32  2AB1               	ljmp	_POS_RESP
 13286  0A33                     l6830:	
 13287  0A33  3002               	movlw	2
 13288  0A34  067B               	xorwf	UDS_WDBID@k,w
 13289  0A35  1D03               	btfss	3,2
 13290  0A36  0008               	return
 13291  0A37  0827               	movf	(_RxPacket^(0+384)+7),w
 13292  0A38  00F1               	movwf	MRF89XARegisterSet@value
 13293  0A39  0826               	movf	(_RxPacket^(0+384)+6),w
 13294  0A3A  318E  2676  3189   	fcall	_MRF89XARegisterSet
 13295  0A3D  3000               	movlw	0
 13296  0A3E  2AB1               	ljmp	_POS_RESP
 13297  0A3F                     l866:	
 13298  0A3F  0008               	return
 13299  0A40                     __end_of_UDS_WDBID:	
 13300  0A40                     __ptext79:	
 13301 ;; *************** function _UDS_RDBID *****************
 13302 ;; Defined at:
 13303 ;;		line 116 in file "../svc_uds.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;		None
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;  k               2   10[COMMON] unsigned short 
 13308 ;;  i               2    8[COMMON] unsigned short 
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      void 
 13311 ;; Registers used:
 13312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13313 ;; Tracked objects:
 13314 ;;		On entry : 1F/3
 13315 ;;		On exit  : 18/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;Total ram usage:        5 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; Hardware stack levels required when called:    2
 13325 ;; This function calls:
 13326 ;;		_IO_GetPIRPin
 13327 ;;		_NVM_GetBlockLenght
 13328 ;;		_NVM_IsIdle
 13329 ;;		_NVM_ReadBlockData
 13330 ;;		_POS_RESP
 13331 ;;		_REG_GetLevel
 13332 ;; This function is called by:
 13333 ;;		_Comm_RxProcess
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           
 13338                           ;psect for function _UDS_RDBID
 13339  0A40                     _UDS_RDBID:	
 13340                           
 13341                           ;incstack = 0
 13342                           ; Regs used in _UDS_RDBID: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13343  0A40  0825               	movf	(_RxPacket^(0+384)+5),w
 13344                           
 13345                           ; Switch size 1, requested type "space"
 13346                           ; Number of cases is 3, Range of values is 1 to 5
 13347                           ; switch strategies available:
 13348                           ; Name         Instructions Cycles
 13349                           ; simple_byte           10     6 (average)
 13350                           ; direct_byte           19     9 (fixed)
 13351                           ; jumptable            263     9 (fixed)
 13352                           ;	Chosen strategy is simple_byte
 13353  0A41  3A01               	xorlw	1	; case 1
 13354  0A42  1903               	skipnz
 13355  0A43  2A4B               	goto	l870
 13356  0A44  3A03               	xorlw	3	; case 2
 13357  0A45  1903               	skipnz
 13358  0A46  2A5F               	goto	l6850
 13359  0A47  3A07               	xorlw	7	; case 5
 13360  0A48  1903               	skipnz
 13361  0A49  2A85               	goto	l6864
 13362  0A4A  2AB0               	goto	l879
 13363  0A4B                     l870:	
 13364  0A4B  0024               	movlb	4	; select bank4
 13365  0A4C  01A5               	clrf	(_TxPacket^(0+512)+5)
 13366  0A4D  0AA5               	incf	(_TxPacket^(0+512)+5),f
 13367  0A4E  0020               	movlb	0	; select bank0
 13368  0A4F  0841               	movf	_MRF89XA_RSSI,w
 13369  0A50  0024               	movlb	4	; select bank4
 13370  0A51  00A6               	movwf	(_TxPacket^(0+512)+6)
 13371  0A52  3006               	movlw	6
 13372  0A53  00FA               	movwf	UDS_RDBID@k
 13373  0A54  01FB               	clrf	UDS_RDBID@k+1
 13374  0A55  0020               	movlb	0	; select bank0
 13375  0A56  1851               	btfsc	_RTC_Status,0
 13376  0A57  147A               	bsf	UDS_RDBID@k,0
 13377  0A58  087B               	movf	UDS_RDBID@k+1,w
 13378  0A59  0024               	movlb	4	; select bank4
 13379  0A5A  00A7               	movwf	(_TxPacket^(0+512)+7)
 13380  0A5B  087A               	movf	UDS_RDBID@k,w
 13381  0A5C  00A8               	movwf	(_TxPacket^(0+512)+8)
 13382  0A5D  3004               	movlw	4
 13383  0A5E  2AB1               	ljmp	_POS_RESP
 13384  0A5F                     l6850:	
 13385  0A5F  0826               	movf	(_RxPacket^(0+384)+6),w
 13386  0A60  22C2  3189         	fcall	_NVM_GetBlockLenght
 13387  0A62  00FA               	movwf	UDS_RDBID@k
 13388  0A63  01FB               	clrf	UDS_RDBID@k+1
 13389  0A64  047B               	iorwf	UDS_RDBID@k+1,w
 13390  0A65  1903               	btfsc	3,2
 13391  0A66  0008               	return
 13392  0A67  01F8               	clrf	UDS_RDBID@i
 13393  0A68  01F9               	clrf	UDS_RDBID@i+1
 13394  0A69                     l6860:	
 13395  0A69  087B               	movf	UDS_RDBID@k+1,w
 13396  0A6A  0279               	subwf	UDS_RDBID@i+1,w
 13397  0A6B  1D03               	skipz
 13398  0A6C  2A6F               	goto	u5295
 13399  0A6D  087A               	movf	UDS_RDBID@k,w
 13400  0A6E  0278               	subwf	UDS_RDBID@i,w
 13401  0A6F                     u5295:	
 13402  0A6F  1803               	btfsc	3,0
 13403  0A70  2A83               	goto	l6862
 13404  0A71  0878               	movf	UDS_RDBID@i,w
 13405  0A72  00F0               	movwf	NVM_ReadBlockData@offset
 13406  0A73  0023               	movlb	3	; select bank3
 13407  0A74  0826               	movf	(_RxPacket^(0+384)+6),w
 13408  0A75  22F1  3189         	fcall	_NVM_ReadBlockData
 13409  0A77  00F7               	movwf	??_UDS_RDBID
 13410  0A78  0878               	movf	UDS_RDBID@i,w
 13411  0A79  3E25               	addlw	(low ((_TxPacket| (0+512)+5)))& (0+255)
 13412  0A7A  0086               	movwf	6
 13413  0A7B  3002               	movlw	2	; select bank4/5
 13414  0A7C  0087               	movwf	7
 13415  0A7D  0877               	movf	??_UDS_RDBID,w
 13416  0A7E  0081               	movwf	1
 13417  0A7F  0AF8               	incf	UDS_RDBID@i,f
 13418  0A80  1903               	skipnz
 13419  0A81  0AF9               	incf	UDS_RDBID@i+1,f
 13420  0A82  2A69               	goto	l6860
 13421  0A83                     l6862:	
 13422  0A83  087A               	movf	UDS_RDBID@k,w
 13423  0A84  2AB1               	ljmp	_POS_RESP
 13424  0A85                     l6864:	
 13425  0A85  0020               	movlb	0	; select bank0
 13426  0A86  0833               	movf	_AdcRaw+1,w
 13427  0A87  00FB               	movwf	UDS_RDBID@k+1
 13428  0A88  0832               	movf	_AdcRaw,w
 13429  0A89  00FA               	movwf	UDS_RDBID@k
 13430  0A8A  087B               	movf	UDS_RDBID@k+1,w
 13431  0A8B  0024               	movlb	4	; select bank4
 13432  0A8C  00A5               	movwf	(_TxPacket^(0+512)+5)
 13433  0A8D  087A               	movf	UDS_RDBID@k,w
 13434  0A8E  00A6               	movwf	(_TxPacket^(0+512)+6)
 13435  0A8F  0020               	movlb	0	; select bank0
 13436  0A90  0829               	movf	_PresenceTime+1,w
 13437  0A91  0024               	movlb	4	; select bank4
 13438  0A92  00A7               	movwf	(_TxPacket^(0+512)+7)
 13439  0A93  0020               	movlb	0	; select bank0
 13440  0A94  0828               	movf	_PresenceTime,w
 13441  0A95  0024               	movlb	4	; select bank4
 13442  0A96  00A8               	movwf	(_TxPacket^(0+512)+8)
 13443  0A97  0020               	movlb	0	; select bank0
 13444  0A98  082E               	movf	_ProgSetTemp,w
 13445  0A99  0024               	movlb	4	; select bank4
 13446  0A9A  00A9               	movwf	(_TxPacket^(0+512)+9)
 13447  0A9B  22BD               	fcall	_IO_GetPIRPin
 13448  0A9C  0024               	movlb	4	; select bank4
 13449  0A9D  00AA               	movwf	(_TxPacket^(0+512)+10)
 13450  0A9E  3185  2564  3189   	fcall	_REG_GetLevel
 13451  0AA1  0024               	movlb	4	; select bank4
 13452  0AA2  00AB               	movwf	(_TxPacket^(0+512)+11)
 13453  0AA3  01AC               	clrf	(_TxPacket^(0+512)+12)
 13454  0AA4  01AD               	clrf	(_TxPacket^(0+512)+13)
 13455  0AA5  0021               	movlb	1	; select bank1
 13456  0AA6  0863               	movf	_REG_PARAMS_RAM^(0+128),w
 13457  0AA7  0024               	movlb	4	; select bank4
 13458  0AA8  00AE               	movwf	(_TxPacket^(0+512)+14)
 13459  0AA9  318C  2487  3189   	fcall	_NVM_IsIdle
 13460  0AAC  0024               	movlb	4	; select bank4
 13461  0AAD  00AF               	movwf	(_TxPacket^(0+512)+15)
 13462  0AAE  300B               	movlw	11
 13463  0AAF  2AB1               	ljmp	_POS_RESP
 13464  0AB0                     l879:	
 13465  0AB0  0008               	return
 13466  0AB1                     __end_of_UDS_RDBID:	
 13467  0AB1                     __ptext87:	
 13468 ;; *************** function _POS_RESP *****************
 13469 ;; Defined at:
 13470 ;;		line 58 in file "../../LIBC/COM/svc_comm.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;  len             1    wreg     unsigned char 
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;  len             1    0[COMMON] unsigned char 
 13475 ;; Return value:  Size  Location     Type
 13476 ;;                  1    wreg      void 
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0
 13479 ;; Tracked objects:
 13480 ;;		On entry : 18/3
 13481 ;;		On exit  : 18/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;Total ram usage:        1 bytes
 13489 ;; Hardware stack levels used:    1
 13490 ;; Hardware stack levels required when called:    1
 13491 ;; This function calls:
 13492 ;;		Nothing
 13493 ;; This function is called by:
 13494 ;;		_UDS_CompareKey
 13495 ;;		_UDS_GetSeed
 13496 ;;		_UDS_WDBID
 13497 ;;		_UDS_RDBID
 13498 ;;		_Comm_RxProcess
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           
 13503                           ;psect for function _POS_RESP
 13504  0AB1                     _POS_RESP:	
 13505                           
 13506                           ;incstack = 0
 13507                           ; Regs used in _POS_RESP: [wreg+status,2+status,0]
 13508  0AB1  00F0               	movwf	POS_RESP@len
 13509  0AB2  0023               	movlb	3	; select bank3
 13510  0AB3  0821               	movf	(_RxPacket^(0+384)+1),w
 13511  0AB4  1903               	btfsc	3,2
 13512  0AB5  0008               	return
 13513  0AB6  0824               	movf	(_RxPacket^(0+384)+4),w
 13514  0AB7  0024               	movlb	4	; select bank4
 13515  0AB8  00A4               	movwf	(_TxPacket^(0+512)+4)
 13516  0AB9  0870               	movf	POS_RESP@len,w
 13517  0ABA  3E04               	addlw	4
 13518  0ABB  00A0               	movwf	_TxPacket^(0+512)
 13519  0ABC  0008               	return
 13520  0ABD                     __end_of_POS_RESP:	
 13521  0ABD                     __ptext84:	
 13522 ;; *************** function _IO_GetPIRPin *****************
 13523 ;; Defined at:
 13524 ;;		line 61 in file "../drv_io.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;		None
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      unsigned char 
 13531 ;; Registers used:
 13532 ;;		wreg, status,2, status,0
 13533 ;; Tracked objects:
 13534 ;;		On entry : 1F/4
 13535 ;;		On exit  : 1F/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;Total ram usage:        0 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:    1
 13545 ;; This function calls:
 13546 ;;		Nothing
 13547 ;; This function is called by:
 13548 ;;		_UDS_RDBID
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function _IO_GetPIRPin
 13554  0ABD                     _IO_GetPIRPin:	
 13555                           
 13556                           ;incstack = 0
 13557                           ; Regs used in _IO_GetPIRPin: [wreg+status,2+status,0]
 13558  0ABD  0020               	movlb	0	; select bank0
 13559  0ABE  0E0D               	swapf	13,w	;volatile
 13560  0ABF  0C89               	rrf	9,f
 13561  0AC0  3901               	andlw	1
 13562  0AC1  0008               	return
 13563  0AC2                     __end_of_IO_GetPIRPin:	
 13564  0AC2                     __ptext83:	
 13565 ;; *************** function _NVM_GetBlockLenght *****************
 13566 ;; Defined at:
 13567 ;;		line 200 in file "../../LIBC/NVM/svc_nvm.c"
 13568 ;; Parameters:    Size  Location     Type
 13569 ;;  Block           1    wreg     unsigned char 
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;  Block           1    0[COMMON] unsigned char 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  1    wreg      unsigned char 
 13574 ;; Registers used:
 13575 ;;		wreg, fsr0l, fsr0h, pclath
 13576 ;; Tracked objects:
 13577 ;;		On entry : 1F/3
 13578 ;;		On exit  : 1F/3
 13579 ;;		Unchanged: 1E/0
 13580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13585 ;;Total ram usage:        1 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:    1
 13588 ;; This function calls:
 13589 ;;		Nothing
 13590 ;; This function is called by:
 13591 ;;		_UDS_RDBID
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           
 13596                           ;psect for function _NVM_GetBlockLenght
 13597  0AC2                     _NVM_GetBlockLenght:	
 13598                           
 13599                           ;incstack = 0
 13600                           ; Regs used in _NVM_GetBlockLenght: [wreg-fsr0h+pclath]
 13601  0AC2  00F0               	movwf	NVM_GetBlockLenght@Block
 13602  0AC3  3009               	movlw	9
 13603  0AC4  0270               	subwf	NVM_GetBlockLenght@Block,w
 13604  0AC5  1803               	skipnc
 13605  0AC6  3400               	retlw	0
 13606  0AC7  0870               	movf	NVM_GetBlockLenght@Block,w
 13607  0AC8  2371               	fcall	PL6	;call to abstracted procedure
 13608  0AC9  0008               	return
 13609  0ACA                     __end_of_NVM_GetBlockLenght:	
 13610  0ACA                     __ptext18:	
 13611 ;; *************** function _DetermineProg *****************
 13612 ;; Defined at:
 13613 ;;		line 26 in file "../app_ProgTemp.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;		None
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  ix              1   11[COMMON] unsigned char 
 13618 ;;  ctime           1   10[COMMON] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 1F/0
 13625 ;;		On exit  : 1C/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:        2 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    4
 13635 ;; This function calls:
 13636 ;;		_NVM_ReadBlockData
 13637 ;;		_RTC_TimeToNumber
 13638 ;; This function is called by:
 13639 ;;		_DetermineMode
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           
 13644                           ;psect for function _DetermineProg
 13645  0ACA                     _DetermineProg:	
 13646  0ACA                     l6760:	
 13647                           ;incstack = 0
 13648                           ; Regs used in _DetermineProg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13649                           
 13650  0ACA  3006               	movlw	6
 13651  0ACB  0021               	movlb	1	; select bank1
 13652  0ACC  023F               	subwf	(_DateTime^(0+128)+3),w
 13653  0ACD  1C03               	skipc
 13654  0ACE  2AD1               	goto	l6764
 13655  0ACF  3004               	movlw	4
 13656  0AD0  2AD2               	goto	L4
 13657  0AD1                     l6764:	
 13658  0AD1  3003               	movlw	3
 13659  0AD2                     L4:	
 13660  0AD2  0020               	movlb	0	; select bank0
 13661  0AD3  00CD               	movwf	_nvblock
 13662  0AD4  230A  3189         	fcall	_RTC_TimeToNumber
 13663  0AD6  00FA               	movwf	DetermineProg@ctime
 13664  0AD7  3007               	movlw	7
 13665  0AD8  00FB               	movwf	DetermineProg@ix
 13666  0AD9  087B               	movf	DetermineProg@ix,w
 13667  0ADA                     L5:	
 13668  0ADA  1903               	btfsc	3,2
 13669  0ADB  0008               	return
 13670  0ADC  03FB               	decf	DetermineProg@ix,f
 13671  0ADD  087B               	movf	DetermineProg@ix,w
 13672  0ADE  00F0               	movwf	NVM_ReadBlockData@offset
 13673  0ADF  0020               	movlb	0	; select bank0
 13674  0AE0  084D               	movf	_nvblock,w
 13675  0AE1  22F1  3189         	fcall	_NVM_ReadBlockData
 13676  0AE3  027A               	subwf	DetermineProg@ctime,w
 13677  0AE4  087B               	movf	DetermineProg@ix,w
 13678  0AE5  1C03               	skipc
 13679  0AE6  2ADA               	goto	L5
 13680  0AE7  3E07               	addlw	7
 13681  0AE8  0020               	movlb	0	; select bank0
 13682  0AE9  00CC               	movwf	_nvpos
 13683  0AEA  00F0               	movwf	NVM_ReadBlockData@offset
 13684  0AEB  084D               	movf	_nvblock,w
 13685  0AEC  22F1               	fcall	_NVM_ReadBlockData
 13686  0AED  0020               	movlb	0	; select bank0
 13687  0AEE  00AE               	movwf	_ProgSetTemp
 13688  0AEF  01AF               	clrf	_ProgSetTemp+1
 13689  0AF0  0008               	return
 13690  0AF1                     __end_of_DetermineProg:	
 13691  0AF1                     __ptext81:	
 13692 ;; *************** function _NVM_ReadBlockData *****************
 13693 ;; Defined at:
 13694 ;;		line 219 in file "../../LIBC/NVM/svc_nvm.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  Block           1    wreg     unsigned char 
 13697 ;;  offset          1    0[COMMON] unsigned char 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  Block           1    4[COMMON] unsigned char 
 13700 ;;  pr              2    5[COMMON] PTR unsigned char 
 13701 ;;		 -> RAM_CTRL(28), TEMP_HISTORY(24), RAM_TEMP_REGDATA(4), RAM_TEMPPROG2(14), 
 13702 ;;		 -> RAM_TEMPPROG(14), RAM_PIRDATA(9), RAM_NWID(5), REG_PARAMS_RAM(4), 
 13703 ;;		 -> RAM_PARAM(5), 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      unsigned char 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13708 ;; Tracked objects:
 13709 ;;		On entry : 1C/0
 13710 ;;		On exit  : 1C/0
 13711 ;;		Unchanged: 1C/0
 13712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;Total ram usage:        7 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    1
 13720 ;; This function calls:
 13721 ;;		Nothing
 13722 ;; This function is called by:
 13723 ;;		_DetermineProg
 13724 ;;		_UDS_RDBID
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           
 13729                           ;psect for function _NVM_ReadBlockData
 13730  0AF1                     _NVM_ReadBlockData:	
 13731                           
 13732                           ;incstack = 0
 13733                           ; Regs used in _NVM_ReadBlockData: [wreg-fsr1h+status,2+status,0]
 13734  0AF1  00F4               	movwf	NVM_ReadBlockData@Block
 13735  0AF2  00F1               	movwf	??_NVM_ReadBlockData
 13736  0AF3  304E               	movlw	low (_NVM_BlockRAM| (0+32768))
 13737  0AF4  01F2               	clrf	??_NVM_ReadBlockData+1
 13738  0AF5  35F1               	lslf	??_NVM_ReadBlockData,f
 13739  0AF6  0DF2               	rlf	??_NVM_ReadBlockData+1,f
 13740  0AF7  0771               	addwf	??_NVM_ReadBlockData,w
 13741  0AF8  0084               	movwf	4
 13742  0AF9  3098               	movlw	high (_NVM_BlockRAM| (0+32768))
 13743  0AFA  3D72               	addwfc	??_NVM_ReadBlockData+1,w
 13744  0AFB  0085               	movwf	5
 13745  0AFC  3F00               	moviw [0]fsr0
 13746  0AFD  00F5               	movwf	NVM_ReadBlockData@pr
 13747  0AFE  3F01               	moviw [1]fsr0
 13748  0AFF  00F6               	movwf	NVM_ReadBlockData@pr+1
 13749  0B00  0870               	movf	NVM_ReadBlockData@offset,w
 13750  0B01  00F1               	movwf	??_NVM_ReadBlockData
 13751  0B02  01F2               	clrf	??_NVM_ReadBlockData+1
 13752  0B03  0775               	addwf	NVM_ReadBlockData@pr,w
 13753  0B04  0086               	movwf	6
 13754  0B05  0872               	movf	??_NVM_ReadBlockData+1,w
 13755  0B06  3D76               	addwfc	NVM_ReadBlockData@pr+1,w
 13756  0B07  0087               	movwf	7
 13757  0B08  0801               	movf	1,w
 13758  0B09  0008               	return
 13759  0B0A                     __end_of_NVM_ReadBlockData:	
 13760  0B0A                     __ptext19:	
 13761 ;; *************** function _RTC_TimeToNumber *****************
 13762 ;; Defined at:
 13763 ;;		line 77 in file "../../LIBC/RTC/app_RTC.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;  r               1    9[COMMON] unsigned char 
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  1    wreg      unsigned char 
 13770 ;; Registers used:
 13771 ;;		wreg, status,2, status,0, pclath, cstack
 13772 ;; Tracked objects:
 13773 ;;		On entry : 1F/0
 13774 ;;		On exit  : 1E/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;Total ram usage:        1 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:    3
 13784 ;; This function calls:
 13785 ;;		_RTC_BCD2DEC
 13786 ;;		___lbdiv
 13787 ;; This function is called by:
 13788 ;;		_DetermineProg
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           
 13793                           ;psect for function _RTC_TimeToNumber
 13794  0B0A                     _RTC_TimeToNumber:	
 13795                           
 13796                           ;incstack = 0
 13797                           ; Regs used in _RTC_TimeToNumber: [wreg+status,2+status,0+pclath+cstack]
 13798  0B0A  0021               	movlb	1	; select bank1
 13799  0B0B  083E               	movf	(_DateTime^(0+128)+2),w
 13800  0B0C  231B  3189         	fcall	_RTC_BCD2DEC
 13801  0B0E  00F9               	movwf	RTC_TimeToNumber@r
 13802  0B0F  300F               	movlw	15
 13803  0B10  35F9               	lslf	RTC_TimeToNumber@r,f
 13804  0B11  35F9               	lslf	RTC_TimeToNumber@r,f
 13805  0B12  00F5               	movwf	___lbdiv@divisor
 13806  0B13  0021               	movlb	1	; select bank1
 13807  0B14  083D               	movf	(_DateTime^(0+128)+1),w
 13808  0B15  231B               	fcall	_RTC_BCD2DEC
 13809  0B16  3187  27C0         	fcall	___lbdiv
 13810  0B18  07F9               	addwf	RTC_TimeToNumber@r,f
 13811  0B19  0879               	movf	RTC_TimeToNumber@r,w
 13812  0B1A  0008               	return
 13813  0B1B                     __end_of_RTC_TimeToNumber:	
 13814  0B1B                     __ptext115:	
 13815 ;; *************** function _RTC_BCD2DEC *****************
 13816 ;; Defined at:
 13817 ;;		line 70 in file "../../LIBC/RTC/app_RTC.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  x               1    wreg     unsigned char 
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;  x               1    4[COMMON] unsigned char 
 13822 ;;  y               1    3[COMMON] unsigned char 
 13823 ;; Return value:  Size  Location     Type
 13824 ;;                  1    wreg      unsigned char 
 13825 ;; Registers used:
 13826 ;;		wreg, status,2, status,0, pclath, cstack
 13827 ;; Tracked objects:
 13828 ;;		On entry : 1E/1
 13829 ;;		On exit  : 1E/0
 13830 ;;		Unchanged: 1E/0
 13831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;Total ram usage:        2 bytes
 13837 ;; Hardware stack levels used:    1
 13838 ;; Hardware stack levels required when called:    2
 13839 ;; This function calls:
 13840 ;;		___bmul
 13841 ;; This function is called by:
 13842 ;;		_RTC_TimeToNumber
 13843 ;;		_AirS_Task_Slow
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           
 13848                           ;psect for function _RTC_BCD2DEC
 13849  0B1B                     _RTC_BCD2DEC:	
 13850                           
 13851                           ;incstack = 0
 13852                           ; Regs used in _RTC_BCD2DEC: [wreg+status,2+status,0+pclath+cstack]
 13853  0B1B  00F4               	movwf	RTC_BCD2DEC@x
 13854  0B1C  00F3               	movwf	RTC_BCD2DEC@y
 13855  0B1D  300F               	movlw	15
 13856  0B1E  05F3               	andwf	RTC_BCD2DEC@y,f
 13857  0B1F  300A               	movlw	10
 13858  0B20  00F0               	movwf	___bmul@multiplicand
 13859  0B21  0E74               	swapf	RTC_BCD2DEC@x,w
 13860  0B22  390F               	andlw	15
 13861  0B23  2327               	fcall	___bmul
 13862  0B24  07F3               	addwf	RTC_BCD2DEC@y,f
 13863  0B25  0873               	movf	RTC_BCD2DEC@y,w
 13864  0B26  0008               	return
 13865  0B27                     __end_of_RTC_BCD2DEC:	
 13866  0B27                     __ptext116:	
 13867 ;; *************** function ___bmul *****************
 13868 ;; Defined at:
 13869 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 13870 ;; Parameters:    Size  Location     Type
 13871 ;;  multiplier      1    wreg     unsigned char 
 13872 ;;  multiplicand    1    0[COMMON] unsigned char 
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;  multiplier      1    2[COMMON] unsigned char 
 13875 ;;  product         1    1[COMMON] unsigned char 
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      unsigned char 
 13878 ;; Registers used:
 13879 ;;		wreg, status,2, status,0
 13880 ;; Tracked objects:
 13881 ;;		On entry : 1E/1
 13882 ;;		On exit  : 1E/0
 13883 ;;		Unchanged: 1E/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;Total ram usage:        3 bytes
 13890 ;; Hardware stack levels used:    1
 13891 ;; Hardware stack levels required when called:    1
 13892 ;; This function calls:
 13893 ;;		Nothing
 13894 ;; This function is called by:
 13895 ;;		_RTC_BCD2DEC
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           
 13900                           ;psect for function ___bmul
 13901  0B27                     ___bmul:	
 13902                           
 13903                           ;incstack = 0
 13904                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 13905  0B27  00F2               	movwf	___bmul@multiplier
 13906  0B28  01F1               	clrf	___bmul@product
 13907  0B29                     l4216:	
 13908  0B29  0870               	movf	___bmul@multiplicand,w
 13909  0B2A  1872               	btfsc	___bmul@multiplier,0
 13910  0B2B  07F1               	addwf	___bmul@product,f
 13911  0B2C  35F0               	lslf	___bmul@multiplicand,f
 13912  0B2D  36F2               	lsrf	___bmul@multiplier,f
 13913  0B2E  0872               	movf	___bmul@multiplier,w
 13914  0B2F  1D03               	btfss	3,2
 13915  0B30  2B29               	goto	l4216
 13916  0B31  0871               	movf	___bmul@product,w
 13917  0B32  0008               	return
 13918  0B33                     __end_of___bmul:	
 13919  0B33                     __ptext78:	
 13920 ;; *************** function _NVM_WriteBlockData *****************
 13921 ;; Defined at:
 13922 ;;		line 208 in file "../../LIBC/NVM/svc_nvm.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  Block           1    wreg     unsigned char 
 13925 ;;  offset          1    0[COMMON] unsigned char 
 13926 ;;  data            1    1[COMMON] unsigned char 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;  Block           1    8[COMMON] unsigned char 
 13929 ;;  pr              2    6[COMMON] PTR unsigned char 
 13930 ;;		 -> RAM_CTRL(28), TEMP_HISTORY(24), RAM_TEMP_REGDATA(4), RAM_TEMPPROG2(14), 
 13931 ;;		 -> RAM_TEMPPROG(14), RAM_PIRDATA(9), RAM_NWID(5), REG_PARAMS_RAM(4), 
 13932 ;;		 -> RAM_PARAM(5), 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      unsigned char 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13937 ;; Tracked objects:
 13938 ;;		On entry : 1C/0
 13939 ;;		On exit  : 1C/0
 13940 ;;		Unchanged: 1C/0
 13941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;Total ram usage:        9 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; Hardware stack levels required when called:    1
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_PRG_SetNewTemp
 13953 ;;		_UDS_WDBID
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           
 13958                           ;psect for function _NVM_WriteBlockData
 13959  0B33                     _NVM_WriteBlockData:	
 13960                           
 13961                           ;incstack = 0
 13962                           ; Regs used in _NVM_WriteBlockData: [wreg-fsr1h+status,2+status,0+pclath]
 13963  0B33  00F8               	movwf	NVM_WriteBlockData@Block
 13964  0B34  3009               	movlw	9
 13965  0B35  0278               	subwf	NVM_WriteBlockData@Block,w
 13966  0B36  1803               	skipnc
 13967  0B37  3401               	retlw	1
 13968  0B38  0878               	movf	NVM_WriteBlockData@Block,w
 13969  0B39  2371  3189         	fcall	PL6	;call to abstracted procedure
 13970  0B3B  0270               	subwf	NVM_WriteBlockData@offset,w
 13971  0B3C  1803               	skipnc
 13972  0B3D  3401               	retlw	1
 13973  0B3E  0878               	movf	NVM_WriteBlockData@Block,w
 13974  0B3F  00F2               	movwf	??_NVM_WriteBlockData
 13975  0B40  304E               	movlw	low (_NVM_BlockRAM| (0+32768))
 13976  0B41  01F3               	clrf	??_NVM_WriteBlockData+1
 13977  0B42  35F2               	lslf	??_NVM_WriteBlockData,f
 13978  0B43  0DF3               	rlf	??_NVM_WriteBlockData+1,f
 13979  0B44  0772               	addwf	??_NVM_WriteBlockData,w
 13980  0B45  0084               	movwf	4
 13981  0B46  3098               	movlw	high (_NVM_BlockRAM| (0+32768))
 13982  0B47  3D73               	addwfc	??_NVM_WriteBlockData+1,w
 13983  0B48  0085               	movwf	5
 13984  0B49  3F00               	moviw [0]fsr0
 13985  0B4A  00F6               	movwf	NVM_WriteBlockData@pr
 13986  0B4B  3F01               	moviw [1]fsr0
 13987  0B4C  00F7               	movwf	NVM_WriteBlockData@pr+1
 13988  0B4D  0870               	movf	NVM_WriteBlockData@offset,w
 13989  0B4E  00F2               	movwf	??_NVM_WriteBlockData
 13990  0B4F  01F3               	clrf	??_NVM_WriteBlockData+1
 13991  0B50  0776               	addwf	NVM_WriteBlockData@pr,w
 13992  0B51  00F4               	movwf	??_NVM_WriteBlockData+2
 13993  0B52  0873               	movf	??_NVM_WriteBlockData+1,w
 13994  0B53  3D77               	addwfc	NVM_WriteBlockData@pr+1,w
 13995  0B54  00F5               	movwf	??_NVM_WriteBlockData+3
 13996  0B55  0874               	movf	??_NVM_WriteBlockData+2,w
 13997  0B56  0086               	movwf	6
 13998  0B57  0875               	movf	??_NVM_WriteBlockData+3,w
 13999  0B58  0087               	movwf	7
 14000  0B59  0871               	movf	NVM_WriteBlockData@data,w
 14001  0B5A  0081               	movwf	1
 14002  0B5B  3400               	retlw	0
 14003  0B5C                     __end_of_NVM_WriteBlockData:	
 14004  0B5C                     __ptext71:	
 14005 ;; *************** function _WriteNVMBlockSync *****************
 14006 ;; Defined at:
 14007 ;;		line 78 in file "../svc_uds.c"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;  block           1    wreg     unsigned char 
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;  block           1    5[COMMON] unsigned char 
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  1    wreg      void 
 14014 ;; Registers used:
 14015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14016 ;; Tracked objects:
 14017 ;;		On entry : 1F/3
 14018 ;;		On exit  : 1C/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;Total ram usage:        1 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:    4
 14028 ;; This function calls:
 14029 ;;		_NVM_Task
 14030 ;;		_NVM_WriteBlock
 14031 ;; This function is called by:
 14032 ;;		_UDS_WDBID
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           
 14037                           ;psect for function _WriteNVMBlockSync
 14038  0B5C                     _WriteNVMBlockSync:	
 14039                           
 14040                           ;incstack = 0
 14041                           ; Regs used in _WriteNVMBlockSync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14042  0B5C  00F5               	movwf	WriteNVMBlockSync@block
 14043  0B5D  236A  3189         	fcall	_NVM_WriteBlock
 14044  0B5F                     l6584:	
 14045  0B5F  0875               	movf	WriteNVMBlockSync@block,w
 14046  0B60  3E20               	addlw	(low (_NVM_BlockStatus| (0+256)))& (0+255)
 14047  0B61  0086               	movwf	6
 14048  0B62  3001               	movlw	1	; select bank2/3
 14049  0B63  0087               	movwf	7
 14050  0B64  1D01               	btfss	1,2
 14051  0B65  0008               	return
 14052  0B66  318C  2499  3189   	fcall	_NVM_Task
 14053  0B69  2B5F               	goto	l6584
 14054  0B6A                     __end_of_WriteNVMBlockSync:	
 14055  0B6A                     __ptext72:	
 14056 ;; *************** function _NVM_WriteBlock *****************
 14057 ;; Defined at:
 14058 ;;		line 75 in file "../../LIBC/NVM/svc_nvm.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  BlockIndex      1    wreg     unsigned char 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  BlockIndex      1    0[COMMON] unsigned char 
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      void 
 14065 ;; Registers used:
 14066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14067 ;; Tracked objects:
 14068 ;;		On entry : 1C/0
 14069 ;;		On exit  : 1C/0
 14070 ;;		Unchanged: 1C/0
 14071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;Total ram usage:        1 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:    1
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_PRG_TaskSlow
 14083 ;;		_WriteNVMBlockSync
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           
 14088                           ;psect for function _NVM_WriteBlock
 14089  0B6A                     _NVM_WriteBlock:	
 14090                           
 14091                           ;incstack = 0
 14092                           ; Regs used in _NVM_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
 14093  0B6A  00F0               	movwf	NVM_WriteBlock@BlockIndex
 14094  0B6B  3E20               	addlw	(low (_NVM_BlockStatus| (0+256)))& (0+255)
 14095  0B6C  0086               	movwf	6
 14096  0B6D  3001               	movlw	1	; select bank2/3
 14097  0B6E  0087               	movwf	7
 14098  0B6F  1501               	bsf	1,2
 14099  0B70  0008               	return
 14100  0B71                     __end_of_NVM_WriteBlock:	
 14101  0B71                     PL6:	
 14102  0B71  3E81               	addlw	low (_NVM_BlockSize| (0+32768))
 14103  0B72  0084               	movwf	4
 14104  0B73  3098               	movlw	high (_NVM_BlockSize| (0+32768))
 14105  0B74  1803               	skipnc
 14106  0B75  3E01               	addlw	1
 14107  0B76  0085               	movwf	5
 14108  0B77  0800               	movf	0,w	;code access
 14109  0B78  0008               	return
 14110  0B79                     __end_ofPL6:	
 14111  0B79                     __ptext20:	
 14112 ;; *************** function _PRG_Init *****************
 14113 ;; Defined at:
 14114 ;;		line 50 in file "../app_ProgTemp.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;		None
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;		None
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      void 
 14121 ;; Registers used:
 14122 ;;		wreg, status,2
 14123 ;; Tracked objects:
 14124 ;;		On entry : 1F/1
 14125 ;;		On exit  : 1F/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14132 ;;Total ram usage:        0 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; Hardware stack levels required when called:    1
 14135 ;; This function calls:
 14136 ;;		Nothing
 14137 ;; This function is called by:
 14138 ;;		_main
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           
 14143                           ;psect for function _PRG_Init
 14144  0B79                     _PRG_Init:	
 14145                           
 14146                           ;incstack = 0
 14147                           ; Regs used in _PRG_Init: [wreg+status,2]
 14148  0B79  237D               	fcall	PL20	;call to abstracted procedure
 14149  0B7A  01CC               	clrf	_nvpos
 14150  0B7B  01CA               	clrf	_bWriteNvm
 14151  0B7C  0008               	return
 14152  0B7D                     __end_of_PRG_Init:	
 14153  0B7D                     PL20:	
 14154  0B7D  085E               	movf	(_RAM_PARAM^(0+128)+4),w
 14155  0B7E  0020               	movlb	0	; select bank0
 14156  0B7F  00AE               	movwf	_ProgSetTemp
 14157  0B80  01AF               	clrf	_ProgSetTemp+1
 14158  0B81  01CB               	clrf	_c_mode
 14159  0B82  0008               	return
 14160  0B83                     __end_ofPL20:	
 14161                           
 14162                           	psect	text86
 14163  1766                     __ptext86:	
 14164 ;; *************** function _UDS_CompareKey *****************
 14165 ;; Defined at:
 14166 ;;		line 51 in file "../svc_uds.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;  s1              4    1[COMMON] unsigned long 
 14171 ;; Return value:  Size  Location     Type
 14172 ;;                  1    wreg      unsigned char 
 14173 ;; Registers used:
 14174 ;;		wreg, status,2, status,0, pclath, cstack
 14175 ;; Tracked objects:
 14176 ;;		On entry : 1F/3
 14177 ;;		On exit  : 18/0
 14178 ;;		Unchanged: 0/0
 14179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;Total ram usage:       20 bytes
 14185 ;; Hardware stack levels used:    1
 14186 ;; Hardware stack levels required when called:    3
 14187 ;; This function calls:
 14188 ;;		_Calc_Key
 14189 ;;		_NEG_RESP
 14190 ;;		_POS_RESP
 14191 ;; This function is called by:
 14192 ;;		_Comm_RxProcess
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           
 14197                           ;psect for function _UDS_CompareKey
 14198  1766                     _UDS_CompareKey:	
 14199                           
 14200                           ;incstack = 0
 14201                           ; Regs used in _UDS_CompareKey: [wreg+status,2+status,0+pclath+cstack]
 14202  1766  27C8  3197         	fcall	_Calc_Key
 14203  1768  0023               	movlb	3	; select bank3
 14204  1769  0825               	movf	(_RxPacket^(0+384)+5),w
 14205  176A  0020               	movlb	0	; select bank0
 14206  176B  00DC               	movwf	??_UDS_CompareKey
 14207  176C  01DD               	clrf	??_UDS_CompareKey+1
 14208  176D  01DE               	clrf	??_UDS_CompareKey+2
 14209  176E  01DF               	clrf	??_UDS_CompareKey+3
 14210  176F  0023               	movlb	3	; select bank3
 14211  1770  0826               	movf	(_RxPacket^(0+384)+6),w
 14212  1771  0020               	movlb	0	; select bank0
 14213  1772  00E0               	movwf	??_UDS_CompareKey+4
 14214  1773  01E1               	clrf	??_UDS_CompareKey+5
 14215  1774  01E2               	clrf	??_UDS_CompareKey+6
 14216  1775  01E3               	clrf	??_UDS_CompareKey+7
 14217  1776  0862               	movf	??_UDS_CompareKey+6,w
 14218  1777  00E3               	movwf	??_UDS_CompareKey+7
 14219  1778  0861               	movf	??_UDS_CompareKey+5,w
 14220  1779  00E2               	movwf	??_UDS_CompareKey+6
 14221  177A  0860               	movf	??_UDS_CompareKey+4,w
 14222  177B  00E1               	movwf	??_UDS_CompareKey+5
 14223  177C  01E0               	clrf	??_UDS_CompareKey+4
 14224  177D  0023               	movlb	3	; select bank3
 14225  177E  0827               	movf	(_RxPacket^(0+384)+7),w
 14226  177F  0020               	movlb	0	; select bank0
 14227  1780  00E4               	movwf	??_UDS_CompareKey+8
 14228  1781  01E5               	clrf	??_UDS_CompareKey+9
 14229  1782  01E6               	clrf	??_UDS_CompareKey+10
 14230  1783  01E7               	clrf	??_UDS_CompareKey+11
 14231  1784  0865               	movf	??_UDS_CompareKey+9,w
 14232  1785  00E7               	movwf	??_UDS_CompareKey+11
 14233  1786  0864               	movf	??_UDS_CompareKey+8,w
 14234  1787  00E6               	movwf	??_UDS_CompareKey+10
 14235  1788  01E5               	clrf	??_UDS_CompareKey+9
 14236  1789  01E4               	clrf	??_UDS_CompareKey+8
 14237  178A  0023               	movlb	3	; select bank3
 14238  178B  0828               	movf	(_RxPacket^(0+384)+8),w
 14239  178C  0020               	movlb	0	; select bank0
 14240  178D  00EB               	movwf	??_UDS_CompareKey+15
 14241  178E  01EA               	clrf	??_UDS_CompareKey+14
 14242  178F  01E9               	clrf	??_UDS_CompareKey+13
 14243  1790  01E8               	clrf	??_UDS_CompareKey+12
 14244  1791  0868               	movf	??_UDS_CompareKey+12,w
 14245  1792  04E4               	iorwf	??_UDS_CompareKey+8,f
 14246  1793  0869               	movf	??_UDS_CompareKey+13,w
 14247  1794  04E5               	iorwf	??_UDS_CompareKey+9,f
 14248  1795  086A               	movf	??_UDS_CompareKey+14,w
 14249  1796  04E6               	iorwf	??_UDS_CompareKey+10,f
 14250  1797  086B               	movf	??_UDS_CompareKey+15,w
 14251  1798  04E7               	iorwf	??_UDS_CompareKey+11,f
 14252  1799  0864               	movf	??_UDS_CompareKey+8,w
 14253  179A  04E0               	iorwf	??_UDS_CompareKey+4,f
 14254  179B  0865               	movf	??_UDS_CompareKey+9,w
 14255  179C  04E1               	iorwf	??_UDS_CompareKey+5,f
 14256  179D  0866               	movf	??_UDS_CompareKey+10,w
 14257  179E  04E2               	iorwf	??_UDS_CompareKey+6,f
 14258  179F  0867               	movf	??_UDS_CompareKey+11,w
 14259  17A0  04E3               	iorwf	??_UDS_CompareKey+7,f
 14260  17A1  085C               	movf	??_UDS_CompareKey,w
 14261  17A2  0460               	iorwf	??_UDS_CompareKey+4,w
 14262  17A3  00F1               	movwf	UDS_CompareKey@s1
 14263  17A4  085D               	movf	??_UDS_CompareKey+1,w
 14264  17A5  0461               	iorwf	??_UDS_CompareKey+5,w
 14265  17A6  00F2               	movwf	UDS_CompareKey@s1+1
 14266  17A7  085E               	movf	??_UDS_CompareKey+2,w
 14267  17A8  0462               	iorwf	??_UDS_CompareKey+6,w
 14268  17A9  00F3               	movwf	UDS_CompareKey@s1+2
 14269  17AA  085F               	movf	??_UDS_CompareKey+3,w
 14270  17AB  0463               	iorwf	??_UDS_CompareKey+7,w
 14271  17AC  00F4               	movwf	UDS_CompareKey@s1+3
 14272  17AD  0623               	xorwf	_seed+3,w
 14273  17AE  1D03               	skipz
 14274  17AF  2FBA               	goto	u5235
 14275  17B0  0873               	movf	UDS_CompareKey@s1+2,w
 14276  17B1  0622               	xorwf	_seed+2,w
 14277  17B2  1D03               	skipz
 14278  17B3  2FBA               	goto	u5235
 14279  17B4  0872               	movf	UDS_CompareKey@s1+1,w
 14280  17B5  0621               	xorwf	_seed+1,w
 14281  17B6  1D03               	skipz
 14282  17B7  2FBA               	goto	u5235
 14283  17B8  0871               	movf	UDS_CompareKey@s1,w
 14284  17B9  0620               	xorwf	_seed,w
 14285  17BA                     u5235:	
 14286  17BA  1903               	skipnz
 14287  17BB  2FC4               	goto	l6800
 14288  17BC  3022               	movlw	34
 14289  17BD  01A0               	clrf	_seed
 14290  17BE  01A1               	clrf	_seed+1
 14291  17BF  01A2               	clrf	_seed+2
 14292  17C0  01A3               	clrf	_seed+3
 14293  17C1  318F  27BD         	fcall	_NEG_RESP
 14294  17C3  3400               	retlw	0
 14295  17C4                     l6800:	
 14296  17C4  3000               	movlw	0
 14297  17C5  318A  22B1         	fcall	_POS_RESP
 14298  17C7  3401               	retlw	1
 14299  17C8                     __end_of_UDS_CompareKey:	
 14300  17C8                     __ptext89:	
 14301 ;; *************** function _Calc_Key *****************
 14302 ;; Defined at:
 14303 ;;		line 41 in file "../svc_uds.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;		None
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1    wreg      void 
 14310 ;; Registers used:
 14311 ;;		wreg, status,2, status,0, pclath, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 1F/3
 14314 ;;		On exit  : 1C/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;Total ram usage:        0 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:    2
 14324 ;; This function calls:
 14325 ;;		_ROL
 14326 ;; This function is called by:
 14327 ;;		_UDS_CompareKey
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           
 14332                           ;psect for function _Calc_Key
 14333  17C8                     _Calc_Key:	
 14334                           
 14335                           ;incstack = 0
 14336                           ; Regs used in _Calc_Key: [wreg+status,2+status,0+pclath+cstack]
 14337  17C8  3007               	movlw	7
 14338  17C9  27ED  3197         	fcall	_ROL
 14339  17CB  3024               	movlw	36
 14340  17CC  0020               	movlb	0	; select bank0
 14341  17CD  06A0               	xorwf	_seed,f
 14342  17CE  3061               	movlw	97
 14343  17CF  06A1               	xorwf	_seed+1,f
 14344  17D0  3023               	movlw	35
 14345  17D1  06A2               	xorwf	_seed+2,f
 14346  17D2  30CA               	movlw	202
 14347  17D3  06A3               	xorwf	_seed+3,f
 14348  17D4  3005               	movlw	5
 14349  17D5  27ED  3197         	fcall	_ROL
 14350  17D7  3041               	movlw	65
 14351  17D8  0020               	movlb	0	; select bank0
 14352  17D9  06A0               	xorwf	_seed,f
 14353  17DA  3016               	movlw	22
 14354  17DB  06A1               	xorwf	_seed+1,f
 14355  17DC  3032               	movlw	50
 14356  17DD  06A2               	xorwf	_seed+2,f
 14357  17DE  30AC               	movlw	172
 14358  17DF  06A3               	xorwf	_seed+3,f
 14359  17E0  3003               	movlw	3
 14360  17E1  27ED  3197         	fcall	_ROL
 14361  17E3  3012               	movlw	18
 14362  17E4  0020               	movlb	0	; select bank0
 14363  17E5  06A0               	xorwf	_seed,f
 14364  17E6  3001               	movlw	1
 14365  17E7  06A1               	xorwf	_seed+1,f
 14366  17E8  3010               	movlw	16
 14367  17E9  06A2               	xorwf	_seed+2,f
 14368  17EA  3001               	movlw	1
 14369  17EB  06A3               	xorwf	_seed+3,f
 14370  17EC  2FED               	ljmp	_ROL
 14371  17ED                     __end_of_Calc_Key:	
 14372  17ED                     __ptext90:	
 14373 ;; *************** function _ROL *****************
 14374 ;; Defined at:
 14375 ;;		line 30 in file "../svc_uds.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  num             1    wreg     unsigned char 
 14378 ;; Auto vars:     Size  Location     Type
 14379 ;;  num             1    0[COMMON] unsigned char 
 14380 ;; Return value:  Size  Location     Type
 14381 ;;                  1    wreg      void 
 14382 ;; Registers used:
 14383 ;;		wreg, status,2, status,0
 14384 ;; Tracked objects:
 14385 ;;		On entry : 1C/3
 14386 ;;		On exit  : 1C/0
 14387 ;;		Unchanged: 0/0
 14388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;Total ram usage:        1 bytes
 14394 ;; Hardware stack levels used:    1
 14395 ;; Hardware stack levels required when called:    1
 14396 ;; This function calls:
 14397 ;;		Nothing
 14398 ;; This function is called by:
 14399 ;;		_Calc_Key
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           
 14404                           ;psect for function _ROL
 14405  17ED                     _ROL:	
 14406                           
 14407                           ;incstack = 0
 14408                           ; Regs used in _ROL: [wreg+status,2+status,0]
 14409  17ED  00F0               	movwf	ROL@num
 14410  17EE                     l4316:	
 14411  17EE  03F0               	decf	ROL@num,f
 14412  17EF  0F70               	incfsz	ROL@num,w
 14413  17F0  2FF2               	goto	l833
 14414  17F1  0008               	return
 14415  17F2                     l833:	
 14416  17F2  0020               	movlb	0	; select bank0
 14417  17F3  1FA3               	btfss	_seed+3,7
 14418  17F4  2FFB               	goto	l4314
 14419  17F5  35A0               	lslf	_seed,f
 14420  17F6  0DA1               	rlf	_seed+1,f
 14421  17F7  0DA2               	rlf	_seed+2,f
 14422  17F8  0DA3               	rlf	_seed+3,f
 14423  17F9  1420               	bsf	_seed,0
 14424  17FA  2FEE               	goto	l4316
 14425  17FB                     l4314:	
 14426  17FB  35A0               	lslf	_seed,f
 14427  17FC  0DA1               	rlf	_seed+1,f
 14428  17FD  0DA2               	rlf	_seed+2,f
 14429  17FE  0DA3               	rlf	_seed+3,f
 14430  17FF  2FEE               	goto	l4316
 14431  1800                     __end_of_ROL:	
 14432                           
 14433                           	psect	text92
 14434  149F                     __ptext92:	
 14435 ;; *************** function _RTC_OnRTCFrame *****************
 14436 ;; Defined at:
 14437 ;;		line 50 in file "../../LIBC/RTC/app_RTC.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14446 ;; Tracked objects:
 14447 ;;		On entry : 1F/1
 14448 ;;		On exit  : 1F/1
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;Total ram usage:        1 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; Hardware stack levels required when called:    1
 14458 ;; This function calls:
 14459 ;;		Nothing
 14460 ;; This function is called by:
 14461 ;;		_Comm_RxProcess
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function _RTC_OnRTCFrame
 14467  149F                     _RTC_OnRTCFrame:	
 14468                           
 14469                           ;incstack = 0
 14470                           ; Regs used in _RTC_OnRTCFrame: [wreg-fsr1h+status,2+status,0]
 14471  149F  0020               	movlb	0	; select bank0
 14472  14A0  14D1               	bsf	_RTC_Status,1
 14473  14A1  0021               	movlb	1	; select bank1
 14474  14A2  0822               	movf	(_ComData^(0+128)+2),w
 14475  14A3  3EA1               	addlw	(low ((_RxPacket| (0+256)+1)))& (0+255)
 14476  14A4  0086               	movwf	6
 14477  14A5  3001               	movlw	1	; select bank3/4
 14478  14A6  0087               	movwf	7
 14479  14A7  30BC               	movlw	low _DateTime
 14480  14A8  0084               	movwf	4
 14481  14A9  3000               	movlw	high _DateTime
 14482  14AA  0085               	movwf	5
 14483  14AB  3007               	movlw	7
 14484  14AC  00F0               	movwf	??_RTC_OnRTCFrame
 14485  14AD                     u2930:	
 14486  14AD  0016               	moviw fsr1++
 14487  14AE  001A               	movwi fsr0++
 14488  14AF  0BF0               	decfsz	??_RTC_OnRTCFrame,f
 14489  14B0  2CAD               	goto	u2930
 14490  14B1  0008               	return
 14491  14B2                     __end_of_RTC_OnRTCFrame:	
 14492                           
 14493                           	psect	text93
 14494  1584                     __ptext93:	
 14495 ;; *************** function _PRS_OnPIRFrame *****************
 14496 ;; Defined at:
 14497 ;;		line 131 in file "../../LIBC/PRESENCE/app_Presence.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;		None
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;		None
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1    wreg      void 
 14504 ;; Registers used:
 14505 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14506 ;; Tracked objects:
 14507 ;;		On entry : 1F/1
 14508 ;;		On exit  : 1C/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;Total ram usage:        0 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:    1
 14518 ;; This function calls:
 14519 ;;		Nothing
 14520 ;; This function is called by:
 14521 ;;		_Comm_RxProcess
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           
 14526                           ;psect for function _PRS_OnPIRFrame
 14527  1584                     _PRS_OnPIRFrame:	
 14528                           
 14529                           ;incstack = 0
 14530                           ; Regs used in _PRS_OnPIRFrame: [wreg+fsr1l+fsr1h+status,2+status,0]
 14531  1584  0023               	movlb	3	; select bank3
 14532  1585  0822               	movf	(_RxPacket^(0+384)+2),w
 14533  1586  0022               	movlb	2	; select bank2
 14534  1587  065E               	xorwf	(_RAM_PIRDATA^(0+256)+1),w
 14535  1588  1903               	skipnz
 14536  1589  2D9C               	goto	l4956
 14537  158A  0023               	movlb	3	; select bank3
 14538  158B  0822               	movf	(_RxPacket^(0+384)+2),w
 14539  158C  0022               	movlb	2	; select bank2
 14540  158D  065F               	xorwf	(_RAM_PIRDATA^(0+256)+2),w
 14541  158E  1903               	skipnz
 14542  158F  2D9C               	goto	l4956
 14543  1590  0023               	movlb	3	; select bank3
 14544  1591  0822               	movf	(_RxPacket^(0+384)+2),w
 14545  1592  0022               	movlb	2	; select bank2
 14546  1593  0660               	xorwf	(_RAM_PIRDATA^(0+256)+3),w
 14547  1594  1903               	skipnz
 14548  1595  2D9C               	goto	l4956
 14549  1596  0023               	movlb	3	; select bank3
 14550  1597  0822               	movf	(_RxPacket^(0+384)+2),w
 14551  1598  0022               	movlb	2	; select bank2
 14552  1599  0661               	xorwf	(_RAM_PIRDATA^(0+256)+4),w
 14553  159A  1D03               	skipz
 14554  159B  0008               	return
 14555  159C                     l4956:	
 14556  159C  0021               	movlb	1	; select bank1
 14557  159D  25C6  3195         	fcall	PL4	;call to abstracted procedure
 14558  159F  1903               	btfsc	3,2
 14559  15A0  0008               	return
 14560  15A1  0020               	movlb	0	; select bank0
 14561  15A2  1439               	bsf	_pflags,0
 14562  15A3  0008               	return
 14563  15A4                     __end_of_PRS_OnPIRFrame:	
 14564  15A4                     __ptext96:	
 14565 ;; *************** function _App_OnWinSensor *****************
 14566 ;; Defined at:
 14567 ;;		line 36 in file "../app_win_sens.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;		None
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1    wreg      void 
 14574 ;; Registers used:
 14575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14576 ;; Tracked objects:
 14577 ;;		On entry : 1F/1
 14578 ;;		On exit  : 1E/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;Total ram usage:        0 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:    1
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_Comm_RxProcess
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           
 14596                           ;psect for function _App_OnWinSensor
 14597  15A4                     _App_OnWinSensor:	
 14598                           
 14599                           ;incstack = 0
 14600                           ; Regs used in _App_OnWinSensor: [wreg+fsr1l+fsr1h+status,2+status,0]
 14601  15A4  0023               	movlb	3	; select bank3
 14602  15A5  0822               	movf	(_RxPacket^(0+384)+2),w
 14603  15A6  0021               	movlb	1	; select bank1
 14604  15A7  065F               	xorwf	_RAM_TEMP_REGDATA^(0+128),w
 14605  15A8  1D03               	skipz
 14606  15A9  2DB5               	goto	l4968
 14607  15AA  25C6  3195         	fcall	PL4	;call to abstracted procedure
 14608  15AC  1903               	btfsc	3,2
 14609  15AD  2DB2               	goto	l4966
 14610  15AE  30FF               	movlw	255
 14611  15AF  0020               	movlb	0	; select bank0
 14612  15B0  00A4               	movwf	_uSc
 14613  15B1  0008               	return
 14614  15B2                     l4966:	
 14615  15B2  0020               	movlb	0	; select bank0
 14616  15B3  01A4               	clrf	_uSc
 14617  15B4  0008               	return
 14618  15B5                     l4968:	
 14619  15B5  0023               	movlb	3	; select bank3
 14620  15B6  0822               	movf	(_RxPacket^(0+384)+2),w
 14621  15B7  0021               	movlb	1	; select bank1
 14622  15B8  0660               	xorwf	(_RAM_TEMP_REGDATA^(0+128)+1),w
 14623  15B9  1D03               	skipz
 14624  15BA  0008               	return
 14625  15BB  25C6  3195         	fcall	PL4	;call to abstracted procedure
 14626  15BD  1903               	btfsc	3,2
 14627  15BE  2DC3               	goto	l4974
 14628  15BF  30FF               	movlw	255
 14629  15C0  0020               	movlb	0	; select bank0
 14630  15C1  00A5               	movwf	_uSc+1
 14631  15C2  0008               	return
 14632  15C3                     l4974:	
 14633  15C3  0020               	movlb	0	; select bank0
 14634  15C4  01A5               	clrf	_uSc+1
 14635  15C5  0008               	return
 14636  15C6                     __end_of_App_OnWinSensor:	
 14637  15C6                     PL4:	
 14638  15C6  0822               	movf	(_ComData^(0+128)+2),w
 14639  15C7  3EA1               	addlw	(low ((_RxPacket| (0+256)+1)))& (0+255)
 14640  15C8  0086               	movwf	6
 14641  15C9  3001               	movlw	1	; select bank3/4
 14642  15CA  0087               	movwf	7
 14643  15CB  0801               	movf	1,w
 14644  15CC  0008               	return
 14645  15CD                     __end_ofPL4:	
 14646                           
 14647                           	psect	text95
 14648  15CD                     __ptext95:	
 14649 ;; *************** function _Comm_IsAlreadyReceived *****************
 14650 ;; Defined at:
 14651 ;;		line 301 in file "../../LIBC/COM/svc_comm.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;		None
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;		None
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  1    wreg      unsigned char 
 14658 ;; Registers used:
 14659 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14660 ;; Tracked objects:
 14661 ;;		On entry : 1F/3
 14662 ;;		On exit  : 1D/1
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;Total ram usage:        1 bytes
 14670 ;; Hardware stack levels used:    1
 14671 ;; Hardware stack levels required when called:    1
 14672 ;; This function calls:
 14673 ;;		Nothing
 14674 ;; This function is called by:
 14675 ;;		_Comm_RxProcess
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           
 14680                           ;psect for function _Comm_IsAlreadyReceived
 14681  15CD                     _Comm_IsAlreadyReceived:	
 14682                           
 14683                           ;incstack = 0
 14684                           ; Regs used in _Comm_IsAlreadyReceived: [wreg+fsr1l+fsr1h+status,2+status,0]
 14685  15CD  0821               	movf	(_RxPacket^(0+384)+1),w
 14686  15CE  1D03               	btfss	3,2
 14687  15CF  3400               	retlw	0
 14688  15D0  0021               	movlb	1	; select bank1
 14689  15D1  30FF               	movlw	255
 14690  15D2  01A5               	clrf	(_ComData^(0+128)+5)
 14691  15D3  01A2               	clrf	(_ComData^(0+128)+2)
 14692  15D4  00A6               	movwf	(_ComData^(0+128)+6)
 14693  15D5                     l4940:	
 14694  15D5  3004               	movlw	4
 14695  15D6  0222               	subwf	(_ComData^(0+128)+2),w
 14696  15D7  1803               	btfsc	3,0
 14697  15D8  2DFF               	goto	l4942
 14698  15D9  0822               	movf	(_ComData^(0+128)+2),w
 14699  15DA  3EA7               	addlw	(low ((_ComData| 0+7)))& (0+255)
 14700  15DB  0086               	movwf	6
 14701  15DC  0187               	clrf	7
 14702  15DD  0801               	movf	1,w
 14703  15DE  0023               	movlb	3	; select bank3
 14704  15DF  0622               	xorwf	(_RxPacket^(0+384)+2),w
 14705  15E0  1D03               	skipz
 14706  15E1  2DED               	goto	l4932
 14707  15E2  0021               	movlb	1	; select bank1
 14708  15E3  0822               	movf	(_ComData^(0+128)+2),w
 14709  15E4  3EAB               	addlw	(low ((_ComData| 0+11)))& (0+255)
 14710  15E5  0086               	movwf	6
 14711  15E6  300F               	movlw	15
 14712  15E7  0023               	movlb	3	; select bank3
 14713  15E8  0523               	andwf	(_RxPacket^(0+384)+3),w
 14714  15E9  00F0               	movwf	??_Comm_IsAlreadyReceived
 14715  15EA  0601               	xorwf	1,w
 14716  15EB  1903               	btfsc	3,2
 14717  15EC  3401               	retlw	1
 14718  15ED                     l4932:	
 14719  15ED  0021               	movlb	1	; select bank1
 14720  15EE  0822               	movf	(_ComData^(0+128)+2),w
 14721  15EF  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
 14722  15F0  0086               	movwf	6
 14723  15F1  0187               	clrf	7
 14724  15F2  0826               	movf	(_ComData^(0+128)+6),w
 14725  15F3  0201               	subwf	1,w
 14726  15F4  1803               	skipnc
 14727  15F5  2DFD               	goto	l4938
 14728  15F6  0822               	movf	(_ComData^(0+128)+2),w
 14729  15F7  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
 14730  15F8  0086               	movwf	6
 14731  15F9  0801               	movf	1,w
 14732  15FA  00A6               	movwf	(_ComData^(0+128)+6)
 14733  15FB  0822               	movf	(_ComData^(0+128)+2),w
 14734  15FC  00A5               	movwf	(_ComData^(0+128)+5)
 14735  15FD                     l4938:	
 14736  15FD  0AA2               	incf	(_ComData^(0+128)+2),f
 14737  15FE  2DD5               	goto	l4940
 14738  15FF                     l4942:	
 14739  15FF  0825               	movf	(_ComData^(0+128)+5),w
 14740  1600  3EA7               	addlw	(low ((_ComData| 0+7)))& (0+255)
 14741  1601  0086               	movwf	6
 14742  1602  0187               	clrf	7
 14743  1603  0023               	movlb	3	; select bank3
 14744  1604  0822               	movf	(_RxPacket^(0+384)+2),w
 14745  1605  2612  3195         	fcall	PL26	;call to abstracted procedure
 14746  1607  0023               	movlb	3	; select bank3
 14747  1608  0823               	movf	(_RxPacket^(0+384)+3),w
 14748  1609  2612               	fcall	PL26	;call to abstracted procedure
 14749  160A  300F               	movlw	15
 14750  160B  0581               	andwf	1,f
 14751  160C  0825               	movf	(_ComData^(0+128)+5),w
 14752  160D  3EAF               	addlw	(low ((_ComData| 0+15)))& (0+255)
 14753  160E  0086               	movwf	6
 14754  160F  3046               	movlw	70
 14755  1610  0081               	movwf	1
 14756  1611  3400               	retlw	0
 14757  1612                     __end_of_Comm_IsAlreadyReceived:	
 14758  1612                     PL26:	
 14759  1612  0081               	movwf	1
 14760  1613  0021               	movlb	1	; select bank1
 14761  1614  0825               	movf	(_ComData^(0+128)+5),w
 14762  1615  3EAB               	addlw	(low ((_ComData| 0+11)))& (0+255)
 14763  1616  0086               	movwf	6
 14764  1617  0008               	return
 14765  1618                     __end_ofPL26:	
 14766                           
 14767                           	psect	text97
 14768  148D                     __ptext97:	
 14769 ;; *************** function _App_OnAirTempSig *****************
 14770 ;; Defined at:
 14771 ;;		line 63 in file "../drv_air_sens.c"
 14772 ;; Parameters:    Size  Location     Type
 14773 ;;		None
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;		None
 14776 ;; Return value:  Size  Location     Type
 14777 ;;                  1    wreg      void 
 14778 ;; Registers used:
 14779 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14780 ;; Tracked objects:
 14781 ;;		On entry : 1F/1
 14782 ;;		On exit  : 1E/0
 14783 ;;		Unchanged: 0/0
 14784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;Total ram usage:        0 bytes
 14790 ;; Hardware stack levels used:    1
 14791 ;; Hardware stack levels required when called:    1
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_Comm_RxProcess
 14796 ;; This function uses a non-reentrant model
 14797 ;;
 14798                           
 14799                           
 14800                           ;psect for function _App_OnAirTempSig
 14801  148D                     _App_OnAirTempSig:	
 14802                           
 14803                           ;incstack = 0
 14804                           ; Regs used in _App_OnAirTempSig: [wreg+fsr1l+fsr1h+status,2+status,0]
 14805  148D  318F  27EA  3194   	fcall	PL30	;call to abstracted procedure
 14806  1490  1D03               	skipz
 14807  1491  0008               	return
 14808  1492  0822               	movf	(_ComData^(0+128)+2),w
 14809  1493  3EA1               	addlw	(low ((_RxPacket| (0+256)+1)))& (0+255)
 14810  1494  0086               	movwf	6
 14811  1495  3001               	movlw	1	; select bank3/4
 14812  1496  0087               	movwf	7
 14813  1497  3F40               	moviw [0]fsr1
 14814  1498  0020               	movlb	0	; select bank0
 14815  1499  00AC               	movwf	_currtemp
 14816  149A  3F41               	moviw [1]fsr1
 14817  149B  00AD               	movwf	_currtemp+1
 14818  149C  30FF               	movlw	255
 14819  149D  00B6               	movwf	_ftimer
 14820  149E  0008               	return
 14821  149F                     __end_of_App_OnAirTempSig:	
 14822                           
 14823                           	psect	intentry
 14824  0384                     __pintentry:	
 14825 ;; *************** function _ISR *****************
 14826 ;; Defined at:
 14827 ;;		line 201 in file "../main.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;		None
 14830 ;; Auto vars:     Size  Location     Type
 14831 ;;		None
 14832 ;; Return value:  Size  Location     Type
 14833 ;;                  1    wreg      void 
 14834 ;; Registers used:
 14835 ;;		None
 14836 ;; Tracked objects:
 14837 ;;		On entry : 0/0
 14838 ;;		On exit  : 0/0
 14839 ;;		Unchanged: 0/0
 14840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14845 ;;Total ram usage:        0 bytes
 14846 ;; Hardware stack levels used:    1
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		Interrupt level 1
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854  0384                     _ISR:	
 14855                           
 14856                           ;incstack = 0
 14857  0384  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14858                           
 14859                           ; Regs used in _ISR: []
 14860  0385  3183               	pagesel	$
 14861  0386  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14862  0387  0009               	retfie
 14863  0388                     __end_of_ISR:	
 14864  007E                     btemp	set	126	;btemp
 14865  007E                     int$flags	set	126
 14866  007E                     wtemp0	set	126


Data Sizes:
    Strings     62
    Constant    985
    Data        0
    BSS         387
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     18      78
    BANK1            80      0      73
    BANK2            80      0      70
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0      58
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    NVM_ReadBlockData@pr	PTR unsigned char  size(2) Largest target is 28
		 -> RAM_CTRL(BANK5[28]), TEMP_HISTORY(BANK2[24]), RAM_TEMP_REGDATA(BANK1[4]), RAM_TEMPPROG2(BANK2[14]), 
		 -> RAM_TEMPPROG(BANK2[14]), RAM_PIRDATA(BANK2[9]), RAM_NWID(BANK1[5]), REG_PARAMS_RAM(BANK1[4]), 
		 -> RAM_PARAM(BANK1[5]), 

    NVM_WriteBlockData@pr	PTR unsigned char  size(2) Largest target is 28
		 -> RAM_CTRL(BANK5[28]), TEMP_HISTORY(BANK2[24]), RAM_TEMP_REGDATA(BANK1[4]), RAM_TEMPPROG2(BANK2[14]), 
		 -> RAM_TEMPPROG(BANK2[14]), RAM_PIRDATA(BANK2[9]), RAM_NWID(BANK1[5]), REG_PARAMS_RAM(BANK1[4]), 
		 -> RAM_PARAM(BANK1[5]), 

    pRom	PTR Q_0100000000  unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), ROM_TEMP_REGDATA(CODE[4]), ROM_TEMPPROG(CODE[14]), ROM_NWID(CODE[5]), 
		 -> ROM_PIRDATA(CODE[9]), ROM_PARAM(CODE[5]), ROM_CRTRL(CODE[28]), REG_PARAMS_ROM(CODE[4]), 

    pRam	PTR unsigned char  size(2) Largest target is 30
		 -> NULL(NULL[0]), WorkBuff(BANK5[30]), RAM_CTRL(BANK5[28]), TEMP_HISTORY(BANK2[24]), 
		 -> RAM_TEMP_REGDATA(BANK1[4]), RAM_TEMPPROG2(BANK2[14]), RAM_TEMPPROG(BANK2[14]), RAM_PIRDATA(BANK2[9]), 
		 -> RAM_NWID(BANK1[5]), REG_PARAMS_RAM(BANK1[4]), RAM_PARAM(BANK1[5]), 

    NVM_BlockROM	const PTR Q_0100000000  unsigned char [9] size(2) Largest target is 8192
		 -> ROM(CODE[8192]), ROM_TEMP_REGDATA(CODE[4]), ROM_TEMPPROG(CODE[14]), ROM_NWID(CODE[5]), 
		 -> ROM_PIRDATA(CODE[9]), ROM_PARAM(CODE[5]), ROM_CRTRL(CODE[28]), REG_PARAMS_ROM(CODE[4]), 

    NVM_BlockRAM	const PTR __ram unsigned char [9] size(2) Largest target is 28
		 -> RAM_CTRL(BANK5[28]), TEMP_HISTORY(BANK2[24]), RAM_TEMP_REGDATA(BANK1[4]), RAM_TEMPPROG2(BANK2[14]), 
		 -> RAM_TEMPPROG(BANK2[14]), RAM_PIRDATA(BANK2[9]), RAM_NWID(BANK1[5]), REG_PARAMS_RAM(BANK1[4]), 
		 -> RAM_PARAM(BANK1[5]), 

    LCD_String@characters	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _REG_TaskSlow->_REG_FZLogic
    _REG_TaskSlow->_WIN_IsOpen
    _PRS_Task->_ReloadTime
    _DetermineMode->_DetermineProg
    _DetermineProg->_RTC_TimeToNumber
    _RTC_TimeToNumber->___lbdiv
    _NVM_Init->_ReadBlock
    _MNU_TaskButton->_PRG_SetNewTemp
    _PRG_SetNewTemp->_NVM_WriteBlockData
    _DrawTimeDate->_LCD_String
    _LCD_BCDNumber->_LCD_Char
    _DrawSetTempText->_LCD_String
    _LCD_String->_LCD_Char
    _DrawRegPower->_LCD_Char
    _LCD_BitmapV->_SPI_HF_Put
    _DrawLargeTime->_LCD_LargeDigit
    _LCD_Large2Dots->_LCD_XY
    _DrawClrLastLines->_LCD_XY
    _LCD_ClearLine->_SPI_HF_Put
    _DrawLargeTemp->_LCD_Char
    _DrawLargeTemp->_LCD_LargeDigit
    _LCD_LargePlus->_SPI_HF_Put
    _LCD_LargeMinus->_SPI_HF_Put
    _LCD_LargeDot->_SPI_HF_Put
    _DrawLargeHum->_LCD_Char
    _DrawLargeHum->_LCD_LargeDigit
    ___lbdiv->_RTC_BCD2DEC
    _LCD_LargeDigit->___wmul
    _LCD_XY->_LCDWriteCMD
    _LCD_Char->___wmul
    _MNU_Init->_LCD_ClearLCD
    _LCD_ClearLCD->_SPI_HF_Put
    _LCD_Init->_LCDWriteCMD
    _LCDWriteCMD->_SPI_HF_Put
    _IO_TaskSlow->___lmul
    _MRF89XATask->_MRF89XASetRFMode
    _MRF89XACheckRSSI->_MRF89XARegisterRead
    _Comm_RxProcess->_UDS_RDBID
    _Comm_RxProcess->_UDS_WDBID
    _UDS_WDBID->_NVM_WriteBlockData
    _WriteNVMBlockSync->_NVM_Task
    _NVM_Task->_ReadBlock
    _ReadBlock->_PrepBlockData
    _UDS_RDBID->_NVM_ReadBlockData
    _UDS_GetSeed->_POS_RESP
    _UDS_CompareKey->_NEG_RESP
    _UDS_CompareKey->_POS_RESP
    _Calc_Key->_ROL
    _Comm_PrepareTransmit->_IO_StartTimer1
    _MRF89XASendFrame->_MRF89XASetRFMode
    _WriteFIFO->_SPI_HF_Put
    _Comm_InitMRF->_MRF89XAInit
    _MRF89XAInit->_MRF89XASetRFMode
    _MRF89XAStartReception->_MRF89XASetRFMode
    _MRF89XASetRFMode->_MRF89XARegisterSet
    _MRF89XARegisterSet->_SPI_HF_Put
    _MRF89XARegisterRead->_SPI_HF_Put
    _AirS_Task_Slow->_RTC_BCD2DEC
    _RTC_BCD2DEC->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Comm_RxProcess->_UDS_CompareKey

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   70688
                                             16 BANK0      2     2      0
                          _AirS_Init
                          _AirS_Task
                     _AirS_Task_Slow
                         _Clock_Init
                          _Comm_Init
                        _Comm_OnIdle
                          _Comm_Task
                      _Comm_TaskSlow
                           _I2C_Init
                            _IO_Init
                        _IO_TaskFast
                        _IO_TaskSlow
                           _LCD_Init
                           _MNU_Init
                           _MNU_Task
                     _MNU_TaskButton
                           _NVM_Init
                         _NVM_IsIdle
                           _NVM_Task
                           _PRG_Init
                       _PRG_TaskSlow
                           _PRS_Init
                           _PRS_Task
                         _PRS_Task1s
                         _Ports_Init
                           _REG_Init
                       _REG_TaskSlow
                           _RTC_Init
                       _RTC_TaskSlow
                        _SPI_HF_Init
                           _WIN_Init
                       _WIN_TaskSlow
 ---------------------------------------------------------------------------------
 (1) _WIN_TaskSlow                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WIN_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_HF_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_TaskSlow                                         0     0      0       0
                       _RequestReset
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _REG_TaskSlow                                         1     1      0      24
                                              1 COMMON     1     1      0
                        _REG_FZLogic
                         _WIN_IsOpen
 ---------------------------------------------------------------------------------
 (2) _REG_FZLogic                                          3     3      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _REG_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ports_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PRS_Task1s                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PRS_Task                                             0     0      0      22
                        _GetRIRLevel
                         _ReloadTime
 ---------------------------------------------------------------------------------
 (2) _ReloadTime                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetRIRLevel                                          0     0      0       0
                     _IO_GetPIRLevel
 ---------------------------------------------------------------------------------
 (3) _IO_GetPIRLevel                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PRS_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PRG_TaskSlow                                         0     0      0     950
                      _DetermineMode
                     _NVM_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _DetermineMode                                        0     0      0     919
                      _DetermineProg
                   _PRS_RoomPresence
 ---------------------------------------------------------------------------------
 (3) _DetermineProg                                        2     2      0     919
                                             10 COMMON     2     2      0
                  _NVM_ReadBlockData
                   _RTC_TimeToNumber
 ---------------------------------------------------------------------------------
 (4) _RTC_TimeToNumber                                     1     1      0     495
                                              9 COMMON     1     1      0
                        _RTC_BCD2DEC
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (1) _PRG_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NVM_Init                                             0     0      0      31
                      _PrepBlockData
                          _ReadBlock
 ---------------------------------------------------------------------------------
 (1) _MNU_TaskButton                                       0     0      0    2274
                   _DrawClrLastLines
                     _IO_GetSW1Press
                     _IO_GetSW2Press
                     _PRG_SetNewTemp
 ---------------------------------------------------------------------------------
 (2) _PRG_SetNewTemp                                       3     3      0     511
                                              9 COMMON     3     3      0
                 _NVM_WriteBlockData
 ---------------------------------------------------------------------------------
 (2) _IO_GetSW2Press                                       1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_GetSW1Press                                       1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MNU_Task                                             0     0      0   31769
                   _DrawClrLastLines
                       _DrawLargeHum
                      _DrawLargeTemp
                      _DrawLargeTime
                       _DrawRegPower
                    _DrawSetTempText
                       _DrawTimeDate
 ---------------------------------------------------------------------------------
 (2) _DrawTimeDate                                         0     0      0    5150
                      _LCD_BCDNumber
                           _LCD_Char
                      _LCD_ClearLine
                         _LCD_String
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (3) _LCD_BCDNumber                                        2     1      1    1012
                                             10 COMMON     2     1      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _DrawSetTempText                                      0     0      0    3414
                      _LCD_ClearLine
                         _LCD_String
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           3     1      2    1699
                                             10 COMMON     3     1      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _DrawRegPower                                         0     0      0    2426
                        _LCD_BitmapV
                           _LCD_Char
                             _LCD_XY
                   _PRS_RoomPresence
                       _REG_GetLevel
                         _WIN_IsOpen
 ---------------------------------------------------------------------------------
 (2) _WIN_IsOpen                                           1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _PRS_RoomPresence                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_BitmapV                                          1     1      0      62
                                              1 COMMON     1     1      0
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (2) _DrawLargeTime                                        0     0      0    7671
                   _DrawClrLastLines
                     _LCD_Large2Dots
                     _LCD_LargeDigit
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (3) _LCD_Large2Dots                                       1     1      0    1901
                                              4 COMMON     1     1      0
                             _LCD_XY
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (2) _DrawClrLastLines                                     0     0      0    1715
                      _LCD_ClearLine
                             _LCD_XY
 ---------------------------------------------------------------------------------
 (3) _LCD_ClearLine                                        1     1      0      99
                                              1 COMMON     1     1      0
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (2) _DrawLargeTemp                                        2     0      2    6328
                                             10 COMMON     2     0      2
                           _LCD_Char
                     _LCD_LargeDigit
                       _LCD_LargeDot
                     _LCD_LargeMinus
                      _LCD_LargePlus
                             _LCD_XY
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     508
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     592
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _LCD_LargePlus                                        0     0      0      31
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (3) _LCD_LargeMinus                                       0     0      0      31
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (3) _LCD_LargeDot                                         0     0      0      31
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (2) _DrawLargeHum                                         0     0      0    5065
                           _LCD_Char
                     _LCD_LargeDigit
                             _LCD_XY
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              5     4      1      30
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     256
                                              5 COMMON     4     3      1
                        _RTC_BCD2DEC (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_LargeDigit                                       4     4      0    2439
                                              6 COMMON     4     4      0
                             _LCD_XY
                         _SPI_HF_Put
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _LCD_XY                                               2     1      1    1616
                                              2 COMMON     2     1      1
                        _LCDWriteCMD
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             4     4      0     724
                                              6 COMMON     4     4      0
                         _SPI_HF_Put
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     520
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _MNU_Init                                             0     0      0      65
                       _LCD_ClearLCD
 ---------------------------------------------------------------------------------
 (2) _LCD_ClearLCD                                         2     2      0      65
                                              1 COMMON     2     2      0
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      62
                        _LCDWriteCMD
 ---------------------------------------------------------------------------------
 (4) _LCDWriteCMD                                          1     1      0      62
                                              1 COMMON     1     1      0
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (1) _IO_TaskSlow                                          0     0      0     404
                        _IO_CalcTemp
                     _IO_StartTimer2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     358
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _IO_StartTimer2                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_CalcTemp                                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _IO_TaskFast                                          2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _IO_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comm_TaskSlow                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comm_Task                                            1     1      0      22
                                              1 COMMON     1     1      0
               _Comm_PrepareTransmit
 ---------------------------------------------------------------------------------
 (1) _Comm_OnIdle                                          0     0      0   20320
                       _Comm_InitMRF
                     _Comm_RxProcess
                     _IO_StartTimer1
                   _MRF89XACheckRSSI
              _MRF89XAStartReception
                        _MRF89XATask
                      _TransmitFrame
 ---------------------------------------------------------------------------------
 (2) _MRF89XATask                                          2     2      0    2722
                                              5 COMMON     2     2      0
                   _MRF89XACheckRSSI
                _MRF89XARegisterRead
                 _MRF89XARegisterSet
                   _MRF89XASetRFMode
                           _ReadFIFO
 ---------------------------------------------------------------------------------
 (3) _ReadFIFO                                             1     1      0      23
                                              0 COMMON     1     1      0
                         _SPI_HF_Get
 ---------------------------------------------------------------------------------
 (3) _MRF89XACheckRSSI                                     0     0      0     130
                _MRF89XARegisterRead
 ---------------------------------------------------------------------------------
 (2) _Comm_RxProcess                                       0     0      0    3626
                    _App_OnAirHumSig
                   _App_OnAirTempSig
                    _App_OnWinSensor
             _Comm_IsAlreadyReceived
               _Comm_PrepareTransmit
                           _NEG_RESP
                           _POS_RESP
                     _PRS_OnPIRFrame
                     _RTC_OnRTCFrame
                       _RequestReset
                     _UDS_CompareKey
                        _UDS_GetSeed
                          _UDS_RDBID
                          _UDS_WDBID
                          _Write_Eep
 ---------------------------------------------------------------------------------
 (3) _UDS_WDBID                                            3     3      0    2303
                                              9 COMMON     3     3      0
                 _MRF89XARegisterSet
                 _NVM_WriteBlockData
                           _POS_RESP
                  _WriteNVMBlockSync
 ---------------------------------------------------------------------------------
 (4) _WriteNVMBlockSync                                    1     1      0     514
                                              5 COMMON     1     1      0
                           _NVM_Task
                     _NVM_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _NVM_WriteBlock                                       1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _NVM_Task                                             1     1      0     421
                                              4 COMMON     1     1      0
                      _PrepBlockData
                          _ReadBlock
                           _Read_Eep
                          _Write_Eep
 ---------------------------------------------------------------------------------
 (2) _Write_Eep                                            3     2      1     291
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ReadBlock                                            1     1      0      31
                                              3 COMMON     1     1      0
                      _PrepBlockData
                           _Read_Eep
 ---------------------------------------------------------------------------------
 (2) _Read_Eep                                             1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _PrepBlockData                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _NVM_WriteBlockData                                   9     7      2     480
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) _UDS_RDBID                                            5     5      0     817
                                              7 COMMON     5     5      0
                       _IO_GetPIRPin
                 _NVM_GetBlockLenght
                         _NVM_IsIdle
                  _NVM_ReadBlockData
                           _POS_RESP
                       _REG_GetLevel
 ---------------------------------------------------------------------------------
 (3) _REG_GetLevel                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NVM_ReadBlockData                                    7     6      1     291
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (1) _NVM_IsIdle                                           1     1      0      99
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _NVM_GetBlockLenght                                   1     1      0      62
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _IO_GetPIRPin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UDS_GetSeed                                          4     4      0      31
                                              1 COMMON     4     4      0
                           _POS_RESP
 ---------------------------------------------------------------------------------
 (3) _UDS_CompareKey                                      20    20      0     109
                                              1 COMMON     4     4      0
                                              0 BANK0     16    16      0
                           _Calc_Key
                           _NEG_RESP
                           _POS_RESP
 ---------------------------------------------------------------------------------
 (4) _POS_RESP                                             1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _NEG_RESP                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Calc_Key                                             0     0      0      22
                                _ROL
 ---------------------------------------------------------------------------------
 (5) _ROL                                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RequestReset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTC_OnRTCFrame                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _PRS_OnPIRFrame                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Comm_PrepareTransmit                                 0     0      0      22
                     _IO_StartTimer1
 ---------------------------------------------------------------------------------
 (3) _Comm_IsAlreadyReceived                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _App_OnWinSensor                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _App_OnAirTempSig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _App_OnAirHumSig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comm_Init                                            0     0      0   13820
                       _Comm_InitMRF
              _MRF89XAStartReception
                      _TransmitFrame
 ---------------------------------------------------------------------------------
 (2) _TransmitFrame                                        0     0      0    7506
                       _Comm_InitMRF
                      _IO_DisablePIR
                     _IO_StartTimer1
                   _MRF89XASendFrame
                   _MRF89XASetRFMode
 ---------------------------------------------------------------------------------
 (3) _MRF89XASendFrame                                     1     1      0    2436
                                              5 COMMON     1     1      0
                 _MRF89XARegisterSet
                   _MRF89XASetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      62
                                              1 COMMON     1     1      0
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (3) _IO_StartTimer1                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _IO_DisablePIR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Comm_InitMRF                                         0     0      0    3844
                        _MRF89XAInit
                 _MRF89XARegisterSet
 ---------------------------------------------------------------------------------
 (4) _MRF89XAInit                                          3     3      0    2742
                                              5 COMMON     3     3      0
                _MRF89XARegisterRead
                 _MRF89XARegisterSet
                   _MRF89XASetRFMode
 ---------------------------------------------------------------------------------
 (2) _MRF89XAStartReception                                1     1      0    2470
                                              5 COMMON     1     1      0
                _MRF89XARegisterRead
                 _MRF89XARegisterSet
                   _MRF89XASetRFMode
 ---------------------------------------------------------------------------------
 (3) _MRF89XASetRFMode                                     2     2      0    1204
                                              3 COMMON     2     2      0
                 _MRF89XARegisterSet
 ---------------------------------------------------------------------------------
 (4) _MRF89XARegisterSet                                   2     1      1    1102
                                              1 COMMON     2     1      1
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (5) _MRF89XARegisterRead                                  2     2      0     130
                                              1 COMMON     2     2      0
                         _SPI_HF_Get
                         _SPI_HF_Put
 ---------------------------------------------------------------------------------
 (5) _SPI_HF_Put                                           2     2      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SPI_HF_Get                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AirS_Task_Slow                                       2     2      0     214
                                              5 COMMON     2     2      0
                     _IO_GetTempMeas
                        _RTC_BCD2DEC
 ---------------------------------------------------------------------------------
 (5) _RTC_BCD2DEC                                          2     2      0     214
                                              3 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     145
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _IO_GetTempMeas                                       2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AirS_Task                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AirS_Init                                            1     1      0      68
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AirS_Init
   _AirS_Task
   _AirS_Task_Slow
     _IO_GetTempMeas
     _RTC_BCD2DEC
       ___bmul
   _Clock_Init
   _Comm_Init
     _Comm_InitMRF
       _MRF89XAInit
         _MRF89XARegisterRead
           _SPI_HF_Get
           _SPI_HF_Put
         _MRF89XARegisterSet
           _SPI_HF_Put
         _MRF89XASetRFMode
           _MRF89XARegisterSet
             _SPI_HF_Put
       _MRF89XARegisterSet
         _SPI_HF_Put
     _MRF89XAStartReception
       _MRF89XARegisterRead
         _SPI_HF_Get
         _SPI_HF_Put
       _MRF89XARegisterSet
         _SPI_HF_Put
       _MRF89XASetRFMode
         _MRF89XARegisterSet
           _SPI_HF_Put
     _TransmitFrame
       _Comm_InitMRF
         _MRF89XAInit
           _MRF89XARegisterRead
             _SPI_HF_Get
             _SPI_HF_Put
           _MRF89XARegisterSet
             _SPI_HF_Put
           _MRF89XASetRFMode
             _MRF89XARegisterSet
               _SPI_HF_Put
         _MRF89XARegisterSet
           _SPI_HF_Put
       _IO_DisablePIR
       _IO_StartTimer1
       _MRF89XASendFrame
         _MRF89XARegisterSet
           _SPI_HF_Put
         _MRF89XASetRFMode
           _MRF89XARegisterSet
             _SPI_HF_Put
         _WriteFIFO
           _SPI_HF_Put
       _MRF89XASetRFMode
         _MRF89XARegisterSet
           _SPI_HF_Put
   _Comm_OnIdle
     _Comm_InitMRF
       _MRF89XAInit
         _MRF89XARegisterRead
           _SPI_HF_Get
           _SPI_HF_Put
         _MRF89XARegisterSet
           _SPI_HF_Put
         _MRF89XASetRFMode
           _MRF89XARegisterSet
             _SPI_HF_Put
       _MRF89XARegisterSet
         _SPI_HF_Put
     _Comm_RxProcess
       _App_OnAirHumSig
       _App_OnAirTempSig
       _App_OnWinSensor
       _Comm_IsAlreadyReceived
       _Comm_PrepareTransmit
         _IO_StartTimer1
       _NEG_RESP
       _POS_RESP
       _PRS_OnPIRFrame
       _RTC_OnRTCFrame
       _RequestReset
       _UDS_CompareKey
         _Calc_Key
           _ROL
         _NEG_RESP
         _POS_RESP
       _UDS_GetSeed
         _POS_RESP
       _UDS_RDBID
         _IO_GetPIRPin
         _NVM_GetBlockLenght
         _NVM_IsIdle
         _NVM_ReadBlockData
         _POS_RESP
         _REG_GetLevel
       _UDS_WDBID
         _MRF89XARegisterSet
           _SPI_HF_Put
         _NVM_WriteBlockData
         _POS_RESP
         _WriteNVMBlockSync
           _NVM_Task
             _PrepBlockData
             _ReadBlock
               _PrepBlockData
               _Read_Eep
             _Read_Eep
             _Write_Eep
           _NVM_WriteBlock
       _Write_Eep
     _IO_StartTimer1
     _MRF89XACheckRSSI
       _MRF89XARegisterRead
         _SPI_HF_Get
         _SPI_HF_Put
     _MRF89XAStartReception
       _MRF89XARegisterRead
         _SPI_HF_Get
         _SPI_HF_Put
       _MRF89XARegisterSet
         _SPI_HF_Put
       _MRF89XASetRFMode
         _MRF89XARegisterSet
           _SPI_HF_Put
     _MRF89XATask
       _MRF89XACheckRSSI
         _MRF89XARegisterRead
           _SPI_HF_Get
           _SPI_HF_Put
       _MRF89XARegisterRead
         _SPI_HF_Get
         _SPI_HF_Put
       _MRF89XARegisterSet
         _SPI_HF_Put
       _MRF89XASetRFMode
         _MRF89XARegisterSet
           _SPI_HF_Put
       _ReadFIFO
         _SPI_HF_Get
     _TransmitFrame
       _Comm_InitMRF
         _MRF89XAInit
           _MRF89XARegisterRead
             _SPI_HF_Get
             _SPI_HF_Put
           _MRF89XARegisterSet
             _SPI_HF_Put
           _MRF89XASetRFMode
             _MRF89XARegisterSet
               _SPI_HF_Put
         _MRF89XARegisterSet
           _SPI_HF_Put
       _IO_DisablePIR
       _IO_StartTimer1
       _MRF89XASendFrame
         _MRF89XARegisterSet
           _SPI_HF_Put
         _MRF89XASetRFMode
           _MRF89XARegisterSet
             _SPI_HF_Put
         _WriteFIFO
           _SPI_HF_Put
       _MRF89XASetRFMode
         _MRF89XARegisterSet
           _SPI_HF_Put
   _Comm_Task
     _Comm_PrepareTransmit
       _IO_StartTimer1
   _Comm_TaskSlow
   _I2C_Init
   _IO_Init
   _IO_TaskFast
   _IO_TaskSlow
     _IO_CalcTemp
     _IO_StartTimer2
     ___lmul
   _LCD_Init
     _LCDWriteCMD
       _SPI_HF_Put
   _MNU_Init
     _LCD_ClearLCD
       _SPI_HF_Put
   _MNU_Task
     _DrawClrLastLines
       _LCD_ClearLine
         _SPI_HF_Put
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
     _DrawLargeHum
       _LCD_Char
         _SPI_HF_Put
         ___wmul
       _LCD_LargeDigit
         _LCD_XY
           _LCDWriteCMD
             _SPI_HF_Put
         _SPI_HF_Put
         ___wmul
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
       ___lbdiv
         _RTC_BCD2DEC (ARG)
           ___bmul
       ___lbmod
     _DrawLargeTemp
       _LCD_Char
         _SPI_HF_Put
         ___wmul
       _LCD_LargeDigit
         _LCD_XY
           _LCDWriteCMD
             _SPI_HF_Put
         _SPI_HF_Put
         ___wmul
       _LCD_LargeDot
         _SPI_HF_Put
       _LCD_LargeMinus
         _SPI_HF_Put
       _LCD_LargePlus
         _SPI_HF_Put
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
       ___awdiv
       ___awmod
     _DrawLargeTime
       _DrawClrLastLines
         _LCD_ClearLine
           _SPI_HF_Put
         _LCD_XY
           _LCDWriteCMD
             _SPI_HF_Put
       _LCD_Large2Dots
         _LCD_XY
           _LCDWriteCMD
             _SPI_HF_Put
         _SPI_HF_Put
       _LCD_LargeDigit
         _LCD_XY
           _LCDWriteCMD
             _SPI_HF_Put
         _SPI_HF_Put
         ___wmul
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
     _DrawRegPower
       _LCD_BitmapV
         _SPI_HF_Put
       _LCD_Char
         _SPI_HF_Put
         ___wmul
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
       _PRS_RoomPresence
       _REG_GetLevel
       _WIN_IsOpen
     _DrawSetTempText
       _LCD_ClearLine
         _SPI_HF_Put
       _LCD_String
         _LCD_Char
           _SPI_HF_Put
           ___wmul
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
     _DrawTimeDate
       _LCD_BCDNumber
         _LCD_Char
           _SPI_HF_Put
           ___wmul
       _LCD_Char
         _SPI_HF_Put
         ___wmul
       _LCD_ClearLine
         _SPI_HF_Put
       _LCD_String
         _LCD_Char
           _SPI_HF_Put
           ___wmul
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
   _MNU_TaskButton
     _DrawClrLastLines
       _LCD_ClearLine
         _SPI_HF_Put
       _LCD_XY
         _LCDWriteCMD
           _SPI_HF_Put
     _IO_GetSW1Press
     _IO_GetSW2Press
     _PRG_SetNewTemp
       _NVM_WriteBlockData
   _NVM_Init
     _PrepBlockData
     _ReadBlock
       _PrepBlockData
       _Read_Eep
   _NVM_IsIdle
   _NVM_Task
     _PrepBlockData
     _ReadBlock
       _PrepBlockData
       _Read_Eep
     _Read_Eep
     _Write_Eep
   _PRG_Init
   _PRG_TaskSlow
     _DetermineMode
       _DetermineProg
         _NVM_ReadBlockData
         _RTC_TimeToNumber
           _RTC_BCD2DEC
             ___bmul
           ___lbdiv
             _RTC_BCD2DEC (ARG)
               ___bmul
       _PRS_RoomPresence
     _NVM_WriteBlock
   _PRS_Init
   _PRS_Task
     _GetRIRLevel
       _IO_GetPIRLevel
     _ReloadTime
   _PRS_Task1s
   _Ports_Init
   _REG_Init
   _REG_TaskSlow
     _REG_FZLogic
     _WIN_IsOpen
   _RTC_Init
   _RTC_TaskSlow
     _RequestReset
   _SPI_HF_Init
   _WIN_Init
   _WIN_TaskSlow

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      46       9       87.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      3A      15       72.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 10 22:07:02 2019

                     _RTC_Status 0051            ??_MRF89XARegisterRead 0071                  ?_RTC_OnRTCFrame 0070  
                 _PRS_OnPIRFrame 1584                Write_Eep@SAVEICON 0072                       _PRS_Task1s 147D  
                              pc 0002                     ?_LCD_BitmapV 0070                    ?_LCD_ClearLCD 0070  
                 ___bmul@product 0071                               PL2 07D8                               PL4 15C6  
                             PL6 0B71                               PL8 16D4                     ___awdiv@sign 0075  
                     _WIN_IsOpen 056E                  _App_OnAirHumSig 0FCA                               _xp 005B  
                             _yp 005A              ___wmul@multiplicand 0072                      ?_LCD_String 007A  
                ??_LCD_BCDNumber 007B                              PL10 16DA                              PL20 0B7D  
                            PL12 07E2                              PL30 0FEA                              PL22 0FD9  
                            PL14 07EA                              PL32 0FEF                              PL24 0FDF  
                            PL16 07F2                              PL26 1612                              PL18 0FD3  
                            PL28 0FE5            __size_of_WIN_TaskSlow 000E           __end_of_LCD_Large2Dots 06DA  
                 ?_LCD_ClearLine 0070                              l400 085D                              l154 0D29  
                            l192 1519                              l370 1624                              l373 162F  
                            l525 0945                              l526 0954                              l367 1626  
                            l473 0E9E                              l394 0843                              l467 06E2  
                            l397 0858                              l709 0547                              l741 03A8  
                            l833 17F2                              l691 04A1                              l747 03B6  
                            l870 0A4B                              l695 0606                              l866 0A3F  
                            l879 0AB0                              _PR2 001B                              _PR4 0416  
                            _PR6 041D                              _ISR 0384                              _CSm 0040  
                            _ROL 17ED                    ?_LCD_LargeDot 0070         __end_of_MRF89XACheckRSSI 0EB2  
     __size_of_NVM_ReadBlockData 0019                              _uSc 0024                     ___awmod@sign 0075  
                            wreg 0009           __end_of_LCD_LargeDigit 069D                 _App_OnAirTempSig 148D  
         __end_of_LCD_LargeMinus 06AF                             S7614 133E                             S7616 1348  
                   ?_LCDWriteCMD 0070                             ?_ISR 0070                             ?_ROL 0070  
                   ?_MRF89XAInit 0070                             l1103 0DC1                             l1225 0ECC  
                           l1229 0ECE                             l1360 1704                             l1356 16F7  
                           l1277 0FFA                             l1295 0D6C                             l1607 0888  
                           l5002 073B                             l5020 0757                             l5012 0748  
                           l4216 0B29                             l5024 075B                             l5040 0772  
                           l5120 093C                             l4314 17FB                     ?_MRF89XATask 0070  
                           l4316 17EE                             l5028 0763                             l5052 0784  
                           l5060 0794                             l5044 0779                             l4600 14F8  
                           l4360 071B                             l5064 079C                             l5056 0790  
                           l1858 07CB                             l7002 04A0                             l6026 08C6  
                           l6034 08D4                             l4356 0715                             l7012 0604  
                           l7100 0541                             l6044 08F5                             l5510 0C75  
                           l4390 07D6                             l6070 0921                             l5504 0C67  
                           l7200 0F29                             l4376 07C6                             l7104 0553  
                           l7120 04ED                             l6330 1688                             l6410 0CE1  
                           l6402 0CCE                             l4386 07D3                             l7124 0D82  
                           l6332 168C                             l6340 169F                             l7220 0F4C  
                           l7204 0F31                             l7212 0F3F                             l7060 05C8  
                           l7108 055A                             l6068 0920                             l6422 0CF1  
                           l6406 0CD0                             l5640 0C15                             l7320 0D4E  
                           l6360 16CC                             l6432 0CFF                             l7240 0F74  
                           l7232 0F66                             l7216 0F45                             l7208 0F39  
                           l7160 0DBF                             l6504 04CF                             l6354 16BA  
                           l6346 16AE                             l6426 0CFC                             l7226 0F58  
                           l5730 1627                             l4738 0578                             l7082 0508  
                           l7410 039B                             l6604 0DD8                             l7180 0ED2  
                           l4932 15ED                             l4940 15D5                             l6380 0CA7  
                           l7252 0F89                             l6524 06FE                             l7068 05F4  
                           l7420 03B3                             l7412 039E                             l5468 174B  
                           l7318 0D42                             l4942 15FF                             l6366 0C9A  
                           l7246 0F7F                             l7262 0F98                             l7158 0DB1  
                           l5494 0892                             l7094 052E                             l7078 0500  
                           l7176 0EC9                             l6800 17C4                             l6368 0C9B  
                           l7256 0F90                             l7264 0FB3                             l7360 0D7B  
                           l7344 0D6E                             l7352 0D72                             l5912 1578  
                           l6712 06CF                             l7088 051B                             l5840 16EC  
                           l7512 0BE1                             l5930 0C29                             l6618 0DF7  
                           l6626 0E00                             l4938 15FD                             l6394 0CB3  
                           l7346 0D6F                             l5914 157B                             l5906 1566  
                           l5738 1636                             l7434 03C9                             l7426 03BD  
                           l7418 03AC                             l7370 09BC                             l4956 159C  
                           l6476 0C88                             l6396 0CC7                             l6812 0A15  
                           l7196 0F21                             l7188 0F0A                             l5916 1568  
                           l5772 165A                             l5764 1653                             l7452 03E4  
                           l7428 03C0                             l7372 09CA                             l7276 167A  
                           l5860 170B                             l5852 16FD                             l5836 16E4  
                           l5844 16F3                             l5924 148A                             l5934 0C32  
                           l4974 15C3                             l4966 15B2                             l6830 0A33  
                           l6814 0A17                             l5758 164D                             l6670 0685  
                           l6654 066C                             l7454 03E7                             l7286 1683  
                           l5838 16E8                             l7550 0BC1                             l4968 15B5  
                           l6584 0B5F                             l6824 0A2A                             l5792 1671  
                           l6920 14DD                             l6912 14CD                             l6496 04CC  
                           l7448 03D5                             l7472 0400                             l7392 09D0  
                           l6760 0ACA                             l5872 1725                             l5864 1715  
                           l7552 0BC5                             l4898 157D                             l6850 0A5F  
                           l6930 1514                             l6682 0697                             l6666 067E  
                           l6658 0673                             l6738 04C1                             l7474 0408  
                           l7378 09C0                             l5866 1718                             l5970 14E6  
                           l7554 0BC9                             l7538 0BB1                             l6860 0A69  
                           l6932 150B                             l4996 0732                             l7468 03F2  
                           l6764 0AD1                             l5868 171A                             l7564 0BDE  
                           l7556 0BCD                             l7548 0BBD                             l6862 0A83  
                           l6926 1505                             l6678 0690                             l6782 040F  
                           l6758 04A2                             l6942 09A4                             l5878 1729  
                           l6864 0A85                             l5992 0816                             l6696 06B7  
                           l6960 09F9                             l7568 0C01                             l6946 09AB  
                           l6892 0E42                             l6980 0473                             l6956 09ED  
                           l6964 09FD                             l6948 09AE                             l6894 0E51  
                           l6990 048C                             l6982 0478                             l6974 0464  
                           l6958 09F5                             l6966 0A05                             l6992 0491  
                           l6984 047D                             l6976 0469                             l6898 0E53  
                           l6994 0496                             l6986 0482                             l6978 046E  
                           l6996 049B                             l6988 0487                             STR_1 18A5  
                           STR_2 18B9                             STR_3 18A9                             STR_4 18C5  
                           STR_5 18C9                             STR_6 18D5                             STR_7 18BD  
                           STR_8 18B5                             STR_9 18B1                             _LATA 010C  
                           _LATB 010D                             u3225 078A                             u3155 0750  
                           u4330 1560                             u3295 094E                             u2930 14AD  
                           u5235 17BA                             u5420 05DE                             u5325 14D0  
                           u4605 08DE                             u5430 05DF                             u4625 08F1  
                           u5295 0A6F                             u4595 08CF                             _WPUB 020D  
                           _Line 0047                             _Menu 0048                  __end_of_IO_Init 1544  
                           _ePrs 0038                   ?_LCD_LargePlus 0070                             _addr 003D  
                           _pRam 0026           __end_of_NVM_WriteBlock 0B71                             _pRom 00C7  
                           _cntr 0034                             _main 0B83                             _seed 0020  
               __end_of_I2C_Init 1000                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E            __end_of_PrepBlockData 0F00  
            __end_of_Comm_OnIdle 0D82                             start 0388                  _DrawSetTempText 04DA  
         __end_of_PRS_OnPIRFrame 15A4                ___bmul@multiplier 0072                   _IO_GetPIRLevel 1760  
                 _InitConfigRegs 1800                     _WIN_TaskSlow 146F                   ??_LCD_ClearLCD 0071  
                 _IO_GetSW1Press 09D6                   _IO_GetSW2Press 09DD                            ??_ISR 0070  
               ??_PRG_SetNewTemp 0079                            ??_ROL 0070                       _Clock_Init 0C62  
               __end_of_LCD_Char 0713                 __end_of_LCD_Init 07B6                 __end_of_NEG_RESP 0FCA  
                          ?_main 0070         __end_of_MRF89XASetRFMode 0E98                  __end_of___awdiv 0768  
                __end_of___lbdiv 07D8                            _EEADR 0191                            STR_10 18C1  
                          STR_11 18CD                            STR_12 18D1                            STR_13 18AD  
                          STR_14 186E                  __end_of___awmod 07A1                  __end_of___lbmod 14E1  
                 ??_LCD_LargeDot 0071                            _ASCII 1000                  ___awdiv@divisor 0070  
                ?_LCD_Large2Dots 0070                            _T2CON 001C                            _T4CON 0417  
                          _LARGE 11D6                            _T6CON 041E            __end_of_IO_DisablePIR 0ED8  
                ___awdiv@counter 0074           WriteNVMBlockSync@block 0075                            _PORTB 000D  
                          _TRISA 008C                            _TRISB 008D         __end_of_MRF89XASendFrame 0E53  
               __end_of_REG_Init 1461                            _Delta 002A                ?_PRS_RoomPresence 0070  
            ___lmul@multiplicand 0074                  ?_LCD_LargeDigit 0070                  ?_LCD_LargeMinus 0070  
                   main@task1sec 006D                 __end_of_MNU_Init 1505                 __end_of_MNU_Task 040F  
             ??_PRS_RoomPresence 0070               __size_of_UDS_RDBID 0071                 __end_of_PRG_Init 0B7D  
               __end_of_POS_RESP 0ABD                            _sTemp 00CF                      _GetRIRLevel 1735  
             __size_of_UDS_WDBID 0037                  _App_OnWinSensor 15A4                 __end_of_ROM_NWID 189D  
               __end_of_NVM_Init 1688                    _MRF89XA_Error 003A                 __end_of_NVM_Task 0D0C  
               __end_of_RTC_Init 1454                            _nvpos 004C                     main@taskslot 006C  
                ??_TransmitFrame 0078                 __end_of_PRS_Init 0808                 __end_of_PRS_Task 1735  
               __end_of_WIN_Init 07FF                 __end_of_Calc_Key 17ED                      ?_SPI_HF_Get 0070  
           __end_of_Comm_InitMRF 0E76                      ?_SPI_HF_Put 0070                            status 0003  
                ?_NVM_WriteBlock 0070                            wtemp0 007E              __size_of_LCD_String 0012  
                    ?_NVM_IsIdle 0070                  ___lbdiv@divisor 0075                   _IO_GetTempMeas 0C5C  
                ___lbdiv@counter 0077           __end_of_IO_GetPIRLevel 1766           __end_of_InitConfigRegs 1820  
                   ?_REG_FZLogic 0070             __end_of_DrawLargeHum 05B6          __end_of_App_OnAirHumSig 0FD3  
                ?_PRS_OnPIRFrame 0070           __end_of_IO_GetSW1Press 09DD           __end_of_IO_GetSW2Press 09E4  
             __size_of_AirS_Init 0016                 ??_UDS_CompareKey 005C                  __initialization 038A  
             __size_of_AirS_Task 0001                     __end_of_main 0C0C                      ?_PRS_Task1s 0070  
           __end_of_DrawRegPower 055C                 __end_of_ReadFIFO 0DD7     __end_of_Comm_PrepareTransmit 1584  
                   ?_IO_CalcTemp 0070                 __end_of_Read_Eep 0D17                    ReadFIFO@value 0070  
                    ?_WIN_IsOpen 0070              LCD_BCDNumber@bLzero 007A                ?_DrawClrLastLines 0070  
                ??_LCD_ClearLine 0071             LCD_String@characters 007A             __end_of_DrawTimeDate 04A2  
                         ??_main 007D               ??_DrawClrLastLines 0074                 IO_CalcTemp@offs8 0070  
     __end_of_MRF89XARegisterSet 0E84                RTC_TimeToNumber@r 0079                    LCD_Char@index 0078  
             __size_of_Comm_Init 0028               __size_of_Comm_Task 0039                 _RAM_TEMP_REGDATA 00DF  
                   _u8menuswitch 0044                        ??_IO_Init 0070            __end_of_DetermineMode 09B2  
          __end_of_DetermineProg 0AF1                           ROL@num 0070                           _ADCON0 009D  
                         _ADCON1 009E         MRF89XARegisterRead@value 0071                           _ADRESH 009C  
                         _ADRESL 009B                           _EEDATL 0193                           _EECON2 0196  
               ___awdiv@dividend 0072                           _ANSELA 018C                           _ANSELB 018D  
                    _Comm_OnIdle 0D57          __end_of_DrawSetTempText 04EE                   IO_TaskFast@bUV 0071  
                ??_LCD_LargePlus 0071                       _ReloadTime 173E                           _LCD_XY 064B  
                         _INTCON 000B                     ?_IO_TaskFast 0070           __end_of_IO_GetTempMeas 0C62  
                   ?_IO_TaskSlow 0070                           _TMR2IE 0489                           _TMR2IF 0089  
                         _TMR4IE 0499                           _TMR4IF 0099               __size_of_ReadBlock 004C  
                         _TMR6IE 049B                           _TMR6IF 009B                           _SSP1IE 048B  
                         _SSP1IF 008B                           _AdcRaw 0032                           _SW1buf 0057  
                         _SW2buf 0056         __end_of_ROM_TEMP_REGDATA 18A1                  ?_IO_GetPIRLevel 0070  
                         _SWdeb1 0055                           _SWdeb2 0054                           _SWcnt1 0053  
                         _SWcnt2 0052         __end_of_RTC_TimeToNumber 0B1B                  ?_IO_GetSW1Press 0070  
                ?_IO_GetSW2Press 0070                           ___bmul 0B27                 UDS_CompareKey@s1 0071  
                         ___lmul 0884                     ?_RTC_BCD2DEC 0070                           ___wmul 0713  
                         _u8temp 0059                           _c_mode 004B                __end_of_UDS_RDBID 0AB1  
                      ??___awdiv 0074                        ??___lbdiv 0076                        ??___awmod 0074  
                      ??___lbmod 0071                           _sFlags 004F                __end_of_UDS_WDBID 0A40  
                DetermineProg@ix 007B                __end_of_ROM_CRTRL 183C                      ?_Clock_Init 0070  
              __end_of_ROM_PARAM 1898                           _dotctr 0043                           _newPWM 0050  
                         _ftimer 0036                           _pflags 0039                           _oldhrs 0035  
               ___awdiv@quotient 0076                  ___awmod@divisor 0070                     Read_Eep@badd 0070  
           __size_of_LCD_BitmapV 0008                  ___awmod@counter 0074              __size_of_SPI_HF_Get 000C  
        __end_of_App_OnWinSensor 15C6              __size_of_SPI_HF_Put 000C              __size_of_NVM_IsIdle 0012  
                      ?_I2C_Init 0070                       _Ports_Init 14B2                     ?_UDS_GetSeed 0070  
              __end_of_AirS_Init 0C22                __end_of_AirS_Task 0C23                     ?_SPI_HF_Init 0070  
                   MRF89XAInit@i 0077             __end_of_LCD_ClearLCD 151C                 ___lbdiv@dividend 0076  
                   MRF89XATask@i 0076                     MRF89XATask@k 0075              __size_of_PRS_Task1s 0010  
        __size_of_IO_StartTimer1 000A          __size_of_IO_StartTimer2 000A             __size_of_LCDWriteCMD 000A  
                ___lbmod@divisor 0070                  ?_IO_GetTempMeas 0070              __size_of_WIN_IsOpen 000C  
 __size_of_MRF89XAStartReception 0011                        ?_LCD_Char 0070               __size_of_WriteFIFO 0009  
        __end_of__initialization 038A             __size_of_MRF89XAInit 003D                  ___lbmod@counter 0073  
  __end_of_MRF89XAStartReception 0D93                        ?_LCD_Init 0070             __size_of_MRF89XATask 003C  
          __end_of_Comm_TaskSlow 0FFC                 ??_RTC_OnRTCFrame 0070               __size_of_Write_Eep 0018  
                      ?_NEG_RESP 0070             __end_of_LCD_LargeDot 039A                    __end_of_ASCII 11D6  
                  __end_of_LARGE 133E                        LCD_Char@j 0077            __end_of_DrawLargeTemp 064B  
          __end_of_DrawLargeTime 05F5                   Write_Eep@bdata 0070          __size_of_Comm_RxProcess 00BD  
            ___bmul@multiplicand 0070                __end_of_Comm_Init 0D57                 ?_App_OnAirHumSig 0070  
              __end_of_Comm_Task 157D         __end_of_App_OnAirTempSig 149F                        ?_REG_Init 0070  
                 __pcstackCOMMON 0070                       _u8editmode 0045                        ?_MNU_Init 0070  
                      ?_MNU_Task 0070                    ?_REG_GetLevel 0070                        ?_PRG_Init 0070  
    __size_of_NVM_WriteBlockData 0029                        ?_POS_RESP 0070                        ?_NVM_Init 0070  
                   ??_LCD_String 007C                       __end_ofPL2 07E2                       __end_ofPL4 15CD  
                     __end_ofPL6 0B79                       __end_ofPL8 16DA                        ?_NVM_Task 0070  
                      ?_RTC_Init 0070                 ___lbdiv@quotient 0078                   app_Menu@u8temp 0046  
                      ?_PRS_Init 0070                        ?_PRS_Task 0070                        NEG_RESP@c 0070  
              __end_of_ReadBlock 16D4                        ?_WIN_Init 0070                        ?_Calc_Key 0070  
                     ??_I2C_Init 0070                ?_MRF89XACheckRSSI 0070                    ?_IO_GetPIRPin 0070  
     __end_of_NVM_GetBlockLenght 0ACA          __size_of_MNU_TaskButton 0024          __size_of_AirS_Task_Slow 0039  
        PRG_SetNewTemp@sIncrease 007B               ??_MRF89XACheckRSSI 0073            __size_of_Comm_InitMRF 0023  
                  ?_REG_TaskSlow 0070                _WriteNVMBlockSync 0B5C             _Comm_PrepareTransmit 157D  
                    ?_ReloadTime 0070                 ?_DrawSetTempText 0070                       __pbssBANK0 0020  
                     __pbssBANK1 00A0                       __pbssBANK2 0120                       __pbssBANK3 01A0  
                     __pbssBANK4 0220                       __pbssBANK5 02A0                        ?_ReadFIFO 0070  
                        ?_LCD_XY 0072              __size_of_Clock_Init 0025            __size_of_DrawLargeHum 002A  
                        LCD_XY@x 0073                          LCD_XY@y 0072         NVM_WriteBlock@BlockIndex 0070  
                     ??_LCD_Char 0076                        ?_Read_Eep 0070               ?_WriteNVMBlockSync 0070  
                     ??_LCD_Init 0072      __end_of_MRF89XARegisterRead 0E23                       ??_NEG_RESP 0070  
             __end_of_LCD_String 04B4            __size_of_DrawRegPower 006E                       __pmaintext 0B83  
            ??_WriteNVMBlockSync 0075                       ??_REG_Init 0070             __size_of_REG_FZLogic 002C  
          __size_of_DrawTimeDate 0089                          ?___bmul 0070                          ?___lmul 0070  
                        ?___wmul 0070                   ??_REG_GetLevel 0070                 ??_LCD_Large2Dots 0074  
                     ??_MNU_Init 0073                       ??_MNU_Task 007D                       __pintentry 0384  
                     ??_PRG_Init 0070                       ??_POS_RESP 0070                   ___lmul@product 0078  
                     ??_NVM_Init 0074                    ?_RequestReset 0070                       ??_NVM_Task 0074  
                     ??_RTC_Init 0070                          _APFCON0 011D                 ??_LCD_LargeDigit 0076  
           __size_of_IO_CalcTemp 0013                       ??_PRS_Init 0070                       ??_PRS_Task 0071  
              __end_of_WriteFIFO 0EAD                 ??_LCD_LargeMinus 0071                       ??_WIN_Init 0070  
                   _Comm_InitMRF 0E53                       ??_Calc_Key 0071            __end_of_LCD_BCDNumber 04CC  
              ?_MRF89XASetRFMode 0070                __end_of_Write_Eep 0D2F                 ?_App_OnWinSensor 0070  
                 ??_IO_GetPIRPin 0070                      ?_Ports_Init 0070                ?_MRF89XASendFrame 0070  
             ??_MRF89XASetRFMode 0073                     _DrawLargeHum 058C        __end_of_WriteNVMBlockSync 0B6A  
                IO_GetSW1Press@b 0070          NVM_ReadBlockData@offset 0070                   ??_REG_TaskSlow 0071  
                        _IO_Init 151C                          _SSP1BUF 0211                  IO_GetSW2Press@b 0070  
               ??_NVM_WriteBlock 0070                     ?_GetRIRLevel 0070               ??_MRF89XASendFrame 0075  
                        _AdcTemp 00D1                   LCD_ClearLine@i 0071                          _RF_Mode 003B  
                   _DrawRegPower 04EE            ?_Comm_PrepareTransmit 0070                  _WIN_IsOpen$1753 0070  
                     ??_ReadFIFO 0070                      _TempHumFlag 0042                          _ComData 00A0  
                __size_of_LCD_XY 000C                 ??_PRS_OnPIRFrame 0070                     ??_SPI_HF_Get 0070  
                     ??_Read_Eep 0070                     ??_SPI_HF_Put 0070                     _DrawTimeDate 0419  
                      NVM_Task@i 0074                     ??_NVM_IsIdle 0070                          _u16Tics 00E7  
           __size_of_IO_TaskFast 0060                    _RAM_TEMPPROG2 0141             __size_of_IO_TaskSlow 005F  
      __size_of_PRS_RoomPresence 0005                     ??_PRS_Task1s 0070                  __size_of___bmul 000C  
                        ___awdiv 0728                          ___lbdiv 07C0                  __size_of___lmul 0025  
                        ___awmod 0768                          ___lbmod 14C9                  __size_of___wmul 0015  
                 ??_RequestReset 0070                     ??_WIN_IsOpen 0070                   LCD_BitmapV@bmp 0071  
                     _oldSetTemp 00C9             __size_of_RTC_BCD2DEC 000C              __size_of_ReloadTime 0022  
                        __ptext1 146F                          __ptext2 07FA                          __ptext3 1461  
                        __ptext4 14E1                          __ptext5 1449                          __ptext6 08A9  
                        __ptext7 092C                          __ptext8 1454                          __ptext9 14B2  
                    _ProgSetTemp 002E                      _PresenceOff 0037            __end_of_NVM_BlockAddr 1881  
                   __size_of_ISR 0004                     __size_of_ROL 0013            __end_of_NVM_BlockSize 188A  
                      _T2CONbits 001C               __end_of_SPI_HF_Get 0EA4                          _currhum 0049  
             __end_of_SPI_HF_Put 06E6            __size_of_LCD_ClearLCD 0017           __size_of_PrepBlockData 0028  
               ___awmod@dividend 0072               __end_of_NVM_IsIdle 0C99                        _T4CONbits 0417  
       ??_Comm_IsAlreadyReceived 0070                          _nvblock 004D                        _T6CONbits 041E  
           __size_of_UDS_GetSeed 0034                   _IO_StartTimer1 0EB2                   _IO_StartTimer2 087A  
                   ?_Comm_OnIdle 0070        __size_of_DrawClrLastLines 000A             end_of_initialization 038A  
          __size_of_LCD_LargeDot 000C                 ??_IO_GetPIRLevel 0070             __size_of_SPI_HF_Init 000E  
        NVM_GetBlockLenght@Block 0070               __end_of_PRS_Task1s 148D                 ??_IO_GetSW1Press 0070  
               ??_IO_GetSW2Press 0070            __end_of_TransmitFrame 0ED4               __end_of_WIN_IsOpen 057A  
             _MRF89XARegisterSet 0E76                    ?_PRG_TaskSlow 0070                        _RAM_PARAM 00DA  
                 _Comm_RxProcess 0F00           __size_of_IO_DisablePIR 0004                ?_RTC_TimeToNumber 0070  
                 DrawLargeTemp@t 007A              __size_of_Ports_Init 0017              ?_MRF89XARegisterSet 0071  
             ??_RTC_TimeToNumber 0079                     ??_Clock_Init 0070                     _LCD_ClearLCD 1505  
                  WriteFIFO@Data 0071                      POS_RESP@len 0070                        _PORTBbits 000D  
                      _UDS_RDBID 0A40                        _UDS_WDBID 0A09            __end_of_LCD_ClearLine 04DA  
                      _ROM_CRTRL 1820                        _ROM_PARAM 1893                     _LCD_LargeDot 038E  
               ___lbmod@dividend 0072          __size_of_PRG_SetNewTemp 0025                   _MNU_TaskButton 09B2  
                      _TRISAbits 008C                   _AirS_Task_Slow 0C23           __end_of_IO_StartTimer1 0EBC  
         __end_of_IO_StartTimer2 0884       __size_of_WriteNVMBlockSync 000E             ??_MRF89XARegisterSet 0072  
               ??_IO_GetTempMeas 0072           ??_Comm_PrepareTransmit 0071                __size_of_I2C_Init 0004  
           __end_of_REG_GetLevel 0569                      SPI_HF_Put@v 0070                        _AirS_Init 0C0C  
                      _AirS_Task 0C22                      ___lbmod@rem 0074            __end_of_LCD_LargePlus 058C  
                    NVM_IsIdle@i 0070               __end_of_Clock_Init 0C87           __end_of_Comm_RxProcess 0FBD  
                 __end_of_LCD_XY 0657                   ??_PRG_TaskSlow 007C                    ?_RTC_TaskSlow 0070  
              __size_of_LCD_Char 002D                    _PrepBlockData 0ED8                __size_of_LCD_Init 0015  
           __end_of_IO_GetPIRPin 0AC2                __size_of_NEG_RESP 000D                        _ComTxData 00B3  
              ?_App_OnAirTempSig 0070             __end_of_REG_TaskSlow 092C                    ??_LCD_BitmapV 0071  
         __size_of_DetermineMode 001A           __size_of_DetermineProg 0027                   __end_of___bmul 0B33  
                      _Comm_Init 0D2F                __size_of_REG_Init 000D                   __end_of___lmul 08A9  
                      _Comm_Task 1544               ??_App_OnAirTempSig 0070                   __end_of___wmul 0728  
              LCD_Char@character 0076                __size_of_MNU_Init 0008                __size_of_MNU_Task 0075  
                   _MRF89XA_RSSI 0041                       ?_UDS_RDBID 0070                       ?_UDS_WDBID 0070  
              __size_of_PRG_Init 0004                __size_of_POS_RESP 000C           __end_of_MNU_TaskButton 09D6  
              __size_of_NVM_Init 0010                __size_of_NVM_Task 0073                __size_of_RTC_Init 000B  
        __size_of_UDS_CompareKey 0062           __end_of_AirS_Task_Slow 0C5C                __size_of_PRS_Init 0008  
                  _IO_DisablePIR 0ED4                __size_of_PRS_Task 0055                      __end_ofPL10 16E0  
                    __end_ofPL20 0B83                      __end_ofPL12 07EA                      __end_ofPL30 0FEF  
                    __end_ofPL22 0FDF                      __end_ofPL14 07F2                      __end_ofPL32 0FF3  
                    __end_ofPL24 0FE5                      __end_ofPL16 07FA                      __end_ofPL26 1618  
                    __end_ofPL18 0FD9                      __end_ofPL28 0FEA              start_initialization 038A  
                      _ByteCount 003E                __size_of_WIN_Init 0005                __size_of_Calc_Key 0025  
                    __end_of_ISR 0388                     _CurrentBlock 003F                      __end_of_ROL 1800  
                      _ReadBlock 1688                  ?_IO_StartTimer1 0070                  ?_IO_StartTimer2 0070  
                  ??_LCDWriteCMD 0071  __size_of_Comm_IsAlreadyReceived 0045                    ??_MRF89XAInit 0075  
                  ??_MRF89XATask 0075               LCD_BCDNumber@digit 007B                     ??_ReloadTime 0070  
                       ??_LCD_XY 0073             __end_of_RequestReset 14FD             __size_of_GetRIRLevel 0009  
                     ?_AirS_Init 0070                       ?_AirS_Task 0070                  ?_Comm_RxProcess 0070  
                _NVM_BlockStatus 0120                __size_of_ReadFIFO 0008                   ??_RTC_TaskSlow 0070  
                 ?_PrepBlockData 0070               _NVM_GetBlockLenght 0AC2                 _PRS_RoomPresence 0569  
      __size_of_MRF89XACheckRSSI 0005                __size_of_Read_Eep 000B            _MRF89XAStartReception 0D82  
     __end_of_NVM_WriteBlockData 0B5C                    ?_WIN_TaskSlow 0070                         ??___bmul 0071  
        MRF89XARegisterSet@value 0071                         ??___lmul 0078                         ??___wmul 0074  
            ?_NVM_GetBlockLenght 0070                       ?_Comm_Init 0070                       ?_Comm_Task 0070  
       __size_of_App_OnAirHumSig 0009               __end_of_ReloadTime 1760         NVM_WriteBlockData@offset 0070  
                 ?_IO_DisablePIR 0070                  ?_MNU_TaskButton 0070              __end_of_LCD_BitmapV 0564  
         __size_of_Comm_TaskSlow 0009                  ?_AirS_Task_Slow 0070                     ??_Ports_Init 0070  
                      ___latbits 0002                    Write_Eep@badd 0071                        _WriteFIFO 0EA4  
                  __pcstackBANK0 005C                       ?_ReadBlock 0070           __size_of_DrawLargeTemp 0056  
         __size_of_DrawLargeTime 003F                        _bWriteNvm 004A                         ?_IO_Init 0070  
                      _Write_Eep 0D17             ??_NVM_GetBlockLenght 0070                    _DetermineMode 0998  
                  _DetermineProg 0ACA                 _DrawClrLastLines 040F             __size_of_Comm_OnIdle 002B  
      __size_of_MRF89XASetRFMode 0014              __end_of_LCDWriteCMD 07C0           MRF89XAStartReception@i 0075  
                  ??_REG_FZLogic 0070                        __pnvBANK1 00E7              __end_of_MRF89XAInit 0E14  
            __end_of_MRF89XATask 0DCF        __size_of_MRF89XASendFrame 0030         __size_of_DrawSetTempText 0014  
                 ??_WIN_TaskSlow 0070           _Comm_IsAlreadyReceived 15CD               DetermineProg@ctime 007A  
             __end_of_Ports_Init 14C9                    ??_IO_CalcTemp 0070           NVM_ReadBlockData@Block 0074  
                       ?___awdiv 0070                        __ptext100 0EBC                        __ptext101 0E23  
                       ?___lbdiv 0075                        __ptext110 0E14                        __ptext102 0EA4  
                      __ptext111 06DA                        __ptext103 0EB2                        __ptext112 0E98  
                      __ptext104 0ED4                        __ptext113 0C62                        __ptext105 0E53  
                      __ptext114 0C23                        __ptext106 0DD7                        __ptext115 0B1B  
                      __ptext107 0D82                        __ptext116 0B27     __size_of_MRF89XARegisterRead 000F  
                      __ptext108 0E84                        __ptext117 0C5C                        __ptext109 0E76  
                      __ptext118 0C22                        __ptext119 0C0C                         ?___awmod 0070  
                       ?___lbmod 0070          __size_of_RTC_OnRTCFrame 0013                      ??_UDS_RDBID 0077  
                      __pswtext1 133E                        __pswtext2 1348                      ??_UDS_WDBID 0079  
           __end_of_PRG_TaskSlow 0998                         _I2C_Init 0FFC                   _PRG_SetNewTemp 09E4  
          __size_of_REG_GetLevel 0005                     _RAM_TEMPPROG 014F             __end_of_ROM_TEMPPROG 186E  
                     ?_WriteFIFO 0070                       ?_Write_Eep 0070                   ?_DetermineMode 0070  
                 ?_DetermineProg 0070             __end_of_NVM_BlockRAM 1860             __end_of_NVM_BlockROM 184E  
       __size_of_App_OnWinSensor 0022                    ??_IO_TaskFast 0070                      ??_AirS_Init 0070  
                  ??_IO_TaskSlow 007C                      ??_AirS_Task 0070                  ??_PrepBlockData 0070  
                       _LCD_Char 06E6            __size_of_IO_GetPIRPin 0005                         _LCD_Init 07A1  
                 ___wmul@product 0074                         _LATAbits 010C                         _LATBbits 010D  
         ?_MRF89XAStartReception 0070                         _NEG_RESP 0FBD                    _Comm_TaskSlow 0FF3  
              LCD_Large2Dots@bON 0074            __size_of_REG_TaskSlow 0083                       UDS_RDBID@i 0078  
                     UDS_RDBID@k 007A             NVM_WriteBlockData@pr 0076           __size_of_LCD_BCDNumber 0018  
                       _RAM_CTRL 02BE                         _RAM_NWID 00D5                    _DrawLargeTemp 05F5  
                  _DrawLargeTime 05B6                       UDS_WDBID@i 007A                       UDS_WDBID@j 0079  
                     UDS_WDBID@k 007B               LCD_LargeDigit@offs 0078                         _REG_Init 1454  
                  ??_RTC_BCD2DEC 0073                         _PIRFlags 0030                         _SSP1CON1 0215  
                       _SSP1CON2 0216                         _SSP1CON3 0217                         _MNU_Init 14FD  
            __end_of_REG_FZLogic 0958                      _LCD_BitmapV 055C                         _MNU_Task 039A  
                       _SSP1STAT 0214                      ??_Comm_Init 0078                      ??_Comm_Task 0071  
                       _PRG_Init 0B79                         _POS_RESP 0AB1                     _REG_GetLevel 0564  
                       _ROM_NWID 1898                         _NVM_Init 1678                         _NVM_Task 0C99  
                       _RTC_Init 1449                         _NVMState 003C                  ??_IO_DisablePIR 0070  
                       _PRS_Init 0800                         _PRS_Task 16E0                       _ADCON0bits 009D  
                       _WIN_Init 07FA                ___wmul@multiplier 0070           __end_of_PRG_SetNewTemp 0A09  
                       _Calc_Key 17C8                        _startTemp 00CB                        _startTime 00CD  
                 _UDS_CompareKey 1766              __end_of_IO_CalcTemp 087A             __end_of_RTC_TaskSlow 14F8  
              MRF89XASendFrame@i 0075        __size_of_RTC_TimeToNumber 0011                         _DateTime 00BC  
                LCDWriteCMD@data 0071                    ??_UDS_GetSeed 0071                      ??_ReadBlock 0073  
        __size_of_LCD_Large2Dots 002B            __size_of_RequestReset 0005                     _IO_GetPIRPin 0ABD  
             IO_StartTimer1@Time 0070               IO_StartTimer2@Time 0070                    ??_SPI_HF_Init 0070  
              ??_App_OnAirHumSig 0070                      _LCDWriteCMD 07B6                 __size_of_IO_Init 0028  
        __size_of_LCD_LargeDigit 0046                     _REG_TaskSlow 08A9                ___lmul@multiplier 0070  
                    _MRF89XAInit 0DD7                      _MRF89XATask 0D93          __size_of_LCD_LargeMinus 0012  
                       _ReadFIFO 0DCF                         _u16Reset 00D3                         _Read_Eep 0D0C  
                 ?_Comm_TaskSlow 0070                       _EECON1bits 0195                 _MRF89XACheckRSSI 0EAD  
                 ?_DrawLargeTemp 007A                     _TEMP_HISTORY 0129                   ?_DrawLargeTime 0070  
        __size_of_NVM_WriteBlock 0007              __end_of_IO_TaskFast 1678                         _RxPacket 01A0  
                 _REG_PARAMS_RAM 00E3                   _REG_PARAMS_ROM 18A1              __end_of_IO_TaskSlow 0867  
        NVM_WriteBlockData@Block 0078                         _TxPacket 0220          __size_of_PRS_OnPIRFrame 0020  
               __size_of___awdiv 0040                 __size_of___lbdiv 0018                 __size_of___awmod 0039  
               __size_of___lbmod 0018           __end_of_UDS_CompareKey 17C8                         _WorkBuff 02A0  
              ??_DrawSetTempText 007D                     _RequestReset 14F8    MRF89XASetRFMode@mcparam0_read 0073  
               ??_IO_StartTimer1 0070                 ??_IO_StartTimer2 0070                  ?_PRG_SetNewTemp 0070  
            __end_of_RTC_BCD2DEC 0B27           __size_of_TransmitFrame 0018         __end_of_PRS_RoomPresence 056E  
                  _LCD_BCDNumber 04B4                  ??_DetermineMode 007C                  ??_DetermineProg 007A  
                    ??_WriteFIFO 0071        __size_of_App_OnAirTempSig 0012                _NVM_ReadBlockData 0AF1  
           __end_of_WIN_TaskSlow 147D                      ??_Write_Eep 0071                         __ptext10 147D  
    __size_of_MRF89XARegisterSet 000E                         __ptext11 16E0                         __ptext20 0B79  
                       __ptext12 173E                         __ptext21 1678                         __ptext13 1735  
                       __ptext30 04A2                         __ptext22 09B2                         __ptext14 1760  
                       __ptext31 04EE                         __ptext23 09E4                         __ptext15 0800  
                       __ptext40 0768                         __ptext32 056E                         __ptext24 09DD  
                       __ptext16 098C                         __ptext41 0728                         __ptext33 0569  
                       __ptext25 09D6                         __ptext17 0998                         __ptext50 06E6  
                       __ptext42 057A                         __ptext34 055C                         __ptext26 039A  
                       __ptext18 0ACA                         __ptext51 0713                         __ptext43 069D  
                       __ptext35 05B6                         __ptext27 0419                         __ptext19 0B0A  
                       __ptext60 1618                         __ptext52 14FD                         __ptext44 038E  
                       __ptext36 06AF                         __ptext28 04B4                         __ptext61 151C  
                       __ptext53 1505                         __ptext45 058C                         __ptext37 040F  
                       __ptext29 04DA                         __ptext70 0A09                         __ptext62 0FFC  
                       __ptext54 07A1                         __ptext46 14C9                         __ptext38 04CC  
                       __ptext71 0B5C                         __ptext63 0FF3                         __ptext55 07B6  
                       __ptext47 07C0                         __ptext39 05F5                         __ptext80 0564  
                       __ptext72 0B6A                         __ptext64 1544                         __ptext56 0808  
                       __ptext48 0657                         __ptext81 0AF1                         __ptext73 0C99  
                       __ptext65 0D57                         __ptext57 0884                         __ptext49 064B  
                       __ptext90 17ED                         __ptext82 0C87                         __ptext74 0D17  
                       __ptext66 0D93                         __ptext58 087A                         __ptext91 14F8  
                       __ptext83 0AC2                         __ptext75 1688                         __ptext67 0DCF  
                       __ptext59 0867                         __ptext92 149F                         __ptext84 0ABD  
                       __ptext76 0D0C                         __ptext68 0EAD                         __ptext93 1584  
                       __ptext85 0958                         __ptext77 0ED8                         __ptext69 0F00  
                       __ptext94 157D                         __ptext86 1766                         __ptext78 0B33  
                       __ptext95 15CD                         __ptext87 0AB1                         __ptext79 0A40  
                       __ptext96 15A4                         __ptext88 0FBD                         __ptext97 148D  
                       __ptext89 17C8                         __ptext98 0FCA                         __ptext99 0D2F  
               MRF89XAInit@input 0076                 ??_Comm_RxProcess 007C                     _SSP1CON1bits 0215  
                     AirS_Init@i 0070               ?_NVM_ReadBlockData 0070                         _evalCntr 004E  
  __size_of_Comm_PrepareTransmit 0007                      _RAM_PIRDATA 015D              __end_of_ROM_PIRDATA 1893  
                   _PresenceTime 0028             MRF89XASetRFMode@mode 0074              __end_of_UDS_GetSeed 098C  
     MRF89XARegisterRead@address 0072                 _MRF89XASetRFMode 0E84              __end_of_SPI_HF_Init 146F  
                  __size_of_main 0089                         _currtemp 002C           __end_of_REG_PARAMS_ROM 18A5  
              LCD_ClearLCD@index 0071              ??_NVM_ReadBlockData 0071                      _REG_FZLogic 092C  
         __size_of_LCD_ClearLine 000E                 _MRF89XASendFrame 0E23                ??_App_OnWinSensor 0070  
              LCD_LargeDigit@dig 0076          __size_of_IO_GetPIRLevel 0006                         int$flags 007E  
        __size_of_IO_GetSW1Press 0007                      _IO_CalcTemp 0867          __size_of_IO_GetSW2Press 0007  
               ??_MNU_TaskButton 007C         __end_of_DrawClrLastLines 0419                   _RTC_OnRTCFrame 149F  
          __size_of_PRG_TaskSlow 000C                 ??_AirS_Task_Slow 0075                  ?_UDS_CompareKey 0070  
                     _LCD_String 04A2                    ?_Comm_InitMRF 0070           __size_of_LCD_LargePlus 0012  
                 ?_LCD_BCDNumber 007A                     RTC_BCD2DEC@x 0074                     RTC_BCD2DEC@y 0073  
      __end_of_NVM_ReadBlockData 0B0A                    _NVM_BlockAddr 1878                       _INTCONbits 000B  
             _NVM_WriteBlockData 0B33                    _NVM_BlockSize 1881                    ?_DrawLargeHum 0070  
                 __pstringtext10 188A                   __pstringtext11 1893                   __pstringtext20 18B5  
                 __pstringtext12 1898                   __pstringtext21 18B9                   __pstringtext13 189D  
                 __pstringtext22 18BD                   __pstringtext14 18A1                   __pstringtext23 18C1  
                 __pstringtext15 186E                   __pstringtext24 18C5                   __pstringtext16 18A5  
                 __pstringtext25 18C9                   __pstringtext17 18A9                   __pstringtext26 18CD  
                 __pstringtext18 18AD                   __pstringtext27 18D1                   __pstringtext19 18B1  
                 __pstringtext28 18D5                   __pstringtext29 0000                    ??_GetRIRLevel 0070  
         NVM_WriteBlockData@data 0071                    ?_DrawRegPower 0070              _MRF89XARegisterRead 0E14  
            ?_NVM_WriteBlockData 0070                         intlevel1 0000                  ??_Comm_TaskSlow 0070  
                    _IO_TaskFast 1618                    ?_DrawTimeDate 0070                      _IO_TaskSlow 0808  
                ??_DrawLargeTemp 007C                  ??_DrawLargeTime 007A                    _TransmitFrame 0EBC  
        ?_Comm_IsAlreadyReceived 0070          __size_of_IO_GetTempMeas 0006                     _PRG_TaskSlow 098C  
                     _OSCCONbits 0099                     _ROM_TEMPPROG 1860                 ReloadTime@bLocal 0070  
         __end_of_RTC_OnRTCFrame 14B2             ?_MRF89XARegisterRead 0070                      _RTC_BCD2DEC 0B1B  
           ??_NVM_WriteBlockData 0072            __size_of_RTC_TaskSlow 0017                     _NVM_BlockRAM 184E  
                   _NVM_BlockROM 183C                   ??_Comm_InitMRF 0078                    __pstringtext1 1000  
                  __pstringtext2 11D6                    __pstringtext3 1800                    __pstringtext4 183C  
                  __pstringtext5 184E                    __pstringtext6 1878                    __pstringtext7 1881  
                  __pstringtext8 1820                    __pstringtext9 1860                       _OPTION_REG 0095  
               _ROM_TEMP_REGDATA 189D                    _LCD_ClearLine 04CC                   MRF89XAInit@res 0075  
                 ??_DrawLargeHum 007A                 _RTC_TimeToNumber 0B0A              NVM_ReadBlockData@pr 0075  
                 _LCD_Large2Dots 06AF                      _ROM_PIRDATA 188A                      _UDS_GetSeed 0958  
                LCD_LargeDigit@i 0077                   ??_DrawRegPower 007A                      _SPI_HF_Init 1461  
                 _LCD_LargeDigit 0657                    ??_Comm_OnIdle 007C                   _LCD_LargeMinus 069D  
    __size_of_NVM_GetBlockLenght 0008                      _AdcTempFilt 00C3          ??_MRF89XAStartReception 0075  
                 ??_DrawTimeDate 007D   __end_of_Comm_IsAlreadyReceived 1612                   ?_TransmitFrame 0070  
                     _SPI_HF_Get 0E98        MRF89XARegisterSet@address 0072                       _SPI_HF_Put 06DA  
                     _NVM_IsIdle 0C87                    _LCD_LargePlus 057A              __end_of_GetRIRLevel 173E  
                     _AdcTempCnt 0058                   _NVM_WriteBlock 0B6A                     _RTC_TaskSlow 14E1  
